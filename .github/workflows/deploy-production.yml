name: Deploy to Production

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build frontend
      run: |
        cd packages/frontend
        npm run build
        cd ../..
        
    - name: Setup Cloudflare credentials
      run: |
        echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV
        echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
        
    - name: Make deployment script executable
      run: chmod +x scripts/deploy-production.sh
      
    - name: Deploy to production
      run: ./scripts/deploy-production.sh
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Verify deployment
      run: |
        echo "Waiting for deployment to stabilize..."
        sleep 30
        
        echo "Testing production deployment..."
        PROD_URL="https://ca-prod.ca-prod.workers.dev/health"
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL" || echo "000")
        
        if [ "$RESPONSE" = "200" ]; then
          echo "‚úÖ Production deployment successful!"
          echo "üåê Production URL: $PROD_URL"
        else
          echo "‚ùå Production deployment failed (HTTP $RESPONSE)"
          exit 1
        fi 