{
  "name": "cruiser-aviation-platform",
  "version": "1.0.0",
  "description": "Modern web and mobile application to manage operations of Cruiser Aviation flight school and aircraft rental business",
  "private": true,
  "type": "module",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "npx wrangler dev --config wrangler-api.toml --env staging --port 8787",
    "dev:frontend": "cd packages/frontend && npm run dev",
    "dev:local": "concurrently \"cd packages/frontend && npm run dev:simple\" \"cd packages/frontend && npm run api:dev\"",
    "dev:worker": "npx wrangler dev --env local --port 8788",
    "build": "npm run build:frontend",
    "build:backend": "cd packages/backend && npm run build",
    "build:frontend": "cd packages/frontend && npm run build",
    "install:all": "npm install && cd packages/backend && npm install && cd ../frontend && npm install",
    "setup": "npm run install:all && npm run setup:db",
    "setup:db": "cd packages/backend && npm run migration:run",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd packages/backend && npm run test",
    "test:frontend": "cd packages/frontend && npm run test",
    "populate:staging": "node scripts/populate-environments.js staging",
    "populate:production": "node scripts/populate-environments.js production",
    "populate:all": "node scripts/populate-environments.js staging production",
    "worker:dev": "wrangler dev --env local",
    "worker:dev:staging": "wrangler dev --env staging",
    "worker:dev:production": "wrangler dev --env production",
    "worker:deploy:staging": "wrangler deploy --env staging",
    "worker:deploy:production": "wrangler deploy --env production",
    "worker:build": "wrangler build",
    "worker:tail:staging": "wrangler tail --env staging",
    "worker:tail:production": "wrangler tail --env production",
    "start": "cd packages/frontend && npm run start",
    "lint": "cd packages/frontend && npm run lint",
    "deploy:staging": "npm run build && npx wrangler deploy --env staging",
    "deploy:production": "npm run build && npx wrangler deploy --env production",
    "deploy:api:staging": "cd packages/backend && npm install && npm run build && npx wrangler deploy --env api-staging",
    "deploy:api:production": "cd packages/backend && npm install && npm run build && npx wrangler deploy --env api",
    "db:migrate:staging": "cd packages/backend && npm run db:migrate",
    "db:migrate:production": "cd packages/backend && npm run db:migrate:prod",
    "deploy:all:staging": "npm run deploy:api:staging && npm run deploy:staging",
    "deploy:all:production": "npm run deploy:api:production && npm run deploy:production",
    "setup:api": "cd packages/backend && npm install && npm run build",
    "dev:api": "cd packages/backend && npm run start:dev",
    "build:api": "cd packages/backend && npm run build",
    "test:api": "cd packages/backend && npm run test",
    "lint:api": "cd packages/backend && npm run lint"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "typescript": "^5.3.3",
    "wrangler": "^4.23.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "aviation",
    "flight-school",
    "aircraft-rental",
    "nestjs",
    "react",
    "typescript"
  ],
  "author": "Cruiser Aviation",
  "license": "MIT"
}
