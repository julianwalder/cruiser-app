import{r as e,a as t,b as s,c as r,g as i}from"./vendor-D3_nuSBh.js";import{L as n,R as a,a as o,u as l,b as c,B as d}from"./router-9aFX2DwP.js";import{P as u,A as h,a as m,U as f,C as p,S as g,M as x,b as y,c as b,d as v,X as j,L as N,e as w,B as k,f as C,g as I,h as S,T as E,i as T,j as _,F as A,k as P,l as O,m as D,V as R,n as L,o as M,p as F,q as U,O as B}from"./ui-gyVVzNmC.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var H={exports:{}},V={},z=e,q=Symbol.for("react.element"),$=Symbol.for("react.fragment"),W=Object.prototype.hasOwnProperty,K=z.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,G={key:!0,ref:!0,__self:!0,__source:!0};function J(e,t,s){var r,i={},n=null,a=null;for(r in void 0!==s&&(n=""+s),void 0!==t.key&&(n=""+t.key),void 0!==t.ref&&(a=t.ref),t)W.call(t,r)&&!G.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===i[r]&&(i[r]=t[r]);return{$$typeof:q,type:e,key:n,ref:a,props:i,_owner:K.current}}V.Fragment=$,V.jsx=J,V.jsxs=J,H.exports=V;var Y=H.exports,Q={},X=t;function Z(e,t){return(Z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function ee(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Z(e,t)}Q.createRoot=X.createRoot,Q.hydrateRoot=X.hydrateRoot;var te=function(){function e(){this.listeners=[]}var t=e.prototype;return t.subscribe=function(e){var t=this,s=e||function(){};return this.listeners.push(s),this.onSubscribe(),function(){t.listeners=t.listeners.filter(function(e){return e!==s}),t.onUnsubscribe()}},t.hasListeners=function(){return this.listeners.length>0},t.onSubscribe=function(){},t.onUnsubscribe=function(){},e}();function se(){return se=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)({}).hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e},se.apply(null,arguments)}var re="undefined"==typeof window;function ie(){}function ne(e){return Array.isArray(e)?e:[e]}function ae(e,t,s){return xe(e)?"function"==typeof t?se({},s,{queryKey:e,queryFn:t}):se({},t,{queryKey:e}):e}function oe(e,t,s){return xe(e)?[se({},t,{queryKey:e}),s]:[e||{},t]}function le(e,t){var s=e.active,r=e.exact,i=e.fetching,n=e.inactive,a=e.predicate,o=e.queryKey,l=e.stale;if(xe(o))if(r){if(t.queryHash!==de(o,t.options))return!1}else if(!he(t.queryKey,o))return!1;var c=function(e,t){return!0===e&&!0===t||null==e&&null==t?"all":!1===e&&!1===t?"none":(null!=e?e:!t)?"active":"inactive"}(s,n);if("none"===c)return!1;if("all"!==c){var d=t.isActive();if("active"===c&&!d)return!1;if("inactive"===c&&d)return!1}return("boolean"!=typeof l||t.isStale()===l)&&(("boolean"!=typeof i||t.isFetching()===i)&&!(a&&!a(t)))}function ce(e,t){var s=e.exact,r=e.fetching,i=e.predicate,n=e.mutationKey;if(xe(n)){if(!t.options.mutationKey)return!1;if(s){if(ue(t.options.mutationKey)!==ue(n))return!1}else if(!he(t.options.mutationKey,n))return!1}return("boolean"!=typeof r||"loading"===t.state.status===r)&&!(i&&!i(t))}function de(e,t){return((null==t?void 0:t.queryKeyHashFn)||ue)(e)}function ue(e){var t,s=ne(e);return t=s,JSON.stringify(t,function(e,t){return pe(t)?Object.keys(t).sort().reduce(function(e,s){return e[s]=t[s],e},{}):t})}function he(e,t){return me(ne(e),ne(t))}function me(e,t){return e===t||typeof e==typeof t&&(!(!e||!t||"object"!=typeof e||"object"!=typeof t)&&!Object.keys(t).some(function(s){return!me(e[s],t[s])}))}function fe(e,t){if(e===t)return e;var s=Array.isArray(e)&&Array.isArray(t);if(s||pe(e)&&pe(t)){for(var r=s?e.length:Object.keys(e).length,i=s?t:Object.keys(t),n=i.length,a=s?[]:{},o=0,l=0;l<n;l++){var c=s?l:i[l];a[c]=fe(e[c],t[c]),a[c]===e[c]&&o++}return r===n&&o===r?e:a}return t}function pe(e){if(!ge(e))return!1;var t=e.constructor;if(void 0===t)return!0;var s=t.prototype;return!!ge(s)&&!!s.hasOwnProperty("isPrototypeOf")}function ge(e){return"[object Object]"===Object.prototype.toString.call(e)}function xe(e){return"string"==typeof e||Array.isArray(e)}function ye(e){Promise.resolve().then(e).catch(function(e){return setTimeout(function(){throw e})})}function be(){if("function"==typeof AbortController)return new AbortController}var ve=new(function(e){function t(){var t;return(t=e.call(this)||this).setup=function(e){var t;if(!re&&(null==(t=window)?void 0:t.addEventListener)){var s=function(){return e()};return window.addEventListener("visibilitychange",s,!1),window.addEventListener("focus",s,!1),function(){window.removeEventListener("visibilitychange",s),window.removeEventListener("focus",s)}}},t}ee(t,e);var s=t.prototype;return s.onSubscribe=function(){this.cleanup||this.setEventListener(this.setup)},s.onUnsubscribe=function(){var e;this.hasListeners()||(null==(e=this.cleanup)||e.call(this),this.cleanup=void 0)},s.setEventListener=function(e){var t,s=this;this.setup=e,null==(t=this.cleanup)||t.call(this),this.cleanup=e(function(e){"boolean"==typeof e?s.setFocused(e):s.onFocus()})},s.setFocused=function(e){this.focused=e,e&&this.onFocus()},s.onFocus=function(){this.listeners.forEach(function(e){e()})},s.isFocused=function(){return"boolean"==typeof this.focused?this.focused:"undefined"==typeof document||[void 0,"visible","prerender"].includes(document.visibilityState)},t}(te)),je=new(function(e){function t(){var t;return(t=e.call(this)||this).setup=function(e){var t;if(!re&&(null==(t=window)?void 0:t.addEventListener)){var s=function(){return e()};return window.addEventListener("online",s,!1),window.addEventListener("offline",s,!1),function(){window.removeEventListener("online",s),window.removeEventListener("offline",s)}}},t}ee(t,e);var s=t.prototype;return s.onSubscribe=function(){this.cleanup||this.setEventListener(this.setup)},s.onUnsubscribe=function(){var e;this.hasListeners()||(null==(e=this.cleanup)||e.call(this),this.cleanup=void 0)},s.setEventListener=function(e){var t,s=this;this.setup=e,null==(t=this.cleanup)||t.call(this),this.cleanup=e(function(e){"boolean"==typeof e?s.setOnline(e):s.onOnline()})},s.setOnline=function(e){this.online=e,e&&this.onOnline()},s.onOnline=function(){this.listeners.forEach(function(e){e()})},s.isOnline=function(){return"boolean"==typeof this.online?this.online:"undefined"==typeof navigator||void 0===navigator.onLine||navigator.onLine},t}(te));function Ne(e){return Math.min(1e3*Math.pow(2,e),3e4)}function we(e){return"function"==typeof(null==e?void 0:e.cancel)}var ke=function(e){this.revert=null==e?void 0:e.revert,this.silent=null==e?void 0:e.silent};function Ce(e){return e instanceof ke}var Ie=function(e){var t,s,r,i,n=this,a=!1;this.abort=e.abort,this.cancel=function(e){return null==t?void 0:t(e)},this.cancelRetry=function(){a=!0},this.continueRetry=function(){a=!1},this.continue=function(){return null==s?void 0:s()},this.failureCount=0,this.isPaused=!1,this.isResolved=!1,this.isTransportCancelable=!1,this.promise=new Promise(function(e,t){r=e,i=t});var o=function(t){n.isResolved||(n.isResolved=!0,null==e.onSuccess||e.onSuccess(t),null==s||s(),r(t))},l=function(t){n.isResolved||(n.isResolved=!0,null==e.onError||e.onError(t),null==s||s(),i(t))};!function r(){if(!n.isResolved){var i;try{i=e.fn()}catch(c){i=Promise.reject(c)}t=function(e){if(!n.isResolved&&(l(new ke(e)),null==n.abort||n.abort(),we(i)))try{i.cancel()}catch(t){}},n.isTransportCancelable=we(i),Promise.resolve(i).then(o).catch(function(t){var i,o;if(!n.isResolved){var c,d=null!=(i=e.retry)?i:3,u=null!=(o=e.retryDelay)?o:Ne,h="function"==typeof u?u(n.failureCount,t):u,m=!0===d||"number"==typeof d&&n.failureCount<d||"function"==typeof d&&d(n.failureCount,t);if(!a&&m)n.failureCount++,null==e.onFail||e.onFail(n.failureCount,t),(c=h,new Promise(function(e){setTimeout(e,c)})).then(function(){if(!ve.isFocused()||!je.isOnline())return new Promise(function(t){s=t,n.isPaused=!0,null==e.onPause||e.onPause()}).then(function(){s=void 0,n.isPaused=!1,null==e.onContinue||e.onContinue()})}).then(function(){a?l(t):r()});else l(t)}})}}()},Se=function(){function e(){this.queue=[],this.transactions=0,this.notifyFn=function(e){e()},this.batchNotifyFn=function(e){e()}}var t=e.prototype;return t.batch=function(e){var t;this.transactions++;try{t=e()}finally{this.transactions--,this.transactions||this.flush()}return t},t.schedule=function(e){var t=this;this.transactions?this.queue.push(e):ye(function(){t.notifyFn(e)})},t.batchCalls=function(e){var t=this;return function(){for(var s=arguments.length,r=new Array(s),i=0;i<s;i++)r[i]=arguments[i];t.schedule(function(){e.apply(void 0,r)})}},t.flush=function(){var e=this,t=this.queue;this.queue=[],t.length&&ye(function(){e.batchNotifyFn(function(){t.forEach(function(t){e.notifyFn(t)})})})},t.setNotifyFunction=function(e){this.notifyFn=e},t.setBatchNotifyFunction=function(e){this.batchNotifyFn=e},e}(),Ee=new Se,Te=console;function _e(){return Te}var Ae=function(){function e(e){this.abortSignalConsumed=!1,this.hadObservers=!1,this.defaultOptions=e.defaultOptions,this.setOptions(e.options),this.observers=[],this.cache=e.cache,this.queryKey=e.queryKey,this.queryHash=e.queryHash,this.initialState=e.state||this.getDefaultState(this.options),this.state=this.initialState,this.meta=e.meta,this.scheduleGc()}var t=e.prototype;return t.setOptions=function(e){var t;this.options=se({},this.defaultOptions,e),this.meta=null==e?void 0:e.meta,this.cacheTime=Math.max(this.cacheTime||0,null!=(t=this.options.cacheTime)?t:3e5)},t.setDefaultOptions=function(e){this.defaultOptions=e},t.scheduleGc=function(){var e,t=this;this.clearGcTimeout(),"number"==typeof(e=this.cacheTime)&&e>=0&&e!==1/0&&(this.gcTimeout=setTimeout(function(){t.optionalRemove()},this.cacheTime))},t.clearGcTimeout=function(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)},t.optionalRemove=function(){this.observers.length||(this.state.isFetching?this.hadObservers&&this.scheduleGc():this.cache.remove(this))},t.setData=function(e,t){var s,r,i=this.state.data,n=function(e,t){return"function"==typeof e?e(t):e}(e,i);return(null==(s=(r=this.options).isDataEqual)?void 0:s.call(r,i,n))?n=i:!1!==this.options.structuralSharing&&(n=fe(i,n)),this.dispatch({data:n,type:"success",dataUpdatedAt:null==t?void 0:t.updatedAt}),n},t.setState=function(e,t){this.dispatch({type:"setState",state:e,setStateOptions:t})},t.cancel=function(e){var t,s=this.promise;return null==(t=this.retryer)||t.cancel(e),s?s.then(ie).catch(ie):Promise.resolve()},t.destroy=function(){this.clearGcTimeout(),this.cancel({silent:!0})},t.reset=function(){this.destroy(),this.setState(this.initialState)},t.isActive=function(){return this.observers.some(function(e){return!1!==e.options.enabled})},t.isFetching=function(){return this.state.isFetching},t.isStale=function(){return this.state.isInvalidated||!this.state.dataUpdatedAt||this.observers.some(function(e){return e.getCurrentResult().isStale})},t.isStaleByTime=function(e){return void 0===e&&(e=0),this.state.isInvalidated||!this.state.dataUpdatedAt||!function(e,t){return Math.max(e+(t||0)-Date.now(),0)}(this.state.dataUpdatedAt,e)},t.onFocus=function(){var e,t=this.observers.find(function(e){return e.shouldFetchOnWindowFocus()});t&&t.refetch(),null==(e=this.retryer)||e.continue()},t.onOnline=function(){var e,t=this.observers.find(function(e){return e.shouldFetchOnReconnect()});t&&t.refetch(),null==(e=this.retryer)||e.continue()},t.addObserver=function(e){-1===this.observers.indexOf(e)&&(this.observers.push(e),this.hadObservers=!0,this.clearGcTimeout(),this.cache.notify({type:"observerAdded",query:this,observer:e}))},t.removeObserver=function(e){-1!==this.observers.indexOf(e)&&(this.observers=this.observers.filter(function(t){return t!==e}),this.observers.length||(this.retryer&&(this.retryer.isTransportCancelable||this.abortSignalConsumed?this.retryer.cancel({revert:!0}):this.retryer.cancelRetry()),this.cacheTime?this.scheduleGc():this.cache.remove(this)),this.cache.notify({type:"observerRemoved",query:this,observer:e}))},t.getObserversCount=function(){return this.observers.length},t.invalidate=function(){this.state.isInvalidated||this.dispatch({type:"invalidate"})},t.fetch=function(e,t){var s,r,i,n=this;if(this.state.isFetching)if(this.state.dataUpdatedAt&&(null==t?void 0:t.cancelRefetch))this.cancel({silent:!0});else if(this.promise){var a;return null==(a=this.retryer)||a.continueRetry(),this.promise}if(e&&this.setOptions(e),!this.options.queryFn){var o=this.observers.find(function(e){return e.options.queryFn});o&&this.setOptions(o.options)}var l=ne(this.queryKey),c=be(),d={queryKey:l,pageParam:void 0,meta:this.meta};Object.defineProperty(d,"signal",{enumerable:!0,get:function(){if(c)return n.abortSignalConsumed=!0,c.signal}});var u,h,m={fetchOptions:t,options:this.options,queryKey:l,state:this.state,fetchFn:function(){return n.options.queryFn?(n.abortSignalConsumed=!1,n.options.queryFn(d)):Promise.reject("Missing queryFn")},meta:this.meta};(null==(s=this.options.behavior)?void 0:s.onFetch)&&(null==(u=this.options.behavior)||u.onFetch(m));(this.revertState=this.state,this.state.isFetching&&this.state.fetchMeta===(null==(r=m.fetchOptions)?void 0:r.meta))||this.dispatch({type:"fetch",meta:null==(h=m.fetchOptions)?void 0:h.meta});return this.retryer=new Ie({fn:m.fetchFn,abort:null==c||null==(i=c.abort)?void 0:i.bind(c),onSuccess:function(e){n.setData(e),null==n.cache.config.onSuccess||n.cache.config.onSuccess(e,n),0===n.cacheTime&&n.optionalRemove()},onError:function(e){Ce(e)&&e.silent||n.dispatch({type:"error",error:e}),Ce(e)||(null==n.cache.config.onError||n.cache.config.onError(e,n),_e().error(e)),0===n.cacheTime&&n.optionalRemove()},onFail:function(){n.dispatch({type:"failed"})},onPause:function(){n.dispatch({type:"pause"})},onContinue:function(){n.dispatch({type:"continue"})},retry:m.options.retry,retryDelay:m.options.retryDelay}),this.promise=this.retryer.promise,this.promise},t.dispatch=function(e){var t=this;this.state=this.reducer(this.state,e),Ee.batch(function(){t.observers.forEach(function(t){t.onQueryUpdate(e)}),t.cache.notify({query:t,type:"queryUpdated",action:e})})},t.getDefaultState=function(e){var t="function"==typeof e.initialData?e.initialData():e.initialData,s=void 0!==e.initialData?"function"==typeof e.initialDataUpdatedAt?e.initialDataUpdatedAt():e.initialDataUpdatedAt:0,r=void 0!==t;return{data:t,dataUpdateCount:0,dataUpdatedAt:r?null!=s?s:Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchMeta:null,isFetching:!1,isInvalidated:!1,isPaused:!1,status:r?"success":"idle"}},t.reducer=function(e,t){var s,r;switch(t.type){case"failed":return se({},e,{fetchFailureCount:e.fetchFailureCount+1});case"pause":return se({},e,{isPaused:!0});case"continue":return se({},e,{isPaused:!1});case"fetch":return se({},e,{fetchFailureCount:0,fetchMeta:null!=(s=t.meta)?s:null,isFetching:!0,isPaused:!1},!e.dataUpdatedAt&&{error:null,status:"loading"});case"success":return se({},e,{data:t.data,dataUpdateCount:e.dataUpdateCount+1,dataUpdatedAt:null!=(r=t.dataUpdatedAt)?r:Date.now(),error:null,fetchFailureCount:0,isFetching:!1,isInvalidated:!1,isPaused:!1,status:"success"});case"error":var i=t.error;return Ce(i)&&i.revert&&this.revertState?se({},this.revertState):se({},e,{error:i,errorUpdateCount:e.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:e.fetchFailureCount+1,isFetching:!1,isPaused:!1,status:"error"});case"invalidate":return se({},e,{isInvalidated:!0});case"setState":return se({},e,t.state);default:return e}},e}(),Pe=function(e){function t(t){var s;return(s=e.call(this)||this).config=t||{},s.queries=[],s.queriesMap={},s}ee(t,e);var s=t.prototype;return s.build=function(e,t,s){var r,i=t.queryKey,n=null!=(r=t.queryHash)?r:de(i,t),a=this.get(n);return a||(a=new Ae({cache:this,queryKey:i,queryHash:n,options:e.defaultQueryOptions(t),state:s,defaultOptions:e.getQueryDefaults(i),meta:t.meta}),this.add(a)),a},s.add=function(e){this.queriesMap[e.queryHash]||(this.queriesMap[e.queryHash]=e,this.queries.push(e),this.notify({type:"queryAdded",query:e}))},s.remove=function(e){var t=this.queriesMap[e.queryHash];t&&(e.destroy(),this.queries=this.queries.filter(function(t){return t!==e}),t===e&&delete this.queriesMap[e.queryHash],this.notify({type:"queryRemoved",query:e}))},s.clear=function(){var e=this;Ee.batch(function(){e.queries.forEach(function(t){e.remove(t)})})},s.get=function(e){return this.queriesMap[e]},s.getAll=function(){return this.queries},s.find=function(e,t){var s=oe(e,t)[0];return void 0===s.exact&&(s.exact=!0),this.queries.find(function(e){return le(s,e)})},s.findAll=function(e,t){var s=oe(e,t)[0];return Object.keys(s).length>0?this.queries.filter(function(e){return le(s,e)}):this.queries},s.notify=function(e){var t=this;Ee.batch(function(){t.listeners.forEach(function(t){t(e)})})},s.onFocus=function(){var e=this;Ee.batch(function(){e.queries.forEach(function(e){e.onFocus()})})},s.onOnline=function(){var e=this;Ee.batch(function(){e.queries.forEach(function(e){e.onOnline()})})},t}(te),Oe=function(){function e(e){this.options=se({},e.defaultOptions,e.options),this.mutationId=e.mutationId,this.mutationCache=e.mutationCache,this.observers=[],this.state=e.state||{context:void 0,data:void 0,error:null,failureCount:0,isPaused:!1,status:"idle",variables:void 0},this.meta=e.meta}var t=e.prototype;return t.setState=function(e){this.dispatch({type:"setState",state:e})},t.addObserver=function(e){-1===this.observers.indexOf(e)&&this.observers.push(e)},t.removeObserver=function(e){this.observers=this.observers.filter(function(t){return t!==e})},t.cancel=function(){return this.retryer?(this.retryer.cancel(),this.retryer.promise.then(ie).catch(ie)):Promise.resolve()},t.continue=function(){return this.retryer?(this.retryer.continue(),this.retryer.promise):this.execute()},t.execute=function(){var e,t=this,s="loading"===this.state.status,r=Promise.resolve();return s||(this.dispatch({type:"loading",variables:this.options.variables}),r=r.then(function(){null==t.mutationCache.config.onMutate||t.mutationCache.config.onMutate(t.state.variables,t)}).then(function(){return null==t.options.onMutate?void 0:t.options.onMutate(t.state.variables)}).then(function(e){e!==t.state.context&&t.dispatch({type:"loading",context:e,variables:t.state.variables})})),r.then(function(){return t.executeMutation()}).then(function(s){e=s,null==t.mutationCache.config.onSuccess||t.mutationCache.config.onSuccess(e,t.state.variables,t.state.context,t)}).then(function(){return null==t.options.onSuccess?void 0:t.options.onSuccess(e,t.state.variables,t.state.context)}).then(function(){return null==t.options.onSettled?void 0:t.options.onSettled(e,null,t.state.variables,t.state.context)}).then(function(){return t.dispatch({type:"success",data:e}),e}).catch(function(e){return null==t.mutationCache.config.onError||t.mutationCache.config.onError(e,t.state.variables,t.state.context,t),_e().error(e),Promise.resolve().then(function(){return null==t.options.onError?void 0:t.options.onError(e,t.state.variables,t.state.context)}).then(function(){return null==t.options.onSettled?void 0:t.options.onSettled(void 0,e,t.state.variables,t.state.context)}).then(function(){throw t.dispatch({type:"error",error:e}),e})})},t.executeMutation=function(){var e,t=this;return this.retryer=new Ie({fn:function(){return t.options.mutationFn?t.options.mutationFn(t.state.variables):Promise.reject("No mutationFn found")},onFail:function(){t.dispatch({type:"failed"})},onPause:function(){t.dispatch({type:"pause"})},onContinue:function(){t.dispatch({type:"continue"})},retry:null!=(e=this.options.retry)?e:0,retryDelay:this.options.retryDelay}),this.retryer.promise},t.dispatch=function(e){var t=this;this.state=function(e,t){switch(t.type){case"failed":return se({},e,{failureCount:e.failureCount+1});case"pause":return se({},e,{isPaused:!0});case"continue":return se({},e,{isPaused:!1});case"loading":return se({},e,{context:t.context,data:void 0,error:null,isPaused:!1,status:"loading",variables:t.variables});case"success":return se({},e,{data:t.data,error:null,status:"success",isPaused:!1});case"error":return se({},e,{data:void 0,error:t.error,failureCount:e.failureCount+1,isPaused:!1,status:"error"});case"setState":return se({},e,t.state);default:return e}}(this.state,e),Ee.batch(function(){t.observers.forEach(function(t){t.onMutationUpdate(e)}),t.mutationCache.notify(t)})},e}();var De=function(e){function t(t){var s;return(s=e.call(this)||this).config=t||{},s.mutations=[],s.mutationId=0,s}ee(t,e);var s=t.prototype;return s.build=function(e,t,s){var r=new Oe({mutationCache:this,mutationId:++this.mutationId,options:e.defaultMutationOptions(t),state:s,defaultOptions:t.mutationKey?e.getMutationDefaults(t.mutationKey):void 0,meta:t.meta});return this.add(r),r},s.add=function(e){this.mutations.push(e),this.notify(e)},s.remove=function(e){this.mutations=this.mutations.filter(function(t){return t!==e}),e.cancel(),this.notify(e)},s.clear=function(){var e=this;Ee.batch(function(){e.mutations.forEach(function(t){e.remove(t)})})},s.getAll=function(){return this.mutations},s.find=function(e){return void 0===e.exact&&(e.exact=!0),this.mutations.find(function(t){return ce(e,t)})},s.findAll=function(e){return this.mutations.filter(function(t){return ce(e,t)})},s.notify=function(e){var t=this;Ee.batch(function(){t.listeners.forEach(function(t){t(e)})})},s.onFocus=function(){this.resumePausedMutations()},s.onOnline=function(){this.resumePausedMutations()},s.resumePausedMutations=function(){var e=this.mutations.filter(function(e){return e.state.isPaused});return Ee.batch(function(){return e.reduce(function(e,t){return e.then(function(){return t.continue().catch(ie)})},Promise.resolve())})},t}(te);function Re(e,t){return null==e.getNextPageParam?void 0:e.getNextPageParam(t[t.length-1],t)}var Le=function(){function e(e){void 0===e&&(e={}),this.queryCache=e.queryCache||new Pe,this.mutationCache=e.mutationCache||new De,this.defaultOptions=e.defaultOptions||{},this.queryDefaults=[],this.mutationDefaults=[]}var t=e.prototype;return t.mount=function(){var e=this;this.unsubscribeFocus=ve.subscribe(function(){ve.isFocused()&&je.isOnline()&&(e.mutationCache.onFocus(),e.queryCache.onFocus())}),this.unsubscribeOnline=je.subscribe(function(){ve.isFocused()&&je.isOnline()&&(e.mutationCache.onOnline(),e.queryCache.onOnline())})},t.unmount=function(){var e,t;null==(e=this.unsubscribeFocus)||e.call(this),null==(t=this.unsubscribeOnline)||t.call(this)},t.isFetching=function(e,t){var s=oe(e,t)[0];return s.fetching=!0,this.queryCache.findAll(s).length},t.isMutating=function(e){return this.mutationCache.findAll(se({},e,{fetching:!0})).length},t.getQueryData=function(e,t){var s;return null==(s=this.queryCache.find(e,t))?void 0:s.state.data},t.getQueriesData=function(e){return this.getQueryCache().findAll(e).map(function(e){return[e.queryKey,e.state.data]})},t.setQueryData=function(e,t,s){var r=ae(e),i=this.defaultQueryOptions(r);return this.queryCache.build(this,i).setData(t,s)},t.setQueriesData=function(e,t,s){var r=this;return Ee.batch(function(){return r.getQueryCache().findAll(e).map(function(e){var i=e.queryKey;return[i,r.setQueryData(i,t,s)]})})},t.getQueryState=function(e,t){var s;return null==(s=this.queryCache.find(e,t))?void 0:s.state},t.removeQueries=function(e,t){var s=oe(e,t)[0],r=this.queryCache;Ee.batch(function(){r.findAll(s).forEach(function(e){r.remove(e)})})},t.resetQueries=function(e,t,s){var r=this,i=oe(e,t,s),n=i[0],a=i[1],o=this.queryCache,l=se({},n,{active:!0});return Ee.batch(function(){return o.findAll(n).forEach(function(e){e.reset()}),r.refetchQueries(l,a)})},t.cancelQueries=function(e,t,s){var r=this,i=oe(e,t,s),n=i[0],a=i[1],o=void 0===a?{}:a;void 0===o.revert&&(o.revert=!0);var l=Ee.batch(function(){return r.queryCache.findAll(n).map(function(e){return e.cancel(o)})});return Promise.all(l).then(ie).catch(ie)},t.invalidateQueries=function(e,t,s){var r,i,n,a=this,o=oe(e,t,s),l=o[0],c=o[1],d=se({},l,{active:null==(r=null!=(i=l.refetchActive)?i:l.active)||r,inactive:null!=(n=l.refetchInactive)&&n});return Ee.batch(function(){return a.queryCache.findAll(l).forEach(function(e){e.invalidate()}),a.refetchQueries(d,c)})},t.refetchQueries=function(e,t,s){var r=this,i=oe(e,t,s),n=i[0],a=i[1],o=Ee.batch(function(){return r.queryCache.findAll(n).map(function(e){return e.fetch(void 0,se({},a,{meta:{refetchPage:null==n?void 0:n.refetchPage}}))})}),l=Promise.all(o).then(ie);return(null==a?void 0:a.throwOnError)||(l=l.catch(ie)),l},t.fetchQuery=function(e,t,s){var r=ae(e,t,s),i=this.defaultQueryOptions(r);void 0===i.retry&&(i.retry=!1);var n=this.queryCache.build(this,i);return n.isStaleByTime(i.staleTime)?n.fetch(i):Promise.resolve(n.state.data)},t.prefetchQuery=function(e,t,s){return this.fetchQuery(e,t,s).then(ie).catch(ie)},t.fetchInfiniteQuery=function(e,t,s){var r=ae(e,t,s);return r.behavior={onFetch:function(e){e.fetchFn=function(){var t,s,r,i,n,a,o,l,c,d=null==(t=e.fetchOptions)||null==(s=t.meta)?void 0:s.refetchPage,u=null==(r=e.fetchOptions)||null==(i=r.meta)?void 0:i.fetchMore,h=null==u?void 0:u.pageParam,m="forward"===(null==u?void 0:u.direction),f="backward"===(null==u?void 0:u.direction),p=(null==(n=e.state.data)?void 0:n.pages)||[],g=(null==(a=e.state.data)?void 0:a.pageParams)||[],x=be(),y=null==x?void 0:x.signal,b=g,v=!1,j=e.options.queryFn||function(){return Promise.reject("Missing queryFn")},N=function(e,t,s,r){return b=r?[t].concat(b):[].concat(b,[t]),r?[s].concat(e):[].concat(e,[s])},w=function(t,s,r,i){if(v)return Promise.reject("Cancelled");if(void 0===r&&!s&&t.length)return Promise.resolve(t);var n={queryKey:e.queryKey,signal:y,pageParam:r,meta:e.meta},a=j(n),o=Promise.resolve(a).then(function(e){return N(t,r,e,i)});return we(a)&&(o.cancel=a.cancel),o};if(p.length)if(m){var k=void 0!==h,C=k?h:Re(e.options,p);o=w(p,k,C)}else if(f){var I=void 0!==h,S=I?h:(l=e.options,c=p,null==l.getPreviousPageParam?void 0:l.getPreviousPageParam(c[0],c));o=w(p,I,S,!0)}else!function(){b=[];var t=void 0===e.options.getNextPageParam,s=!d||!p[0]||d(p[0],0,p);o=s?w([],t,g[0]):Promise.resolve(N([],g[0],p[0]));for(var r=function(s){o=o.then(function(r){if(!d||!p[s]||d(p[s],s,p)){var i=t?g[s]:Re(e.options,r);return w(r,t,i)}return Promise.resolve(N(r,g[s],p[s]))})},i=1;i<p.length;i++)r(i)}();else o=w([]);var E=o.then(function(e){return{pages:e,pageParams:b}});return E.cancel=function(){v=!0,null==x||x.abort(),we(o)&&o.cancel()},E}}},this.fetchQuery(r)},t.prefetchInfiniteQuery=function(e,t,s){return this.fetchInfiniteQuery(e,t,s).then(ie).catch(ie)},t.cancelMutations=function(){var e=this,t=Ee.batch(function(){return e.mutationCache.getAll().map(function(e){return e.cancel()})});return Promise.all(t).then(ie).catch(ie)},t.resumePausedMutations=function(){return this.getMutationCache().resumePausedMutations()},t.executeMutation=function(e){return this.mutationCache.build(this,e).execute()},t.getQueryCache=function(){return this.queryCache},t.getMutationCache=function(){return this.mutationCache},t.getDefaultOptions=function(){return this.defaultOptions},t.setDefaultOptions=function(e){this.defaultOptions=e},t.setQueryDefaults=function(e,t){var s=this.queryDefaults.find(function(t){return ue(e)===ue(t.queryKey)});s?s.defaultOptions=t:this.queryDefaults.push({queryKey:e,defaultOptions:t})},t.getQueryDefaults=function(e){var t;return e?null==(t=this.queryDefaults.find(function(t){return he(e,t.queryKey)}))?void 0:t.defaultOptions:void 0},t.setMutationDefaults=function(e,t){var s=this.mutationDefaults.find(function(t){return ue(e)===ue(t.mutationKey)});s?s.defaultOptions=t:this.mutationDefaults.push({mutationKey:e,defaultOptions:t})},t.getMutationDefaults=function(e){var t;return e?null==(t=this.mutationDefaults.find(function(t){return he(e,t.mutationKey)}))?void 0:t.defaultOptions:void 0},t.defaultQueryOptions=function(e){if(null==e?void 0:e._defaulted)return e;var t=se({},this.defaultOptions.queries,this.getQueryDefaults(null==e?void 0:e.queryKey),e,{_defaulted:!0});return!t.queryHash&&t.queryKey&&(t.queryHash=de(t.queryKey,t)),t},t.defaultQueryObserverOptions=function(e){return this.defaultQueryOptions(e)},t.defaultMutationOptions=function(e){return(null==e?void 0:e._defaulted)?e:se({},this.defaultOptions.mutations,this.getMutationDefaults(null==e?void 0:e.mutationKey),e,{_defaulted:!0})},t.clear=function(){this.queryCache.clear(),this.mutationCache.clear()},e}(),Me=s.unstable_batchedUpdates;Ee.setBatchNotifyFunction(Me);var Fe=console;Te=Fe;var Ue=r.createContext(void 0),Be=r.createContext(!1);var He=function(e){var t=e.client,s=e.contextSharing,i=void 0!==s&&s,n=e.children;r.useEffect(function(){return t.mount(),function(){t.unmount()}},[t]);var a=function(e){return e&&"undefined"!=typeof window?(window.ReactQueryClientContext||(window.ReactQueryClientContext=Ue),window.ReactQueryClientContext):Ue}(i);return r.createElement(Be.Provider,{value:i},r.createElement(a.Provider,{value:t},n))},Ve={exports:{}};function ze(){}function qe(){}qe.resetWarningCache=ze;Ve.exports=function(){function e(e,t,s,r,i,n){if("SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"!==n){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var s={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:qe,resetWarningCache:ze};return s.PropTypes=s,s}();const $e=i(Ve.exports);var We="undefined"!=typeof Element,Ke="function"==typeof Map,Ge="function"==typeof Set,Je="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function Ye(e,t){if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t){if(e.constructor!==t.constructor)return!1;var s,r,i,n;if(Array.isArray(e)){if((s=e.length)!=t.length)return!1;for(r=s;0!==r--;)if(!Ye(e[r],t[r]))return!1;return!0}if(Ke&&e instanceof Map&&t instanceof Map){if(e.size!==t.size)return!1;for(n=e.entries();!(r=n.next()).done;)if(!t.has(r.value[0]))return!1;for(n=e.entries();!(r=n.next()).done;)if(!Ye(r.value[1],t.get(r.value[0])))return!1;return!0}if(Ge&&e instanceof Set&&t instanceof Set){if(e.size!==t.size)return!1;for(n=e.entries();!(r=n.next()).done;)if(!t.has(r.value[0]))return!1;return!0}if(Je&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(t)){if((s=e.length)!=t.length)return!1;for(r=s;0!==r--;)if(e[r]!==t[r])return!1;return!0}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf&&"function"==typeof e.valueOf&&"function"==typeof t.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString&&"function"==typeof e.toString&&"function"==typeof t.toString)return e.toString()===t.toString();if((s=(i=Object.keys(e)).length)!==Object.keys(t).length)return!1;for(r=s;0!==r--;)if(!Object.prototype.hasOwnProperty.call(t,i[r]))return!1;if(We&&e instanceof Element)return!1;for(r=s;0!==r--;)if(("_owner"!==i[r]&&"__v"!==i[r]&&"__o"!==i[r]||!e.$$typeof)&&!Ye(e[i[r]],t[i[r]]))return!1;return!0}return e!=e&&t!=t}const Qe=i(function(e,t){try{return Ye(e,t)}catch(s){if((s.message||"").match(/stack|recursion/i))return!1;throw s}});const Xe=i(function(e,t,s,r,i,n,a,o){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[s,r,i,n,a,o],d=0;(l=new Error(t.replace(/%s/g,function(){return c[d++]}))).name="Invariant Violation"}throw l.framesToPop=1,l}});const Ze=i(function(e,t,s,r){var i=s?s.call(r,e,t):void 0;if(void 0!==i)return!!i;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var o=Object.prototype.hasOwnProperty.bind(t),l=0;l<n.length;l++){var c=n[l];if(!o(c))return!1;var d=e[c],u=t[c];if(!1===(i=s?s.call(r,d,u,c):void 0)||void 0===i&&d!==u)return!1}return!0});function et(){return et=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e},et.apply(this,arguments)}function tt(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,st(e,t)}function st(e,t){return(st=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function rt(e,t){if(null==e)return{};var s,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)t.indexOf(s=n[r])>=0||(i[s]=e[s]);return i}var it={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},nt={rel:["amphtml","canonical","alternate"]},at={type:["application/ld+json"]},ot={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},lt=Object.keys(it).map(function(e){return it[e]}),ct={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},dt=Object.keys(ct).reduce(function(e,t){return e[ct[t]]=t,e},{}),ut=function(e,t){for(var s=e.length-1;s>=0;s-=1){var r=e[s];if(Object.prototype.hasOwnProperty.call(r,t))return r[t]}return null},ht=function(e){var t=ut(e,it.TITLE),s=ut(e,"titleTemplate");if(Array.isArray(t)&&(t=t.join("")),s&&t)return s.replace(/%s/g,function(){return t});var r=ut(e,"defaultTitle");return t||r||void 0},mt=function(e){return ut(e,"onChangeClientState")||function(){}},ft=function(e,t){return t.filter(function(t){return void 0!==t[e]}).map(function(t){return t[e]}).reduce(function(e,t){return et({},e,t)},{})},pt=function(e,t){return t.filter(function(e){return void 0!==e[it.BASE]}).map(function(e){return e[it.BASE]}).reverse().reduce(function(t,s){if(!t.length)for(var r=Object.keys(s),i=0;i<r.length;i+=1){var n=r[i].toLowerCase();if(-1!==e.indexOf(n)&&s[n])return t.concat(s)}return t},[])},gt=function(e,t,s){var r={};return s.filter(function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&console&&console.warn,!1)}).map(function(t){return t[e]}).reverse().reduce(function(e,s){var i={};s.filter(function(e){for(var s,n=Object.keys(e),a=0;a<n.length;a+=1){var o=n[a],l=o.toLowerCase();-1===t.indexOf(l)||"rel"===s&&"canonical"===e[s].toLowerCase()||"rel"===l&&"stylesheet"===e[l].toLowerCase()||(s=l),-1===t.indexOf(o)||"innerHTML"!==o&&"cssText"!==o&&"itemprop"!==o||(s=o)}if(!s||!e[s])return!1;var c=e[s].toLowerCase();return r[s]||(r[s]={}),i[s]||(i[s]={}),!r[s][c]&&(i[s][c]=!0,!0)}).reverse().forEach(function(t){return e.push(t)});for(var n=Object.keys(i),a=0;a<n.length;a+=1){var o=n[a],l=et({},r[o],i[o]);r[o]=l}return e},[]).reverse()},xt=function(e,t){if(Array.isArray(e)&&e.length)for(var s=0;s<e.length;s+=1)if(e[s][t])return!0;return!1},yt=function(e){return Array.isArray(e)?e.join(""):e},bt=function(e,t){return Array.isArray(e)?e.reduce(function(e,s){return function(e,t){for(var s=Object.keys(e),r=0;r<s.length;r+=1)if(t[s[r]]&&t[s[r]].includes(e[s[r]]))return!0;return!1}(s,t)?e.priority.push(s):e.default.push(s),e},{priority:[],default:[]}):{default:e}},vt=function(e,t){var s;return et({},e,((s={})[t]=void 0,s))},jt=[it.NOSCRIPT,it.SCRIPT,it.STYLE],Nt=function(e,t){return void 0===t&&(t=!0),!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},wt=function(e){return Object.keys(e).reduce(function(t,s){var r=void 0!==e[s]?s+'="'+e[s]+'"':""+s;return t?t+" "+r:r},"")},kt=function(e,t){return void 0===t&&(t={}),Object.keys(e).reduce(function(t,s){return t[ct[s]||s]=e[s],t},t)},Ct=function(e,t){return t.map(function(t,s){var i,n=((i={key:s})["data-rh"]=!0,i);return Object.keys(t).forEach(function(e){var s=ct[e]||e;"innerHTML"===s||"cssText"===s?n.dangerouslySetInnerHTML={__html:t.innerHTML||t.cssText}:n[s]=t[e]}),r.createElement(e,n)})},It=function(e,t,s){switch(e){case it.TITLE:return{toComponent:function(){return s=t.titleAttributes,(i={key:e=t.title})["data-rh"]=!0,n=kt(s,i),[r.createElement(it.TITLE,n,e)];var e,s,i,n},toString:function(){return r=e,i=t.title,n=t.titleAttributes,a=s,o=wt(n),l=yt(i),o?"<"+r+' data-rh="true" '+o+">"+Nt(l,a)+"</"+r+">":"<"+r+' data-rh="true">'+Nt(l,a)+"</"+r+">";var r,i,n,a,o,l}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return kt(t)},toString:function(){return wt(t)}};default:return{toComponent:function(){return Ct(e,t)},toString:function(){return r=e,i=s,t.reduce(function(e,t){var s=Object.keys(t).filter(function(e){return!("innerHTML"===e||"cssText"===e)}).reduce(function(e,s){var r=void 0===t[s]?s:s+'="'+Nt(t[s],i)+'"';return e?e+" "+r:r},""),n=t.innerHTML||t.cssText||"",a=-1===jt.indexOf(r);return e+"<"+r+' data-rh="true" '+s+(a?"/>":">"+n+"</"+r+">")},"");var r,i}}}},St=function(e){var t,s,r,i,n,a,o,l=e.baseTag,c=e.bodyAttributes,d=e.encode,u=e.htmlAttributes,h=e.noscriptTags,m=e.styleTags,f=e.title,p=void 0===f?"":f,g=e.titleAttributes,x=e.linkTags,y=e.metaTags,b=e.scriptTags,v={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var j=(s=(t=e).linkTags,r=t.scriptTags,i=t.encode,n=bt(t.metaTags,ot),a=bt(s,nt),o=bt(r,at),{priorityMethods:{toComponent:function(){return[].concat(Ct(it.META,n.priority),Ct(it.LINK,a.priority),Ct(it.SCRIPT,o.priority))},toString:function(){return It(it.META,n.priority,i)+" "+It(it.LINK,a.priority,i)+" "+It(it.SCRIPT,o.priority,i)}},metaTags:n.default,linkTags:a.default,scriptTags:o.default});v=j.priorityMethods,x=j.linkTags,y=j.metaTags,b=j.scriptTags}return{priority:v,base:It(it.BASE,l,d),bodyAttributes:It("bodyAttributes",c,d),htmlAttributes:It("htmlAttributes",u,d),link:It(it.LINK,x,d),meta:It(it.META,y,d),noscript:It(it.NOSCRIPT,h,d),script:It(it.SCRIPT,b,d),style:It(it.STYLE,m,d),title:It(it.TITLE,{title:p,titleAttributes:g},d)}},Et=[],Tt=function(e,t){var s=this;void 0===t&&(t="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){s.context.helmet=e},helmetInstances:{get:function(){return s.canUseDOM?Et:s.instances},add:function(e){(s.canUseDOM?Et:s.instances).push(e)},remove:function(e){var t=(s.canUseDOM?Et:s.instances).indexOf(e);(s.canUseDOM?Et:s.instances).splice(t,1)}}},this.context=e,this.canUseDOM=t,t||(e.helmet=St({baseTag:[],bodyAttributes:{},htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},_t=r.createContext({}),At=$e.shape({setHelmet:$e.func,helmetInstances:$e.shape({get:$e.func,add:$e.func,remove:$e.func})}),Pt="undefined"!=typeof document,Ot=function(e){function t(s){var r;return(r=e.call(this,s)||this).helmetData=new Tt(r.props.context,t.canUseDOM),r}return tt(t,e),t.prototype.render=function(){return r.createElement(_t.Provider,{value:this.helmetData.value},this.props.children)},t}(e.Component);Ot.canUseDOM=Pt,Ot.propTypes={context:$e.shape({helmet:$e.shape()}),children:$e.node.isRequired},Ot.defaultProps={context:{}},Ot.displayName="HelmetProvider";var Dt=function(e,t){var s,r=document.head||document.querySelector(it.HEAD),i=r.querySelectorAll(e+"[data-rh]"),n=[].slice.call(i),a=[];return t&&t.length&&t.forEach(function(t){var r=document.createElement(e);for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&("innerHTML"===i?r.innerHTML=t.innerHTML:"cssText"===i?r.styleSheet?r.styleSheet.cssText=t.cssText:r.appendChild(document.createTextNode(t.cssText)):r.setAttribute(i,void 0===t[i]?"":t[i]));r.setAttribute("data-rh","true"),n.some(function(e,t){return s=t,r.isEqualNode(e)})?n.splice(s,1):a.push(r)}),n.forEach(function(e){return e.parentNode.removeChild(e)}),a.forEach(function(e){return r.appendChild(e)}),{oldTags:n,newTags:a}},Rt=function(e,t){var s=document.getElementsByTagName(e)[0];if(s){for(var r=s.getAttribute("data-rh"),i=r?r.split(","):[],n=[].concat(i),a=Object.keys(t),o=0;o<a.length;o+=1){var l=a[o],c=t[l]||"";s.getAttribute(l)!==c&&s.setAttribute(l,c),-1===i.indexOf(l)&&i.push(l);var d=n.indexOf(l);-1!==d&&n.splice(d,1)}for(var u=n.length-1;u>=0;u-=1)s.removeAttribute(n[u]);i.length===n.length?s.removeAttribute("data-rh"):s.getAttribute("data-rh")!==a.join(",")&&s.setAttribute("data-rh",a.join(","))}},Lt=function(e,t){var s,r,i=e.baseTag,n=e.htmlAttributes,a=e.linkTags,o=e.metaTags,l=e.noscriptTags,c=e.onChangeClientState,d=e.scriptTags,u=e.styleTags,h=e.title,m=e.titleAttributes;Rt(it.BODY,e.bodyAttributes),Rt(it.HTML,n),r=m,void 0!==(s=h)&&document.title!==s&&(document.title=yt(s)),Rt(it.TITLE,r);var f={baseTag:Dt(it.BASE,i),linkTags:Dt(it.LINK,a),metaTags:Dt(it.META,o),noscriptTags:Dt(it.NOSCRIPT,l),scriptTags:Dt(it.SCRIPT,d),styleTags:Dt(it.STYLE,u)},p={},g={};Object.keys(f).forEach(function(e){var t=f[e],s=t.newTags,r=t.oldTags;s.length&&(p[e]=s),r.length&&(g[e]=f[e].oldTags)}),t&&t(),c(e,p,g)},Mt=null,Ft=function(e){function t(){for(var t,s=arguments.length,r=new Array(s),i=0;i<s;i++)r[i]=arguments[i];return(t=e.call.apply(e,[this].concat(r))||this).rendered=!1,t}tt(t,e);var s=t.prototype;return s.shouldComponentUpdate=function(e){return!Ze(e,this.props)},s.componentDidUpdate=function(){this.emitChange()},s.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},s.emitChange=function(){var e,t,s=this.props.context,r=s.setHelmet,i=null,n=(e=s.helmetInstances.get().map(function(e){var t=et({},e.props);return delete t.context,t}),{baseTag:pt(["href"],e),bodyAttributes:ft("bodyAttributes",e),defer:ut(e,"defer"),encode:ut(e,"encodeSpecialCharacters"),htmlAttributes:ft("htmlAttributes",e),linkTags:gt(it.LINK,["rel","href"],e),metaTags:gt(it.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:gt(it.NOSCRIPT,["innerHTML"],e),onChangeClientState:mt(e),scriptTags:gt(it.SCRIPT,["src","innerHTML"],e),styleTags:gt(it.STYLE,["cssText"],e),title:ht(e),titleAttributes:ft("titleAttributes",e),prioritizeSeoTags:xt(e,"prioritizeSeoTags")});Ot.canUseDOM?(t=n,Mt&&cancelAnimationFrame(Mt),t.defer?Mt=requestAnimationFrame(function(){Lt(t,function(){Mt=null})}):(Lt(t),Mt=null)):St&&(i=St(n)),r(i)},s.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},s.render=function(){return this.init(),null},t}(e.Component);Ft.propTypes={context:At.isRequired},Ft.displayName="HelmetDispatcher";var Ut=["children"],Bt=["children"],Ht=function(e){function t(){return e.apply(this,arguments)||this}tt(t,e);var s=t.prototype;return s.shouldComponentUpdate=function(e){return!Qe(vt(this.props,"helmetData"),vt(e,"helmetData"))},s.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case it.SCRIPT:case it.NOSCRIPT:return{innerHTML:t};case it.STYLE:return{cssText:t};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},s.flattenArrayTypeChildren=function(e){var t,s=e.child,r=e.arrayTypeChildren;return et({},r,((t={})[s.type]=[].concat(r[s.type]||[],[et({},e.newChildProps,this.mapNestedChildrenToProps(s,e.nestedChildren))]),t))},s.mapObjectTypeChildren=function(e){var t,s,r=e.child,i=e.newProps,n=e.newChildProps,a=e.nestedChildren;switch(r.type){case it.TITLE:return et({},i,((t={})[r.type]=a,t.titleAttributes=et({},n),t));case it.BODY:return et({},i,{bodyAttributes:et({},n)});case it.HTML:return et({},i,{htmlAttributes:et({},n)});default:return et({},i,((s={})[r.type]=et({},n),s))}},s.mapArrayTypeChildrenToProps=function(e,t){var s=et({},t);return Object.keys(e).forEach(function(t){var r;s=et({},s,((r={})[t]=e[t],r))}),s},s.warnOnInvalidChildren=function(e,t){return Xe(lt.some(function(t){return e.type===t}),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+lt.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),Xe(!t||"string"==typeof t||Array.isArray(t)&&!t.some(function(e){return"string"!=typeof e}),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},s.mapChildrenToProps=function(e,t){var s=this,i={};return r.Children.forEach(e,function(e){if(e&&e.props){var r=e.props,n=r.children,a=rt(r,Ut),o=Object.keys(a).reduce(function(e,t){return e[dt[t]||t]=a[t],e},{}),l=e.type;switch("symbol"==typeof l?l=l.toString():s.warnOnInvalidChildren(e,n),l){case it.FRAGMENT:t=s.mapChildrenToProps(n,t);break;case it.LINK:case it.META:case it.NOSCRIPT:case it.SCRIPT:case it.STYLE:i=s.flattenArrayTypeChildren({child:e,arrayTypeChildren:i,newChildProps:o,nestedChildren:n});break;default:t=s.mapObjectTypeChildren({child:e,newProps:t,newChildProps:o,nestedChildren:n})}}}),this.mapArrayTypeChildrenToProps(i,t)},s.render=function(){var e=this.props,t=e.children,s=rt(e,Bt),i=et({},s),n=s.helmetData;return t&&(i=this.mapChildrenToProps(t,i)),!n||n instanceof Tt||(n=new Tt(n.context,n.instances)),n?r.createElement(Ft,et({},i,{context:n.value,helmetData:void 0})):r.createElement(_t.Consumer,null,function(e){return r.createElement(Ft,et({},i,{context:e}))})},t}(e.Component);Ht.propTypes={base:$e.object,bodyAttributes:$e.object,children:$e.oneOfType([$e.arrayOf($e.node),$e.node]),defaultTitle:$e.string,defer:$e.bool,encodeSpecialCharacters:$e.bool,htmlAttributes:$e.object,link:$e.arrayOf($e.object),meta:$e.arrayOf($e.object),noscript:$e.arrayOf($e.object),onChangeClientState:$e.func,script:$e.arrayOf($e.object),style:$e.arrayOf($e.object),title:$e.string,titleAttributes:$e.object,titleTemplate:$e.string,prioritizeSeoTags:$e.bool,helmetData:$e.object},Ht.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},Ht.displayName="Helmet";var Vt={};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const zt=function(e){const t=[];let s=0;for(let r=0;r<e.length;r++){let i=e.charCodeAt(r);i<128?t[s++]=i:i<2048?(t[s++]=i>>6|192,t[s++]=63&i|128):55296==(64512&i)&&r+1<e.length&&56320==(64512&e.charCodeAt(r+1))?(i=65536+((1023&i)<<10)+(1023&e.charCodeAt(++r)),t[s++]=i>>18|240,t[s++]=i>>12&63|128,t[s++]=i>>6&63|128,t[s++]=63&i|128):(t[s++]=i>>12|224,t[s++]=i>>6&63|128,t[s++]=63&i|128)}return t},qt={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:"function"==typeof atob,encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();const s=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,r=[];for(let i=0;i<e.length;i+=3){const t=e[i],n=i+1<e.length,a=n?e[i+1]:0,o=i+2<e.length,l=o?e[i+2]:0,c=t>>2,d=(3&t)<<4|a>>4;let u=(15&a)<<2|l>>6,h=63&l;o||(h=64,n||(u=64)),r.push(s[c],s[d],s[u],s[h])}return r.join("")},encodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(zt(e),t)},decodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?atob(e):function(e){const t=[];let s=0,r=0;for(;s<e.length;){const i=e[s++];if(i<128)t[r++]=String.fromCharCode(i);else if(i>191&&i<224){const n=e[s++];t[r++]=String.fromCharCode((31&i)<<6|63&n)}else if(i>239&&i<365){const n=((7&i)<<18|(63&e[s++])<<12|(63&e[s++])<<6|63&e[s++])-65536;t[r++]=String.fromCharCode(55296+(n>>10)),t[r++]=String.fromCharCode(56320+(1023&n))}else{const n=e[s++],a=e[s++];t[r++]=String.fromCharCode((15&i)<<12|(63&n)<<6|63&a)}}return t.join("")}(this.decodeStringToByteArray(e,t))},decodeStringToByteArray(e,t){this.init_();const s=t?this.charToByteMapWebSafe_:this.charToByteMap_,r=[];for(let i=0;i<e.length;){const t=s[e.charAt(i++)],n=i<e.length?s[e.charAt(i)]:0;++i;const a=i<e.length?s[e.charAt(i)]:64;++i;const o=i<e.length?s[e.charAt(i)]:64;if(++i,null==t||null==n||null==a||null==o)throw new $t;const l=t<<2|n>>4;if(r.push(l),64!==a){const e=n<<4&240|a>>2;if(r.push(e),64!==o){const e=a<<6&192|o;r.push(e)}}}return r},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}};class $t extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}const Wt=function(e){return function(e){const t=zt(e);return qt.encodeByteArray(t,!0)}(e).replace(/\./g,"")},Kt=function(e){try{return qt.decodeString(e,!0)}catch(t){}return null};
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Gt=()=>
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("Unable to locate global object.")}().__FIREBASE_DEFAULTS__,Jt=()=>{try{return Gt()||(()=>{if("undefined"==typeof process)return;const e=Vt.__FIREBASE_DEFAULTS__;return e?JSON.parse(e):void 0})()||(()=>{if("undefined"==typeof document)return;let e;try{e=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/)}catch(s){return}const t=e&&Kt(e[1]);return t&&JSON.parse(t)})()}catch(e){return}},Yt=()=>{var e;return null===(e=Jt())||void 0===e?void 0:e.config},Qt=e=>{var t;return null===(t=Jt())||void 0===t?void 0:t[`_${e}`]};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Xt{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}wrapCallback(e){return(t,s)=>{t?this.reject(t):this.resolve(s),"function"==typeof e&&(this.promise.catch(()=>{}),1===e.length?e(t):e(t,s))}}}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Zt(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}class es extends Error{constructor(e,t,s){super(t),this.code=e,this.customData=s,this.name="FirebaseError",Object.setPrototypeOf(this,es.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,ts.prototype.create)}}class ts{constructor(e,t,s){this.service=e,this.serviceName=t,this.errors=s}create(e,...t){const s=t[0]||{},r=`${this.service}/${e}`,i=this.errors[e],n=i?function(e,t){return e.replace(ss,(e,s)=>{const r=t[s];return null!=r?String(r):`<${s}?>`})}(i,s):"Error",a=`${this.serviceName}: ${n} (${r}).`;return new es(r,a,s)}}const ss=/\{\$([^}]+)}/g;function rs(e,t){if(e===t)return!0;const s=Object.keys(e),r=Object.keys(t);for(const i of s){if(!r.includes(i))return!1;const s=e[i],n=t[i];if(is(s)&&is(n)){if(!rs(s,n))return!1}else if(s!==n)return!1}for(const i of r)if(!s.includes(i))return!1;return!0}function is(e){return null!==e&&"object"==typeof e}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ns(e){const t=[];for(const[s,r]of Object.entries(e))Array.isArray(r)?r.forEach(e=>{t.push(encodeURIComponent(s)+"="+encodeURIComponent(e))}):t.push(encodeURIComponent(s)+"="+encodeURIComponent(r));return t.length?"&"+t.join("&"):""}function as(e){const t={};return e.replace(/^\?/,"").split("&").forEach(e=>{if(e){const[s,r]=e.split("=");t[decodeURIComponent(s)]=decodeURIComponent(r)}}),t}function os(e){const t=e.indexOf("?");if(!t)return"";const s=e.indexOf("#",t);return e.substring(t,s>0?s:void 0)}class ls{constructor(e,t){this.observers=[],this.unsubscribes=[],this.observerCount=0,this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=t,this.task.then(()=>{e(this)}).catch(e=>{this.error(e)})}next(e){this.forEachObserver(t=>{t.next(e)})}error(e){this.forEachObserver(t=>{t.error(e)}),this.close(e)}complete(){this.forEachObserver(e=>{e.complete()}),this.close()}subscribe(e,t,s){let r;if(void 0===e&&void 0===t&&void 0===s)throw new Error("Missing Observer.");r=function(e,t){if("object"!=typeof e||null===e)return!1;for(const s of t)if(s in e&&"function"==typeof e[s])return!0;return!1}(e,["next","error","complete"])?e:{next:e,error:t,complete:s},void 0===r.next&&(r.next=cs),void 0===r.error&&(r.error=cs),void 0===r.complete&&(r.complete=cs);const i=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then(()=>{try{this.finalError?r.error(this.finalError):r.complete()}catch(e){}}),this.observers.push(r),i}unsubscribeOne(e){void 0!==this.observers&&void 0!==this.observers[e]&&(delete this.observers[e],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))}forEachObserver(e){if(!this.finalized)for(let t=0;t<this.observers.length;t++)this.sendOne(t,e)}sendOne(e,t){this.task.then(()=>{if(void 0!==this.observers&&void 0!==this.observers[e])try{t(this.observers[e])}catch(s){"undefined"!=typeof console&&console.error}})}close(e){this.finalized||(this.finalized=!0,void 0!==e&&(this.finalError=e),this.task.then(()=>{this.observers=void 0,this.onNoObservers=void 0}))}}function cs(){}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ds(e){return e&&e._delegate?e._delegate:e}class us{constructor(e,t,s){this.name=e,this.instanceFactory=t,this.type=s,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const hs="[DEFAULT]";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ms{constructor(e,t){this.name=e,this.container=t,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(e){const t=this.normalizeInstanceIdentifier(e);if(!this.instancesDeferred.has(t)){const e=new Xt;if(this.instancesDeferred.set(t,e),this.isInitialized(t)||this.shouldAutoInitialize())try{const s=this.getOrInitializeService({instanceIdentifier:t});s&&e.resolve(s)}catch(s){}}return this.instancesDeferred.get(t).promise}getImmediate(e){var t;const s=this.normalizeInstanceIdentifier(null==e?void 0:e.identifier),r=null!==(t=null==e?void 0:e.optional)&&void 0!==t&&t;if(!this.isInitialized(s)&&!this.shouldAutoInitialize()){if(r)return null;throw Error(`Service ${this.name} is not available`)}try{return this.getOrInitializeService({instanceIdentifier:s})}catch(i){if(r)return null;throw i}}getComponent(){return this.component}setComponent(e){if(e.name!==this.name)throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);if(this.component=e,this.shouldAutoInitialize()){if(function(e){return"EAGER"===e.instantiationMode}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(e))try{this.getOrInitializeService({instanceIdentifier:hs})}catch(t){}for(const[e,s]of this.instancesDeferred.entries()){const r=this.normalizeInstanceIdentifier(e);try{const e=this.getOrInitializeService({instanceIdentifier:r});s.resolve(e)}catch(t){}}}}clearInstance(e=hs){this.instancesDeferred.delete(e),this.instancesOptions.delete(e),this.instances.delete(e)}async delete(){const e=Array.from(this.instances.values());await Promise.all([...e.filter(e=>"INTERNAL"in e).map(e=>e.INTERNAL.delete()),...e.filter(e=>"_delete"in e).map(e=>e._delete())])}isComponentSet(){return null!=this.component}isInitialized(e=hs){return this.instances.has(e)}getOptions(e=hs){return this.instancesOptions.get(e)||{}}initialize(e={}){const{options:t={}}=e,s=this.normalizeInstanceIdentifier(e.instanceIdentifier);if(this.isInitialized(s))throw Error(`${this.name}(${s}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);const r=this.getOrInitializeService({instanceIdentifier:s,options:t});for(const[i,n]of this.instancesDeferred.entries()){s===this.normalizeInstanceIdentifier(i)&&n.resolve(r)}return r}onInit(e,t){var s;const r=this.normalizeInstanceIdentifier(t),i=null!==(s=this.onInitCallbacks.get(r))&&void 0!==s?s:new Set;i.add(e),this.onInitCallbacks.set(r,i);const n=this.instances.get(r);return n&&e(n,r),()=>{i.delete(e)}}invokeOnInitCallbacks(e,t){const s=this.onInitCallbacks.get(t);if(s)for(const i of s)try{i(e,t)}catch(r){}}getOrInitializeService({instanceIdentifier:e,options:t={}}){let s=this.instances.get(e);if(!s&&this.component&&(s=this.component.instanceFactory(this.container,{instanceIdentifier:(r=e,r===hs?void 0:r),options:t}),this.instances.set(e,s),this.instancesOptions.set(e,t),this.invokeOnInitCallbacks(s,e),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,e,s)}catch(i){}var r;return s||null}normalizeInstanceIdentifier(e=hs){return this.component?this.component.multipleInstances?e:hs:e}shouldAutoInitialize(){return!!this.component&&"EXPLICIT"!==this.component.instantiationMode}}class fs{constructor(e){this.name=e,this.providers=new Map}addComponent(e){const t=this.getProvider(e.name);if(t.isComponentSet())throw new Error(`Component ${e.name} has already been registered with ${this.name}`);t.setComponent(e)}addOrOverwriteComponent(e){this.getProvider(e.name).isComponentSet()&&this.providers.delete(e.name),this.addComponent(e)}getProvider(e){if(this.providers.has(e))return this.providers.get(e);const t=new ms(e,this);return this.providers.set(e,t),t}getProviders(){return Array.from(this.providers.values())}}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ps,gs;(gs=ps||(ps={}))[gs.DEBUG=0]="DEBUG",gs[gs.VERBOSE=1]="VERBOSE",gs[gs.INFO=2]="INFO",gs[gs.WARN=3]="WARN",gs[gs.ERROR=4]="ERROR",gs[gs.SILENT=5]="SILENT";const xs={debug:ps.DEBUG,verbose:ps.VERBOSE,info:ps.INFO,warn:ps.WARN,error:ps.ERROR,silent:ps.SILENT},ys=ps.INFO,bs={[ps.DEBUG]:"log",[ps.VERBOSE]:"log",[ps.INFO]:"info",[ps.WARN]:"warn",[ps.ERROR]:"error"},vs=(e,t,...s)=>{if(t<e.logLevel)return;(new Date).toISOString();if(!bs[t])throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`)};class js{constructor(e){this.name=e,this._logLevel=ys,this._logHandler=vs,this._userLogHandler=null}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in ps))throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}setLogLevel(e){this._logLevel="string"==typeof e?xs[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,ps.DEBUG,...e),this._logHandler(this,ps.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,ps.VERBOSE,...e),this._logHandler(this,ps.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,ps.INFO,...e),this._logHandler(this,ps.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,ps.WARN,...e),this._logHandler(this,ps.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,ps.ERROR,...e),this._logHandler(this,ps.ERROR,...e)}}let Ns,ws;const ks=new WeakMap,Cs=new WeakMap,Is=new WeakMap,Ss=new WeakMap,Es=new WeakMap;let Ts={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return Cs.get(e);if("objectStoreNames"===t)return e.objectStoreNames||Is.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return Ps(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function _s(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(ws||(ws=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(Os(this),t),Ps(ks.get(this))}:function(...t){return Ps(e.apply(Os(this),t))}:function(t,...s){const r=e.call(Os(this),t,...s);return Is.set(r,t.sort?t.sort():[t]),Ps(r)}}function As(e){return"function"==typeof e?_s(e):(e instanceof IDBTransaction&&function(e){if(Cs.has(e))return;const t=new Promise((t,s)=>{const r=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",n),e.removeEventListener("abort",n)},i=()=>{t(),r()},n=()=>{s(e.error||new DOMException("AbortError","AbortError")),r()};e.addEventListener("complete",i),e.addEventListener("error",n),e.addEventListener("abort",n)});Cs.set(e,t)}(e),t=e,(Ns||(Ns=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some(e=>t instanceof e)?new Proxy(e,Ts):e);var t}function Ps(e){if(e instanceof IDBRequest)return function(e){const t=new Promise((t,s)=>{const r=()=>{e.removeEventListener("success",i),e.removeEventListener("error",n)},i=()=>{t(Ps(e.result)),r()},n=()=>{s(e.error),r()};e.addEventListener("success",i),e.addEventListener("error",n)});return t.then(t=>{t instanceof IDBCursor&&ks.set(t,e)}).catch(()=>{}),Es.set(t,e),t}(e);if(Ss.has(e))return Ss.get(e);const t=As(e);return t!==e&&(Ss.set(e,t),Es.set(t,e)),t}const Os=e=>Es.get(e);const Ds=["get","getKey","getAll","getAllKeys","count"],Rs=["put","add","delete","clear"],Ls=new Map;function Ms(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(Ls.get(t))return Ls.get(t);const s=t.replace(/FromIndex$/,""),r=t!==s,i=Rs.includes(s);if(!(s in(r?IDBIndex:IDBObjectStore).prototype)||!i&&!Ds.includes(s))return;const n=async function(e,...t){const n=this.transaction(e,i?"readwrite":"readonly");let a=n.store;return r&&(a=a.index(t.shift())),(await Promise.all([a[s](...t),i&&n.done]))[0]};return Ls.set(t,n),n}Ts=(e=>({...e,get:(t,s,r)=>Ms(t,s)||e.get(t,s,r),has:(t,s)=>!!Ms(t,s)||e.has(t,s)}))(Ts);
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Fs{constructor(e){this.container=e}getPlatformInfoString(){return this.container.getProviders().map(e=>{if(function(e){const t=e.getComponent();return"VERSION"===(null==t?void 0:t.type)}(e)){const t=e.getImmediate();return`${t.library}/${t.version}`}return null}).filter(e=>e).join(" ")}}const Us="@firebase/app",Bs="0.10.13",Hs=new js("@firebase/app"),Vs="@firebase/app-compat",zs="@firebase/analytics-compat",qs="@firebase/analytics",$s="@firebase/app-check-compat",Ws="@firebase/app-check",Ks="@firebase/auth",Gs="@firebase/auth-compat",Js="@firebase/database",Ys="@firebase/data-connect",Qs="@firebase/database-compat",Xs="@firebase/functions",Zs="@firebase/functions-compat",er="@firebase/installations",tr="@firebase/installations-compat",sr="@firebase/messaging",rr="@firebase/messaging-compat",ir="@firebase/performance",nr="@firebase/performance-compat",ar="@firebase/remote-config",or="@firebase/remote-config-compat",lr="@firebase/storage",cr="@firebase/storage-compat",dr="@firebase/firestore",ur="@firebase/vertexai-preview",hr="@firebase/firestore-compat",mr="firebase",fr="[DEFAULT]",pr={[Us]:"fire-core",[Vs]:"fire-core-compat",[qs]:"fire-analytics",[zs]:"fire-analytics-compat",[Ws]:"fire-app-check",[$s]:"fire-app-check-compat",[Ks]:"fire-auth",[Gs]:"fire-auth-compat",[Js]:"fire-rtdb",[Ys]:"fire-data-connect",[Qs]:"fire-rtdb-compat",[Xs]:"fire-fn",[Zs]:"fire-fn-compat",[er]:"fire-iid",[tr]:"fire-iid-compat",[sr]:"fire-fcm",[rr]:"fire-fcm-compat",[ir]:"fire-perf",[nr]:"fire-perf-compat",[ar]:"fire-rc",[or]:"fire-rc-compat",[lr]:"fire-gcs",[cr]:"fire-gcs-compat",[dr]:"fire-fst",[hr]:"fire-fst-compat",[ur]:"fire-vertex","fire-js":"fire-js",[mr]:"fire-js-all"},gr=new Map,xr=new Map,yr=new Map;function br(e,t){try{e.container.addComponent(t)}catch(s){Hs.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,s)}}function vr(e){const t=e.name;if(yr.has(t))return Hs.debug(`There were multiple attempts to register component ${t}.`),!1;yr.set(t,e);for(const s of gr.values())br(s,e);for(const s of xr.values())br(s,e);return!0}function jr(e,t){const s=e.container.getProvider("heartbeat").getImmediate({optional:!0});return s&&s.triggerHeartbeat(),e.container.getProvider(t)}function Nr(e){return void 0!==e.settings}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const wr=new ts("app","Firebase",{"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}'","duplicate-app":"Firebase App named '{$appName}' already exists with different options or config","app-deleted":"Firebase App named '{$appName}' already deleted","server-app-deleted":"Firebase Server App has been deleted","no-options":"Need to provide options, when not being deployed to hosting via source.","invalid-app-argument":"firebase.{$appName}() takes either no argument or a Firebase App instance.","invalid-log-argument":"First argument to `onLog` must be null or a function.","idb-open":"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.","idb-get":"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.","idb-set":"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.","idb-delete":"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.","finalization-registry-not-supported":"FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.","invalid-server-app-environment":"FirebaseServerApp is not for use in browser environments."});
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class kr{constructor(e,t,s){this._isDeleted=!1,this._options=Object.assign({},e),this._config=Object.assign({},t),this._name=t.name,this._automaticDataCollectionEnabled=t.automaticDataCollectionEnabled,this._container=s,this.container.addComponent(new us("app",()=>this,"PUBLIC"))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(e){this.checkDestroyed(),this._automaticDataCollectionEnabled=e}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(e){this._isDeleted=e}checkDestroyed(){if(this.isDeleted)throw wr.create("app-deleted",{appName:this._name})}}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Cr="10.14.1";function Ir(e,t={}){let s=e;if("object"!=typeof t){t={name:t}}const r=Object.assign({name:fr,automaticDataCollectionEnabled:!1},t),i=r.name;if("string"!=typeof i||!i)throw wr.create("bad-app-name",{appName:String(i)});if(s||(s=Yt()),!s)throw wr.create("no-options");const n=gr.get(i);if(n){if(rs(s,n.options)&&rs(r,n.config))return n;throw wr.create("duplicate-app",{appName:i})}const a=new fs(i);for(const l of yr.values())a.addComponent(l);const o=new kr(s,r,a);return gr.set(i,o),o}function Sr(e,t,s){var r;let i=null!==(r=pr[e])&&void 0!==r?r:e;s&&(i+=`-${s}`);const n=i.match(/\s|\//),a=t.match(/\s|\//);if(n||a){const e=[`Unable to register library "${i}" with version "${t}":`];return n&&e.push(`library name "${i}" contains illegal characters (whitespace or "/")`),n&&a&&e.push("and"),a&&e.push(`version name "${t}" contains illegal characters (whitespace or "/")`),void Hs.warn(e.join(" "))}vr(new us(`${i}-version`,()=>({library:i,version:t}),"VERSION"))}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Er="firebase-heartbeat-store";let Tr=null;function _r(){return Tr||(Tr=function(e,t,{blocked:s,upgrade:r,blocking:i,terminated:n}={}){const a=indexedDB.open(e,t),o=Ps(a);return r&&a.addEventListener("upgradeneeded",e=>{r(Ps(a.result),e.oldVersion,e.newVersion,Ps(a.transaction),e)}),s&&a.addEventListener("blocked",e=>s(e.oldVersion,e.newVersion,e)),o.then(e=>{n&&e.addEventListener("close",()=>n()),i&&e.addEventListener("versionchange",e=>i(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}("firebase-heartbeat-database",1,{upgrade:(e,t)=>{if(0===t)try{e.createObjectStore(Er)}catch(s){}}}).catch(e=>{throw wr.create("idb-open",{originalErrorMessage:e.message})})),Tr}async function Ar(e,t){try{const s=(await _r()).transaction(Er,"readwrite"),r=s.objectStore(Er);await r.put(t,Pr(e)),await s.done}catch(s){if(s instanceof es)Hs.warn(s.message);else{const e=wr.create("idb-set",{originalErrorMessage:null==s?void 0:s.message});Hs.warn(e.message)}}}function Pr(e){return`${e.name}!${e.options.appId}`}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Or{constructor(e){this.container=e,this._heartbeatsCache=null;const t=this.container.getProvider("app").getImmediate();this._storage=new Rr(t),this._heartbeatsCachePromise=this._storage.read().then(e=>(this._heartbeatsCache=e,e))}async triggerHeartbeat(){var e,t;try{const s=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),r=Dr();if(null==(null===(e=this._heartbeatsCache)||void 0===e?void 0:e.heartbeats)&&(this._heartbeatsCache=await this._heartbeatsCachePromise,null==(null===(t=this._heartbeatsCache)||void 0===t?void 0:t.heartbeats)))return;if(this._heartbeatsCache.lastSentHeartbeatDate===r||this._heartbeatsCache.heartbeats.some(e=>e.date===r))return;return this._heartbeatsCache.heartbeats.push({date:r,agent:s}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter(e=>{const t=new Date(e.date).valueOf();return Date.now()-t<=2592e6}),this._storage.overwrite(this._heartbeatsCache)}catch(s){Hs.warn(s)}}async getHeartbeatsHeader(){var e;try{if(null===this._heartbeatsCache&&await this._heartbeatsCachePromise,null==(null===(e=this._heartbeatsCache)||void 0===e?void 0:e.heartbeats)||0===this._heartbeatsCache.heartbeats.length)return"";const t=Dr(),{heartbeatsToSend:s,unsentEntries:r}=function(e,t=1024){const s=[];let r=e.slice();for(const i of e){const e=s.find(e=>e.agent===i.agent);if(e){if(e.dates.push(i.date),Lr(s)>t){e.dates.pop();break}}else if(s.push({agent:i.agent,dates:[i.date]}),Lr(s)>t){s.pop();break}r=r.slice(1)}return{heartbeatsToSend:s,unsentEntries:r}}(this._heartbeatsCache.heartbeats),i=Wt(JSON.stringify({version:2,heartbeats:s}));return this._heartbeatsCache.lastSentHeartbeatDate=t,r.length>0?(this._heartbeatsCache.heartbeats=r,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),i}catch(t){return Hs.warn(t),""}}}function Dr(){return(new Date).toISOString().substring(0,10)}class Rr{constructor(e){this.app=e,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return!!function(){try{return"object"==typeof indexedDB}catch(e){return!1}}()&&new Promise((e,t)=>{try{let s=!0;const r="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(r);i.onsuccess=()=>{i.result.close(),s||self.indexedDB.deleteDatabase(r),e(!0)},i.onupgradeneeded=()=>{s=!1},i.onerror=()=>{var e;t((null===(e=i.error)||void 0===e?void 0:e.message)||"")}}catch(s){t(s)}}).then(()=>!0).catch(()=>!1)}async read(){if(await this._canUseIndexedDBPromise){const e=await async function(e){try{const t=(await _r()).transaction(Er),s=await t.objectStore(Er).get(Pr(e));return await t.done,s}catch(t){if(t instanceof es)Hs.warn(t.message);else{const e=wr.create("idb-get",{originalErrorMessage:null==t?void 0:t.message});Hs.warn(e.message)}}}(this.app);return(null==e?void 0:e.heartbeats)?e:{heartbeats:[]}}return{heartbeats:[]}}async overwrite(e){var t;if(await this._canUseIndexedDBPromise){const s=await this.read();return Ar(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:s.lastSentHeartbeatDate,heartbeats:e.heartbeats})}}async add(e){var t;if(await this._canUseIndexedDBPromise){const s=await this.read();return Ar(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:s.lastSentHeartbeatDate,heartbeats:[...s.heartbeats,...e.heartbeats]})}}}function Lr(e){return Wt(JSON.stringify({version:2,heartbeats:e})).length}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var Mr;Mr="",vr(new us("platform-logger",e=>new Fs(e),"PRIVATE")),vr(new us("heartbeat",e=>new Or(e),"PRIVATE")),Sr(Us,Bs,Mr),Sr(Us,Bs,"esm2017"),Sr("fire-js","");function Fr(e,t){var s={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(s[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(s[r[i]]=e[r[i]])}return s}function Ur(){return{"dependent-sdk-initialized-before-auth":"Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK."}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Sr("firebase","10.14.1","app"),"function"==typeof SuppressedError&&SuppressedError;const Br=Ur,Hr=new ts("auth","Firebase",{"dependent-sdk-initialized-before-auth":"Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK."}),Vr=new js("@firebase/auth");function zr(e,...t){Vr.logLevel<=ps.ERROR&&Vr.error(`Auth (${Cr}): ${e}`,...t)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function qr(e,...t){throw Gr(e,...t)}function $r(e,...t){return Gr(e,...t)}function Wr(e,t,s){const r=Object.assign(Object.assign({},Br()),{[t]:s});return new ts("auth","Firebase",r).create(t,{appName:e.name})}function Kr(e){return Wr(e,"operation-not-supported-in-this-environment","Operations that alter the current user are not supported in conjunction with FirebaseServerApp")}function Gr(e,...t){if("string"!=typeof e){const s=t[0],r=[...t.slice(1)];return r[0]&&(r[0].appName=e.name),e._errorFactory.create(s,...r)}return Hr.create(e,...t)}function Jr(e,t,...s){if(!e)throw Gr(t,...s)}function Yr(e){const t="INTERNAL ASSERTION FAILED: "+e;throw zr(t),new Error(t)}function Qr(e,t){e||Yr(t)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Xr(){var e;return"undefined"!=typeof self&&(null===(e=self.location)||void 0===e?void 0:e.href)||""}function Zr(){var e;return"undefined"!=typeof self&&(null===(e=self.location)||void 0===e?void 0:e.protocol)||null}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ei(){return"undefined"==typeof navigator||!navigator||!("onLine"in navigator)||"boolean"!=typeof navigator.onLine||"http:"!==Zr()&&"https:"!==Zr()&&!function(){const e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}()&&!("connection"in navigator)||navigator.onLine}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ti{constructor(e,t){this.shortDelay=e,this.longDelay=t,Qr(t>e,"Short delay should be less than long delay!"),this.isMobile="undefined"!=typeof window&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(Zt())||"object"==typeof navigator&&"ReactNative"===navigator.product}get(){return ei()?this.isMobile?this.longDelay:this.shortDelay:Math.min(5e3,this.shortDelay)}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function si(e,t){Qr(e.emulator,"Emulator should always be set here");const{url:s}=e.emulator;return t?`${s}${t.startsWith("/")?t.slice(1):t}`:s}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ri{static initialize(e,t,s){this.fetchImpl=e,t&&(this.headersImpl=t),s&&(this.responseImpl=s)}static fetch(){return this.fetchImpl?this.fetchImpl:"undefined"!=typeof self&&"fetch"in self?self.fetch:"undefined"!=typeof globalThis&&globalThis.fetch?globalThis.fetch:"undefined"!=typeof fetch?fetch:void Yr("Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill")}static headers(){return this.headersImpl?this.headersImpl:"undefined"!=typeof self&&"Headers"in self?self.Headers:"undefined"!=typeof globalThis&&globalThis.Headers?globalThis.Headers:"undefined"!=typeof Headers?Headers:void Yr("Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill")}static response(){return this.responseImpl?this.responseImpl:"undefined"!=typeof self&&"Response"in self?self.Response:"undefined"!=typeof globalThis&&globalThis.Response?globalThis.Response:"undefined"!=typeof Response?Response:void Yr("Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill")}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ii={CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_PASSWORD:"wrong-password",MISSING_PASSWORD:"missing-password",INVALID_LOGIN_CREDENTIALS:"invalid-credential",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",INVALID_PENDING_TOKEN:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",MISSING_REQ_TYPE:"internal-error",EMAIL_NOT_FOUND:"user-not-found",RESET_PASSWORD_EXCEED_LIMIT:"too-many-requests",EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",PASSWORD_DOES_NOT_MEET_REQUIREMENTS:"password-does-not-meet-requirements",INVALID_CODE:"invalid-verification-code",INVALID_SESSION_INFO:"invalid-verification-id",INVALID_TEMPORARY_PROOF:"invalid-credential",MISSING_SESSION_INFO:"missing-verification-id",SESSION_EXPIRED:"code-expired",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id",ADMIN_ONLY_OPERATION:"admin-restricted-operation",INVALID_MFA_PENDING_CREDENTIAL:"invalid-multi-factor-session",MFA_ENROLLMENT_NOT_FOUND:"multi-factor-info-not-found",MISSING_MFA_ENROLLMENT_ID:"missing-multi-factor-info",MISSING_MFA_PENDING_CREDENTIAL:"missing-multi-factor-session",SECOND_FACTOR_EXISTS:"second-factor-already-in-use",SECOND_FACTOR_LIMIT_EXCEEDED:"maximum-second-factor-count-exceeded",BLOCKING_FUNCTION_ERROR_RESPONSE:"internal-error",RECAPTCHA_NOT_ENABLED:"recaptcha-not-enabled",MISSING_RECAPTCHA_TOKEN:"missing-recaptcha-token",INVALID_RECAPTCHA_TOKEN:"invalid-recaptcha-token",INVALID_RECAPTCHA_ACTION:"invalid-recaptcha-action",MISSING_CLIENT_TYPE:"missing-client-type",MISSING_RECAPTCHA_VERSION:"missing-recaptcha-version",INVALID_RECAPTCHA_VERSION:"invalid-recaptcha-version",INVALID_REQ_TYPE:"invalid-req-type"},ni=new ti(3e4,6e4);
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ai(e,t){return e.tenantId&&!t.tenantId?Object.assign(Object.assign({},t),{tenantId:e.tenantId}):t}async function oi(e,t,s,r,i={}){return li(e,i,async()=>{let i={},n={};r&&("GET"===t?n=r:i={body:JSON.stringify(r)});const a=ns(Object.assign({key:e.config.apiKey},n)).slice(1),o=await e._getAdditionalHeaders();o["Content-Type"]="application/json",e.languageCode&&(o["X-Firebase-Locale"]=e.languageCode);const l=Object.assign({method:t,headers:o},i);return"undefined"!=typeof navigator&&"Cloudflare-Workers"===navigator.userAgent||(l.referrerPolicy="no-referrer"),ri.fetch()(di(e,e.config.apiHost,s,a),l)})}async function li(e,t,s){e._canInitEmulator=!1;const r=Object.assign(Object.assign({},ii),t);try{const t=new hi(e),i=await Promise.race([s(),t.promise]);t.clearNetworkTimeout();const n=await i.json();if("needConfirmation"in n)throw mi(e,"account-exists-with-different-credential",n);if(i.ok&&!("errorMessage"in n))return n;{const t=i.ok?n.errorMessage:n.error.message,[s,a]=t.split(" : ");if("FEDERATED_USER_ID_ALREADY_LINKED"===s)throw mi(e,"credential-already-in-use",n);if("EMAIL_EXISTS"===s)throw mi(e,"email-already-in-use",n);if("USER_DISABLED"===s)throw mi(e,"user-disabled",n);const o=r[s]||s.toLowerCase().replace(/[_\s]+/g,"-");if(a)throw Wr(e,o,a);qr(e,o)}}catch(i){if(i instanceof es)throw i;qr(e,"network-request-failed",{message:String(i)})}}async function ci(e,t,s,r,i={}){const n=await oi(e,t,s,r,i);return"mfaPendingCredential"in n&&qr(e,"multi-factor-auth-required",{_serverResponse:n}),n}function di(e,t,s,r){const i=`${t}${s}?${r}`;return e.config.emulator?si(e.config,i):`${e.config.apiScheme}://${i}`}function ui(e){switch(e){case"ENFORCE":return"ENFORCE";case"AUDIT":return"AUDIT";case"OFF":return"OFF";default:return"ENFORCEMENT_STATE_UNSPECIFIED"}}class hi{constructor(e){this.auth=e,this.timer=null,this.promise=new Promise((e,t)=>{this.timer=setTimeout(()=>t($r(this.auth,"network-request-failed")),ni.get())})}clearNetworkTimeout(){clearTimeout(this.timer)}}function mi(e,t,s){const r={appName:e.name};s.email&&(r.email=s.email),s.phoneNumber&&(r.phoneNumber=s.phoneNumber);const i=$r(e,t,r);return i.customData._tokenResponse=s,i}function fi(e){return void 0!==e&&void 0!==e.enterprise}class pi{constructor(e){if(this.siteKey="",this.recaptchaEnforcementState=[],void 0===e.recaptchaKey)throw new Error("recaptchaKey undefined");this.siteKey=e.recaptchaKey.split("/")[3],this.recaptchaEnforcementState=e.recaptchaEnforcementState}getProviderEnforcementState(e){if(!this.recaptchaEnforcementState||0===this.recaptchaEnforcementState.length)return null;for(const t of this.recaptchaEnforcementState)if(t.provider&&t.provider===e)return ui(t.enforcementState);return null}isProviderEnabled(e){return"ENFORCE"===this.getProviderEnforcementState(e)||"AUDIT"===this.getProviderEnforcementState(e)}}async function gi(e,t){return oi(e,"POST","/v1/accounts:lookup",t)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function xi(e){if(e)try{const t=new Date(Number(e));if(!isNaN(t.getTime()))return t.toUTCString()}catch(t){}}function yi(e){return 1e3*Number(e)}function bi(e){const[t,s,r]=e.split(".");if(void 0===t||void 0===s||void 0===r)return zr("JWT malformed, contained fewer than 3 sections"),null;try{const e=Kt(s);return e?JSON.parse(e):(zr("Failed to decode base64 JWT payload"),null)}catch(i){return zr("Caught error parsing JWT payload as JSON",null==i?void 0:i.toString()),null}}function vi(e){const t=bi(e);return Jr(t,"internal-error"),Jr(void 0!==t.exp,"internal-error"),Jr(void 0!==t.iat,"internal-error"),Number(t.exp)-Number(t.iat)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function ji(e,t,s=!1){if(s)return t;try{return await t}catch(r){throw r instanceof es&&function({code:e}){return"auth/user-disabled"===e||"auth/user-token-expired"===e}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(r)&&e.auth.currentUser===e&&await e.auth.signOut(),r}}class Ni{constructor(e){this.user=e,this.isRunning=!1,this.timerId=null,this.errorBackoff=3e4}_start(){this.isRunning||(this.isRunning=!0,this.schedule())}_stop(){this.isRunning&&(this.isRunning=!1,null!==this.timerId&&clearTimeout(this.timerId))}getInterval(e){var t;if(e){const e=this.errorBackoff;return this.errorBackoff=Math.min(2*this.errorBackoff,96e4),e}{this.errorBackoff=3e4;const e=(null!==(t=this.user.stsTokenManager.expirationTime)&&void 0!==t?t:0)-Date.now()-3e5;return Math.max(0,e)}}schedule(e=!1){if(!this.isRunning)return;const t=this.getInterval(e);this.timerId=setTimeout(async()=>{await this.iteration()},t)}async iteration(){try{await this.user.getIdToken(!0)}catch(e){return void("auth/network-request-failed"===(null==e?void 0:e.code)&&this.schedule(!0))}this.schedule()}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class wi{constructor(e,t){this.createdAt=e,this.lastLoginAt=t,this._initializeTime()}_initializeTime(){this.lastSignInTime=xi(this.lastLoginAt),this.creationTime=xi(this.createdAt)}_copy(e){this.createdAt=e.createdAt,this.lastLoginAt=e.lastLoginAt,this._initializeTime()}toJSON(){return{createdAt:this.createdAt,lastLoginAt:this.lastLoginAt}}}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function ki(e){var t;const s=e.auth,r=await e.getIdToken(),i=await ji(e,gi(s,{idToken:r}));Jr(null==i?void 0:i.users.length,s,"internal-error");const n=i.users[0];e._notifyReloadListener(n);const a=(null===(t=n.providerUserInfo)||void 0===t?void 0:t.length)?Ci(n.providerUserInfo):[],o=(l=e.providerData,c=a,[...l.filter(e=>!c.some(t=>t.providerId===e.providerId)),...c]);var l,c;const d=e.isAnonymous,u=!(e.email&&n.passwordHash||(null==o?void 0:o.length)),h=!!d&&u,m={uid:n.localId,displayName:n.displayName||null,photoURL:n.photoUrl||null,email:n.email||null,emailVerified:n.emailVerified||!1,phoneNumber:n.phoneNumber||null,tenantId:n.tenantId||null,providerData:o,metadata:new wi(n.createdAt,n.lastLoginAt),isAnonymous:h};Object.assign(e,m)}function Ci(e){return e.map(e=>{var{providerId:t}=e,s=Fr(e,["providerId"]);return{providerId:t,uid:s.rawId||"",displayName:s.displayName||null,email:s.email||null,phoneNumber:s.phoneNumber||null,photoURL:s.photoUrl||null}})}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ii{constructor(){this.refreshToken=null,this.accessToken=null,this.expirationTime=null}get isExpired(){return!this.expirationTime||Date.now()>this.expirationTime-3e4}updateFromServerResponse(e){Jr(e.idToken,"internal-error"),Jr(void 0!==e.idToken,"internal-error"),Jr(void 0!==e.refreshToken,"internal-error");const t="expiresIn"in e&&void 0!==e.expiresIn?Number(e.expiresIn):vi(e.idToken);this.updateTokensAndExpiration(e.idToken,e.refreshToken,t)}updateFromIdToken(e){Jr(0!==e.length,"internal-error");const t=vi(e);this.updateTokensAndExpiration(e,null,t)}async getToken(e,t=!1){return t||!this.accessToken||this.isExpired?(Jr(this.refreshToken,e,"user-token-expired"),this.refreshToken?(await this.refresh(e,this.refreshToken),this.accessToken):null):this.accessToken}clearRefreshToken(){this.refreshToken=null}async refresh(e,t){const{accessToken:s,refreshToken:r,expiresIn:i}=await async function(e,t){const s=await li(e,{},async()=>{const s=ns({grant_type:"refresh_token",refresh_token:t}).slice(1),{tokenApiHost:r,apiKey:i}=e.config,n=di(e,r,"/v1/token",`key=${i}`),a=await e._getAdditionalHeaders();return a["Content-Type"]="application/x-www-form-urlencoded",ri.fetch()(n,{method:"POST",headers:a,body:s})});return{accessToken:s.access_token,expiresIn:s.expires_in,refreshToken:s.refresh_token}}(e,t);this.updateTokensAndExpiration(s,r,Number(i))}updateTokensAndExpiration(e,t,s){this.refreshToken=t||null,this.accessToken=e||null,this.expirationTime=Date.now()+1e3*s}static fromJSON(e,t){const{refreshToken:s,accessToken:r,expirationTime:i}=t,n=new Ii;return s&&(Jr("string"==typeof s,"internal-error",{appName:e}),n.refreshToken=s),r&&(Jr("string"==typeof r,"internal-error",{appName:e}),n.accessToken=r),i&&(Jr("number"==typeof i,"internal-error",{appName:e}),n.expirationTime=i),n}toJSON(){return{refreshToken:this.refreshToken,accessToken:this.accessToken,expirationTime:this.expirationTime}}_assign(e){this.accessToken=e.accessToken,this.refreshToken=e.refreshToken,this.expirationTime=e.expirationTime}_clone(){return Object.assign(new Ii,this.toJSON())}_performRefresh(){return Yr("not implemented")}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Si(e,t){Jr("string"==typeof e||void 0===e,"internal-error",{appName:t})}class Ei{constructor(e){var{uid:t,auth:s,stsTokenManager:r}=e,i=Fr(e,["uid","auth","stsTokenManager"]);this.providerId="firebase",this.proactiveRefresh=new Ni(this),this.reloadUserInfo=null,this.reloadListener=null,this.uid=t,this.auth=s,this.stsTokenManager=r,this.accessToken=r.accessToken,this.displayName=i.displayName||null,this.email=i.email||null,this.emailVerified=i.emailVerified||!1,this.phoneNumber=i.phoneNumber||null,this.photoURL=i.photoURL||null,this.isAnonymous=i.isAnonymous||!1,this.tenantId=i.tenantId||null,this.providerData=i.providerData?[...i.providerData]:[],this.metadata=new wi(i.createdAt||void 0,i.lastLoginAt||void 0)}async getIdToken(e){const t=await ji(this,this.stsTokenManager.getToken(this.auth,e));return Jr(t,this.auth,"internal-error"),this.accessToken!==t&&(this.accessToken=t,await this.auth._persistUserIfCurrent(this),this.auth._notifyListenersIfCurrent(this)),t}getIdTokenResult(e){return async function(e,t=!1){const s=ds(e),r=await s.getIdToken(t),i=bi(r);Jr(i&&i.exp&&i.auth_time&&i.iat,s.auth,"internal-error");const n="object"==typeof i.firebase?i.firebase:void 0,a=null==n?void 0:n.sign_in_provider;return{claims:i,token:r,authTime:xi(yi(i.auth_time)),issuedAtTime:xi(yi(i.iat)),expirationTime:xi(yi(i.exp)),signInProvider:a||null,signInSecondFactor:(null==n?void 0:n.sign_in_second_factor)||null}}(this,e)}reload(){return async function(e){const t=ds(e);await ki(t),await t.auth._persistUserIfCurrent(t),t.auth._notifyListenersIfCurrent(t)}(this)}_assign(e){this!==e&&(Jr(this.uid===e.uid,this.auth,"internal-error"),this.displayName=e.displayName,this.photoURL=e.photoURL,this.email=e.email,this.emailVerified=e.emailVerified,this.phoneNumber=e.phoneNumber,this.isAnonymous=e.isAnonymous,this.tenantId=e.tenantId,this.providerData=e.providerData.map(e=>Object.assign({},e)),this.metadata._copy(e.metadata),this.stsTokenManager._assign(e.stsTokenManager))}_clone(e){const t=new Ei(Object.assign(Object.assign({},this),{auth:e,stsTokenManager:this.stsTokenManager._clone()}));return t.metadata._copy(this.metadata),t}_onReload(e){Jr(!this.reloadListener,this.auth,"internal-error"),this.reloadListener=e,this.reloadUserInfo&&(this._notifyReloadListener(this.reloadUserInfo),this.reloadUserInfo=null)}_notifyReloadListener(e){this.reloadListener?this.reloadListener(e):this.reloadUserInfo=e}_startProactiveRefresh(){this.proactiveRefresh._start()}_stopProactiveRefresh(){this.proactiveRefresh._stop()}async _updateTokensIfNecessary(e,t=!1){let s=!1;e.idToken&&e.idToken!==this.stsTokenManager.accessToken&&(this.stsTokenManager.updateFromServerResponse(e),s=!0),t&&await ki(this),await this.auth._persistUserIfCurrent(this),s&&this.auth._notifyListenersIfCurrent(this)}async delete(){if(Nr(this.auth.app))return Promise.reject(Kr(this.auth));const e=await this.getIdToken();return await ji(this,
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
async function(e,t){return oi(e,"POST","/v1/accounts:delete",t)}(this.auth,{idToken:e})),this.stsTokenManager.clearRefreshToken(),this.auth.signOut()}toJSON(){return Object.assign(Object.assign({uid:this.uid,email:this.email||void 0,emailVerified:this.emailVerified,displayName:this.displayName||void 0,isAnonymous:this.isAnonymous,photoURL:this.photoURL||void 0,phoneNumber:this.phoneNumber||void 0,tenantId:this.tenantId||void 0,providerData:this.providerData.map(e=>Object.assign({},e)),stsTokenManager:this.stsTokenManager.toJSON(),_redirectEventId:this._redirectEventId},this.metadata.toJSON()),{apiKey:this.auth.config.apiKey,appName:this.auth.name})}get refreshToken(){return this.stsTokenManager.refreshToken||""}static _fromJSON(e,t){var s,r,i,n,a,o,l,c;const d=null!==(s=t.displayName)&&void 0!==s?s:void 0,u=null!==(r=t.email)&&void 0!==r?r:void 0,h=null!==(i=t.phoneNumber)&&void 0!==i?i:void 0,m=null!==(n=t.photoURL)&&void 0!==n?n:void 0,f=null!==(a=t.tenantId)&&void 0!==a?a:void 0,p=null!==(o=t._redirectEventId)&&void 0!==o?o:void 0,g=null!==(l=t.createdAt)&&void 0!==l?l:void 0,x=null!==(c=t.lastLoginAt)&&void 0!==c?c:void 0,{uid:y,emailVerified:b,isAnonymous:v,providerData:j,stsTokenManager:N}=t;Jr(y&&N,e,"internal-error");const w=Ii.fromJSON(this.name,N);Jr("string"==typeof y,e,"internal-error"),Si(d,e.name),Si(u,e.name),Jr("boolean"==typeof b,e,"internal-error"),Jr("boolean"==typeof v,e,"internal-error"),Si(h,e.name),Si(m,e.name),Si(f,e.name),Si(p,e.name),Si(g,e.name),Si(x,e.name);const k=new Ei({uid:y,auth:e,email:u,emailVerified:b,displayName:d,isAnonymous:v,photoURL:m,phoneNumber:h,tenantId:f,stsTokenManager:w,createdAt:g,lastLoginAt:x});return j&&Array.isArray(j)&&(k.providerData=j.map(e=>Object.assign({},e))),p&&(k._redirectEventId=p),k}static async _fromIdTokenResponse(e,t,s=!1){const r=new Ii;r.updateFromServerResponse(t);const i=new Ei({uid:t.localId,auth:e,stsTokenManager:r,isAnonymous:s});return await ki(i),i}static async _fromGetAccountInfoResponse(e,t,s){const r=t.users[0];Jr(void 0!==r.localId,"internal-error");const i=void 0!==r.providerUserInfo?Ci(r.providerUserInfo):[],n=!(r.email&&r.passwordHash||(null==i?void 0:i.length)),a=new Ii;a.updateFromIdToken(s);const o=new Ei({uid:r.localId,auth:e,stsTokenManager:a,isAnonymous:n}),l={uid:r.localId,displayName:r.displayName||null,photoURL:r.photoUrl||null,email:r.email||null,emailVerified:r.emailVerified||!1,phoneNumber:r.phoneNumber||null,tenantId:r.tenantId||null,providerData:i,metadata:new wi(r.createdAt,r.lastLoginAt),isAnonymous:!(r.email&&r.passwordHash||(null==i?void 0:i.length))};return Object.assign(o,l),o}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ti=new Map;function _i(e){Qr(e instanceof Function,"Expected a class definition");let t=Ti.get(e);return t?(Qr(t instanceof e,"Instance stored in cache mismatched with class"),t):(t=new e,Ti.set(e,t),t)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Ai{constructor(){this.type="NONE",this.storage={}}async _isAvailable(){return!0}async _set(e,t){this.storage[e]=t}async _get(e){const t=this.storage[e];return void 0===t?null:t}async _remove(e){delete this.storage[e]}_addListener(e,t){}_removeListener(e,t){}}Ai.type="NONE";const Pi=Ai;
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Oi(e,t,s){return`firebase:${e}:${t}:${s}`}class Di{constructor(e,t,s){this.persistence=e,this.auth=t,this.userKey=s;const{config:r,name:i}=this.auth;this.fullUserKey=Oi(this.userKey,r.apiKey,i),this.fullPersistenceKey=Oi("persistence",r.apiKey,i),this.boundEventHandler=t._onStorageEvent.bind(t),this.persistence._addListener(this.fullUserKey,this.boundEventHandler)}setCurrentUser(e){return this.persistence._set(this.fullUserKey,e.toJSON())}async getCurrentUser(){const e=await this.persistence._get(this.fullUserKey);return e?Ei._fromJSON(this.auth,e):null}removeCurrentUser(){return this.persistence._remove(this.fullUserKey)}savePersistenceForRedirect(){return this.persistence._set(this.fullPersistenceKey,this.persistence.type)}async setPersistence(e){if(this.persistence===e)return;const t=await this.getCurrentUser();return await this.removeCurrentUser(),this.persistence=e,t?this.setCurrentUser(t):void 0}delete(){this.persistence._removeListener(this.fullUserKey,this.boundEventHandler)}static async create(e,t,s="authUser"){if(!t.length)return new Di(_i(Pi),e,s);const r=(await Promise.all(t.map(async e=>{if(await e._isAvailable())return e}))).filter(e=>e);let i=r[0]||_i(Pi);const n=Oi(s,e.config.apiKey,e.name);let a=null;for(const c of t)try{const t=await c._get(n);if(t){const s=Ei._fromJSON(e,t);c!==i&&(a=s),i=c;break}}catch(l){}const o=r.filter(e=>e._shouldAllowMigration);return i._shouldAllowMigration&&o.length?(i=o[0],a&&await i._set(n,a.toJSON()),await Promise.all(t.map(async e=>{if(e!==i)try{await e._remove(n)}catch(l){}})),new Di(i,e,s)):new Di(i,e,s)}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Ri(e){const t=e.toLowerCase();if(t.includes("opera/")||t.includes("opr/")||t.includes("opios/"))return"Opera";if(Ui(t))return"IEMobile";if(t.includes("msie")||t.includes("trident/"))return"IE";if(t.includes("edge/"))return"Edge";if(Li(t))return"Firefox";if(t.includes("silk/"))return"Silk";if(Hi(t))return"Blackberry";if(Vi(t))return"Webos";if(Mi(t))return"Safari";if((t.includes("chrome/")||Fi(t))&&!t.includes("edge/"))return"Chrome";if(Bi(t))return"Android";{const t=/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/,s=e.match(t);if(2===(null==s?void 0:s.length))return s[1]}return"Other"}function Li(e=Zt()){return/firefox\//i.test(e)}function Mi(e=Zt()){const t=e.toLowerCase();return t.includes("safari/")&&!t.includes("chrome/")&&!t.includes("crios/")&&!t.includes("android")}function Fi(e=Zt()){return/crios\//i.test(e)}function Ui(e=Zt()){return/iemobile/i.test(e)}function Bi(e=Zt()){return/android/i.test(e)}function Hi(e=Zt()){return/blackberry/i.test(e)}function Vi(e=Zt()){return/webos/i.test(e)}function zi(e=Zt()){return/iphone|ipad|ipod/i.test(e)||/macintosh/i.test(e)&&/mobile/i.test(e)}function qi(){return function(){const e=Zt();return e.indexOf("MSIE ")>=0||e.indexOf("Trident/")>=0}()&&10===document.documentMode}function $i(e=Zt()){return zi(e)||Bi(e)||Vi(e)||Hi(e)||/windows phone/i.test(e)||Ui(e)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Wi(e,t=[]){let s;switch(e){case"Browser":s=Ri(Zt());break;case"Worker":s=`${Ri(Zt())}-${e}`;break;default:s=e}const r=t.length?t.join(","):"FirebaseCore-web";return`${s}/JsCore/${Cr}/${r}`}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Ki{constructor(e){this.auth=e,this.queue=[]}pushCallback(e,t){const s=t=>new Promise((s,r)=>{try{s(e(t))}catch(i){r(i)}});s.onAbort=t,this.queue.push(s);const r=this.queue.length-1;return()=>{this.queue[r]=()=>Promise.resolve()}}async runMiddleware(e){if(this.auth.currentUser===e)return;const t=[];try{for(const s of this.queue)await s(e),s.onAbort&&t.push(s.onAbort)}catch(s){t.reverse();for(const e of t)try{e()}catch(r){}throw this.auth._errorFactory.create("login-blocked",{originalMessage:null==s?void 0:s.message})}}}
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Gi{constructor(e){var t,s,r,i;const n=e.customStrengthOptions;this.customStrengthOptions={},this.customStrengthOptions.minPasswordLength=null!==(t=n.minPasswordLength)&&void 0!==t?t:6,n.maxPasswordLength&&(this.customStrengthOptions.maxPasswordLength=n.maxPasswordLength),void 0!==n.containsLowercaseCharacter&&(this.customStrengthOptions.containsLowercaseLetter=n.containsLowercaseCharacter),void 0!==n.containsUppercaseCharacter&&(this.customStrengthOptions.containsUppercaseLetter=n.containsUppercaseCharacter),void 0!==n.containsNumericCharacter&&(this.customStrengthOptions.containsNumericCharacter=n.containsNumericCharacter),void 0!==n.containsNonAlphanumericCharacter&&(this.customStrengthOptions.containsNonAlphanumericCharacter=n.containsNonAlphanumericCharacter),this.enforcementState=e.enforcementState,"ENFORCEMENT_STATE_UNSPECIFIED"===this.enforcementState&&(this.enforcementState="OFF"),this.allowedNonAlphanumericCharacters=null!==(r=null===(s=e.allowedNonAlphanumericCharacters)||void 0===s?void 0:s.join(""))&&void 0!==r?r:"",this.forceUpgradeOnSignin=null!==(i=e.forceUpgradeOnSignin)&&void 0!==i&&i,this.schemaVersion=e.schemaVersion}validatePassword(e){var t,s,r,i,n,a;const o={isValid:!0,passwordPolicy:this};return this.validatePasswordLengthOptions(e,o),this.validatePasswordCharacterOptions(e,o),o.isValid&&(o.isValid=null===(t=o.meetsMinPasswordLength)||void 0===t||t),o.isValid&&(o.isValid=null===(s=o.meetsMaxPasswordLength)||void 0===s||s),o.isValid&&(o.isValid=null===(r=o.containsLowercaseLetter)||void 0===r||r),o.isValid&&(o.isValid=null===(i=o.containsUppercaseLetter)||void 0===i||i),o.isValid&&(o.isValid=null===(n=o.containsNumericCharacter)||void 0===n||n),o.isValid&&(o.isValid=null===(a=o.containsNonAlphanumericCharacter)||void 0===a||a),o}validatePasswordLengthOptions(e,t){const s=this.customStrengthOptions.minPasswordLength,r=this.customStrengthOptions.maxPasswordLength;s&&(t.meetsMinPasswordLength=e.length>=s),r&&(t.meetsMaxPasswordLength=e.length<=r)}validatePasswordCharacterOptions(e,t){let s;this.updatePasswordCharacterOptionsStatuses(t,!1,!1,!1,!1);for(let r=0;r<e.length;r++)s=e.charAt(r),this.updatePasswordCharacterOptionsStatuses(t,s>="a"&&s<="z",s>="A"&&s<="Z",s>="0"&&s<="9",this.allowedNonAlphanumericCharacters.includes(s))}updatePasswordCharacterOptionsStatuses(e,t,s,r,i){this.customStrengthOptions.containsLowercaseLetter&&(e.containsLowercaseLetter||(e.containsLowercaseLetter=t)),this.customStrengthOptions.containsUppercaseLetter&&(e.containsUppercaseLetter||(e.containsUppercaseLetter=s)),this.customStrengthOptions.containsNumericCharacter&&(e.containsNumericCharacter||(e.containsNumericCharacter=r)),this.customStrengthOptions.containsNonAlphanumericCharacter&&(e.containsNonAlphanumericCharacter||(e.containsNonAlphanumericCharacter=i))}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Ji{constructor(e,t,s,r){this.app=e,this.heartbeatServiceProvider=t,this.appCheckServiceProvider=s,this.config=r,this.currentUser=null,this.emulatorConfig=null,this.operations=Promise.resolve(),this.authStateSubscription=new Qi(this),this.idTokenSubscription=new Qi(this),this.beforeStateQueue=new Ki(this),this.redirectUser=null,this.isProactiveRefreshEnabled=!1,this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION=1,this._canInitEmulator=!0,this._isInitialized=!1,this._deleted=!1,this._initializationPromise=null,this._popupRedirectResolver=null,this._errorFactory=Hr,this._agentRecaptchaConfig=null,this._tenantRecaptchaConfigs={},this._projectPasswordPolicy=null,this._tenantPasswordPolicies={},this.lastNotifiedUid=void 0,this.languageCode=null,this.tenantId=null,this.settings={appVerificationDisabledForTesting:!1},this.frameworks=[],this.name=e.name,this.clientVersion=r.sdkClientVersion}_initializeWithPersistence(e,t){return t&&(this._popupRedirectResolver=_i(t)),this._initializationPromise=this.queue(async()=>{var s,r;if(!this._deleted&&(this.persistenceManager=await Di.create(this,e),!this._deleted)){if(null===(s=this._popupRedirectResolver)||void 0===s?void 0:s._shouldInitProactively)try{await this._popupRedirectResolver._initialize(this)}catch(i){}await this.initializeCurrentUser(t),this.lastNotifiedUid=(null===(r=this.currentUser)||void 0===r?void 0:r.uid)||null,this._deleted||(this._isInitialized=!0)}}),this._initializationPromise}async _onStorageEvent(){if(this._deleted)return;const e=await this.assertedPersistence.getCurrentUser();return this.currentUser||e?this.currentUser&&e&&this.currentUser.uid===e.uid?(this._currentUser._assign(e),void(await this.currentUser.getIdToken())):void(await this._updateCurrentUser(e,!0)):void 0}async initializeCurrentUserFromIdToken(e){try{const t=await gi(this,{idToken:e}),s=await Ei._fromGetAccountInfoResponse(this,t,e);await this.directlySetCurrentUser(s)}catch(t){await this.directlySetCurrentUser(null)}}async initializeCurrentUser(e){var t;if(Nr(this.app)){const e=this.app.settings.authIdToken;return e?new Promise(t=>{setTimeout(()=>this.initializeCurrentUserFromIdToken(e).then(t,t))}):this.directlySetCurrentUser(null)}const s=await this.assertedPersistence.getCurrentUser();let r=s,i=!1;if(e&&this.config.authDomain){await this.getOrInitRedirectPersistenceManager();const s=null===(t=this.redirectUser)||void 0===t?void 0:t._redirectEventId,n=null==r?void 0:r._redirectEventId,a=await this.tryRedirectSignIn(e);s&&s!==n||!(null==a?void 0:a.user)||(r=a.user,i=!0)}if(!r)return this.directlySetCurrentUser(null);if(!r._redirectEventId){if(i)try{await this.beforeStateQueue.runMiddleware(r)}catch(n){r=s,this._popupRedirectResolver._overrideRedirectResult(this,()=>Promise.reject(n))}return r?this.reloadAndSetCurrentUserOrClear(r):this.directlySetCurrentUser(null)}return Jr(this._popupRedirectResolver,this,"argument-error"),await this.getOrInitRedirectPersistenceManager(),this.redirectUser&&this.redirectUser._redirectEventId===r._redirectEventId?this.directlySetCurrentUser(r):this.reloadAndSetCurrentUserOrClear(r)}async tryRedirectSignIn(e){let t=null;try{t=await this._popupRedirectResolver._completeRedirectFn(this,e,!0)}catch(s){await this._setRedirectUser(null)}return t}async reloadAndSetCurrentUserOrClear(e){try{await ki(e)}catch(t){if("auth/network-request-failed"!==(null==t?void 0:t.code))return this.directlySetCurrentUser(null)}return this.directlySetCurrentUser(e)}useDeviceLanguage(){this.languageCode=function(){if("undefined"==typeof navigator)return null;const e=navigator;return e.languages&&e.languages[0]||e.language||null}()}async _delete(){this._deleted=!0}async updateCurrentUser(e){if(Nr(this.app))return Promise.reject(Kr(this));const t=e?ds(e):null;return t&&Jr(t.auth.config.apiKey===this.config.apiKey,this,"invalid-user-token"),this._updateCurrentUser(t&&t._clone(this))}async _updateCurrentUser(e,t=!1){if(!this._deleted)return e&&Jr(this.tenantId===e.tenantId,this,"tenant-id-mismatch"),t||await this.beforeStateQueue.runMiddleware(e),this.queue(async()=>{await this.directlySetCurrentUser(e),this.notifyAuthListeners()})}async signOut(){return Nr(this.app)?Promise.reject(Kr(this)):(await this.beforeStateQueue.runMiddleware(null),(this.redirectPersistenceManager||this._popupRedirectResolver)&&await this._setRedirectUser(null),this._updateCurrentUser(null,!0))}setPersistence(e){return Nr(this.app)?Promise.reject(Kr(this)):this.queue(async()=>{await this.assertedPersistence.setPersistence(_i(e))})}_getRecaptchaConfig(){return null==this.tenantId?this._agentRecaptchaConfig:this._tenantRecaptchaConfigs[this.tenantId]}async validatePassword(e){this._getPasswordPolicyInternal()||await this._updatePasswordPolicy();const t=this._getPasswordPolicyInternal();return t.schemaVersion!==this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION?Promise.reject(this._errorFactory.create("unsupported-password-policy-schema-version",{})):t.validatePassword(e)}_getPasswordPolicyInternal(){return null===this.tenantId?this._projectPasswordPolicy:this._tenantPasswordPolicies[this.tenantId]}async _updatePasswordPolicy(){const e=await async function(e,t={}){return oi(e,"GET","/v2/passwordPolicy",ai(e,t))}
/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(this),t=new Gi(e);null===this.tenantId?this._projectPasswordPolicy=t:this._tenantPasswordPolicies[this.tenantId]=t}_getPersistence(){return this.assertedPersistence.persistence.type}_updateErrorMap(e){this._errorFactory=new ts("auth","Firebase",e())}onAuthStateChanged(e,t,s){return this.registerStateListener(this.authStateSubscription,e,t,s)}beforeAuthStateChanged(e,t){return this.beforeStateQueue.pushCallback(e,t)}onIdTokenChanged(e,t,s){return this.registerStateListener(this.idTokenSubscription,e,t,s)}authStateReady(){return new Promise((e,t)=>{if(this.currentUser)e();else{const s=this.onAuthStateChanged(()=>{s(),e()},t)}})}async revokeAccessToken(e){if(this.currentUser){const t={providerId:"apple.com",tokenType:"ACCESS_TOKEN",token:e,idToken:await this.currentUser.getIdToken()};null!=this.tenantId&&(t.tenantId=this.tenantId),await async function(e,t){return oi(e,"POST","/v2/accounts:revokeToken",ai(e,t))}(this,t)}}toJSON(){var e;return{apiKey:this.config.apiKey,authDomain:this.config.authDomain,appName:this.name,currentUser:null===(e=this._currentUser)||void 0===e?void 0:e.toJSON()}}async _setRedirectUser(e,t){const s=await this.getOrInitRedirectPersistenceManager(t);return null===e?s.removeCurrentUser():s.setCurrentUser(e)}async getOrInitRedirectPersistenceManager(e){if(!this.redirectPersistenceManager){const t=e&&_i(e)||this._popupRedirectResolver;Jr(t,this,"argument-error"),this.redirectPersistenceManager=await Di.create(this,[_i(t._redirectPersistence)],"redirectUser"),this.redirectUser=await this.redirectPersistenceManager.getCurrentUser()}return this.redirectPersistenceManager}async _redirectUserForId(e){var t,s;return this._isInitialized&&await this.queue(async()=>{}),(null===(t=this._currentUser)||void 0===t?void 0:t._redirectEventId)===e?this._currentUser:(null===(s=this.redirectUser)||void 0===s?void 0:s._redirectEventId)===e?this.redirectUser:null}async _persistUserIfCurrent(e){if(e===this.currentUser)return this.queue(async()=>this.directlySetCurrentUser(e))}_notifyListenersIfCurrent(e){e===this.currentUser&&this.notifyAuthListeners()}_key(){return`${this.config.authDomain}:${this.config.apiKey}:${this.name}`}_startProactiveRefresh(){this.isProactiveRefreshEnabled=!0,this.currentUser&&this._currentUser._startProactiveRefresh()}_stopProactiveRefresh(){this.isProactiveRefreshEnabled=!1,this.currentUser&&this._currentUser._stopProactiveRefresh()}get _currentUser(){return this.currentUser}notifyAuthListeners(){var e,t;if(!this._isInitialized)return;this.idTokenSubscription.next(this.currentUser);const s=null!==(t=null===(e=this.currentUser)||void 0===e?void 0:e.uid)&&void 0!==t?t:null;this.lastNotifiedUid!==s&&(this.lastNotifiedUid=s,this.authStateSubscription.next(this.currentUser))}registerStateListener(e,t,s,r){if(this._deleted)return()=>{};const i="function"==typeof t?t:t.next.bind(t);let n=!1;const a=this._isInitialized?Promise.resolve():this._initializationPromise;if(Jr(a,this,"internal-error"),a.then(()=>{n||i(this.currentUser)}),"function"==typeof t){const i=e.addObserver(t,s,r);return()=>{n=!0,i()}}{const s=e.addObserver(t);return()=>{n=!0,s()}}}async directlySetCurrentUser(e){this.currentUser&&this.currentUser!==e&&this._currentUser._stopProactiveRefresh(),e&&this.isProactiveRefreshEnabled&&e._startProactiveRefresh(),this.currentUser=e,e?await this.assertedPersistence.setCurrentUser(e):await this.assertedPersistence.removeCurrentUser()}queue(e){return this.operations=this.operations.then(e,e),this.operations}get assertedPersistence(){return Jr(this.persistenceManager,this,"internal-error"),this.persistenceManager}_logFramework(e){e&&!this.frameworks.includes(e)&&(this.frameworks.push(e),this.frameworks.sort(),this.clientVersion=Wi(this.config.clientPlatform,this._getFrameworks()))}_getFrameworks(){return this.frameworks}async _getAdditionalHeaders(){var e;const t={"X-Client-Version":this.clientVersion};this.app.options.appId&&(t["X-Firebase-gmpid"]=this.app.options.appId);const s=await(null===(e=this.heartbeatServiceProvider.getImmediate({optional:!0}))||void 0===e?void 0:e.getHeartbeatsHeader());s&&(t["X-Firebase-Client"]=s);const r=await this._getAppCheckToken();return r&&(t["X-Firebase-AppCheck"]=r),t}async _getAppCheckToken(){var e;const t=await(null===(e=this.appCheckServiceProvider.getImmediate({optional:!0}))||void 0===e?void 0:e.getToken());return(null==t?void 0:t.error)&&function(e,...t){Vr.logLevel<=ps.WARN&&Vr.warn(`Auth (${Cr}): ${e}`,...t)}(`Error while retrieving App Check token: ${t.error}`),null==t?void 0:t.token}}function Yi(e){return ds(e)}class Qi{constructor(e){this.auth=e,this.observer=null,this.addObserver=function(e,t){const s=new ls(e,t);return s.subscribe.bind(s)}(e=>this.observer=e)}get next(){return Jr(this.observer,this.auth,"internal-error"),this.observer.next.bind(this.observer)}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */let Xi={async loadJS(){throw new Error("Unable to load external scripts")},recaptchaV2Script:"",recaptchaEnterpriseScript:"",gapiScript:""};function Zi(e){return Xi.loadJS(e)}class en{constructor(e){this.type="recaptcha-enterprise",this.auth=Yi(e)}async verify(e="verify",t=!1){async function s(e){if(!t){if(null==e.tenantId&&null!=e._agentRecaptchaConfig)return e._agentRecaptchaConfig.siteKey;if(null!=e.tenantId&&void 0!==e._tenantRecaptchaConfigs[e.tenantId])return e._tenantRecaptchaConfigs[e.tenantId].siteKey}return new Promise(async(t,s)=>{(async function(e,t){return oi(e,"GET","/v2/recaptchaConfig",ai(e,t))})(e,{clientType:"CLIENT_TYPE_WEB",version:"RECAPTCHA_ENTERPRISE"}).then(r=>{if(void 0!==r.recaptchaKey){const s=new pi(r);return null==e.tenantId?e._agentRecaptchaConfig=s:e._tenantRecaptchaConfigs[e.tenantId]=s,t(s.siteKey)}s(new Error("recaptcha Enterprise site key undefined"))}).catch(e=>{s(e)})})}function r(t,s,r){const i=window.grecaptcha;fi(i)?i.enterprise.ready(()=>{i.enterprise.execute(t,{action:e}).then(e=>{s(e)}).catch(()=>{s("NO_RECAPTCHA")})}):r(Error("No reCAPTCHA enterprise script loaded."))}return new Promise((e,i)=>{s(this.auth).then(s=>{if(!t&&fi(window.grecaptcha))r(s,e,i);else{if("undefined"==typeof window)return void i(new Error("RecaptchaVerifier is only supported in browser"));let t=Xi.recaptchaEnterpriseScript;0!==t.length&&(t+=s),Zi(t).then(()=>{r(s,e,i)}).catch(e=>{i(e)})}}).catch(e=>{i(e)})})}}async function tn(e,t,s,r=!1){const i=new en(e);let n;try{n=await i.verify(s)}catch(o){n=await i.verify(s,!0)}const a=Object.assign({},t);return r?Object.assign(a,{captchaResp:n}):Object.assign(a,{captchaResponse:n}),Object.assign(a,{clientType:"CLIENT_TYPE_WEB"}),Object.assign(a,{recaptchaVersion:"RECAPTCHA_ENTERPRISE"}),a}async function sn(e,t,s,r){var i;if(null===(i=e._getRecaptchaConfig())||void 0===i?void 0:i.isProviderEnabled("EMAIL_PASSWORD_PROVIDER")){const i=await tn(e,t,s,"getOobCode"===s);return r(e,i)}return r(e,t).catch(async i=>{if("auth/missing-recaptcha-token"===i.code){const i=await tn(e,t,s,"getOobCode"===s);return r(e,i)}return Promise.reject(i)})}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function rn(e,t,s){const r=Yi(e);Jr(r._canInitEmulator,r,"emulator-config-failed"),Jr(/^https?:\/\//.test(t),r,"invalid-emulator-scheme");const i=nn(t),{host:n,port:a}=function(e){const t=nn(e),s=/(\/\/)?([^?#/]+)/.exec(e.substr(t.length));if(!s)return{host:"",port:null};const r=s[2].split("@").pop()||"",i=/^(\[[^\]]+\])(:|$)/.exec(r);if(i){const e=i[1];return{host:e,port:an(r.substr(e.length+1))}}{const[e,t]=r.split(":");return{host:e,port:an(t)}}}(t),o=null===a?"":`:${a}`;r.config.emulator={url:`${i}//${n}${o}/`},r.settings.appVerificationDisabledForTesting=!0,r.emulatorConfig=Object.freeze({host:n,port:a,protocol:i.replace(":",""),options:Object.freeze({disableWarnings:!1})}),function(){function e(){const e=document.createElement("p"),t=e.style;e.innerText="Running in emulator mode. Do not use with production credentials.",t.position="fixed",t.width="100%",t.backgroundColor="#ffffff",t.border=".1em solid #000000",t.color="#b50000",t.bottom="0px",t.left="0px",t.margin="0px",t.zIndex="10000",t.textAlign="center",e.classList.add("firebase-emulator-warning"),document.body.appendChild(e)}"undefined"!=typeof console&&console.info;"undefined"!=typeof window&&"undefined"!=typeof document&&("loading"===document.readyState?window.addEventListener("DOMContentLoaded",e):e())}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */()}function nn(e){const t=e.indexOf(":");return t<0?"":e.substr(0,t+1)}function an(e){if(!e)return null;const t=Number(e);return isNaN(t)?null:t}class on{constructor(e,t){this.providerId=e,this.signInMethod=t}toJSON(){return Yr("not implemented")}_getIdTokenResponse(e){return Yr("not implemented")}_linkToIdToken(e,t){return Yr("not implemented")}_getReauthenticationResolver(e){return Yr("not implemented")}}async function ln(e,t){return oi(e,"POST","/v1/accounts:signUp",t)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function cn(e,t){return ci(e,"POST","/v1/accounts:signInWithPassword",ai(e,t))}async function dn(e,t){return async function(e,t){return oi(e,"POST","/v1/accounts:sendOobCode",ai(e,t))}(e,t)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class un extends on{constructor(e,t,s,r=null){super("password",s),this._email=e,this._password=t,this._tenantId=r}static _fromEmailAndPassword(e,t){return new un(e,t,"password")}static _fromEmailAndCode(e,t,s=null){return new un(e,t,"emailLink",s)}toJSON(){return{email:this._email,password:this._password,signInMethod:this.signInMethod,tenantId:this._tenantId}}static fromJSON(e){const t="string"==typeof e?JSON.parse(e):e;if((null==t?void 0:t.email)&&(null==t?void 0:t.password)){if("password"===t.signInMethod)return this._fromEmailAndPassword(t.email,t.password);if("emailLink"===t.signInMethod)return this._fromEmailAndCode(t.email,t.password,t.tenantId)}return null}async _getIdTokenResponse(e){switch(this.signInMethod){case"password":return sn(e,{returnSecureToken:!0,email:this._email,password:this._password,clientType:"CLIENT_TYPE_WEB"},"signInWithPassword",cn);case"emailLink":return async function(e,t){return ci(e,"POST","/v1/accounts:signInWithEmailLink",ai(e,t))}(e,{email:this._email,oobCode:this._password});default:qr(e,"internal-error")}}async _linkToIdToken(e,t){switch(this.signInMethod){case"password":return sn(e,{idToken:t,returnSecureToken:!0,email:this._email,password:this._password,clientType:"CLIENT_TYPE_WEB"},"signUpPassword",ln);case"emailLink":return async function(e,t){return ci(e,"POST","/v1/accounts:signInWithEmailLink",ai(e,t))}(e,{idToken:t,email:this._email,oobCode:this._password});default:qr(e,"internal-error")}}_getReauthenticationResolver(e){return this._getIdTokenResponse(e)}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function hn(e,t){return ci(e,"POST","/v1/accounts:signInWithIdp",ai(e,t))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class mn extends on{constructor(){super(...arguments),this.pendingToken=null}static _fromParams(e){const t=new mn(e.providerId,e.signInMethod);return e.idToken||e.accessToken?(e.idToken&&(t.idToken=e.idToken),e.accessToken&&(t.accessToken=e.accessToken),e.nonce&&!e.pendingToken&&(t.nonce=e.nonce),e.pendingToken&&(t.pendingToken=e.pendingToken)):e.oauthToken&&e.oauthTokenSecret?(t.accessToken=e.oauthToken,t.secret=e.oauthTokenSecret):qr("argument-error"),t}toJSON(){return{idToken:this.idToken,accessToken:this.accessToken,secret:this.secret,nonce:this.nonce,pendingToken:this.pendingToken,providerId:this.providerId,signInMethod:this.signInMethod}}static fromJSON(e){const t="string"==typeof e?JSON.parse(e):e,{providerId:s,signInMethod:r}=t,i=Fr(t,["providerId","signInMethod"]);if(!s||!r)return null;const n=new mn(s,r);return n.idToken=i.idToken||void 0,n.accessToken=i.accessToken||void 0,n.secret=i.secret,n.nonce=i.nonce,n.pendingToken=i.pendingToken||null,n}_getIdTokenResponse(e){return hn(e,this.buildRequest())}_linkToIdToken(e,t){const s=this.buildRequest();return s.idToken=t,hn(e,s)}_getReauthenticationResolver(e){const t=this.buildRequest();return t.autoCreate=!1,hn(e,t)}buildRequest(){const e={requestUri:"http://localhost",returnSecureToken:!0};if(this.pendingToken)e.pendingToken=this.pendingToken;else{const t={};this.idToken&&(t.id_token=this.idToken),this.accessToken&&(t.access_token=this.accessToken),this.secret&&(t.oauth_token_secret=this.secret),t.providerId=this.providerId,this.nonce&&!this.pendingToken&&(t.nonce=this.nonce),e.postBody=ns(t)}return e}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class fn{constructor(e){var t,s,r,i,n,a;const o=as(os(e)),l=null!==(t=o.apiKey)&&void 0!==t?t:null,c=null!==(s=o.oobCode)&&void 0!==s?s:null,d=function(e){switch(e){case"recoverEmail":return"RECOVER_EMAIL";case"resetPassword":return"PASSWORD_RESET";case"signIn":return"EMAIL_SIGNIN";case"verifyEmail":return"VERIFY_EMAIL";case"verifyAndChangeEmail":return"VERIFY_AND_CHANGE_EMAIL";case"revertSecondFactorAddition":return"REVERT_SECOND_FACTOR_ADDITION";default:return null}}(null!==(r=o.mode)&&void 0!==r?r:null);Jr(l&&c&&d,"argument-error"),this.apiKey=l,this.operation=d,this.code=c,this.continueUrl=null!==(i=o.continueUrl)&&void 0!==i?i:null,this.languageCode=null!==(n=o.languageCode)&&void 0!==n?n:null,this.tenantId=null!==(a=o.tenantId)&&void 0!==a?a:null}static parseLink(e){const t=function(e){const t=as(os(e)).link,s=t?as(os(t)).deep_link_id:null,r=as(os(e)).deep_link_id;return(r?as(os(r)).link:null)||r||s||t||e}(e);try{return new fn(t)}catch(s){return null}}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class pn{constructor(){this.providerId=pn.PROVIDER_ID}static credential(e,t){return un._fromEmailAndPassword(e,t)}static credentialWithLink(e,t){const s=fn.parseLink(t);return Jr(s,"argument-error"),un._fromEmailAndCode(e,s.code,s.tenantId)}}pn.PROVIDER_ID="password",pn.EMAIL_PASSWORD_SIGN_IN_METHOD="password",pn.EMAIL_LINK_SIGN_IN_METHOD="emailLink";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class gn{constructor(e){this.providerId=e,this.defaultLanguageCode=null,this.customParameters={}}setDefaultLanguage(e){this.defaultLanguageCode=e}setCustomParameters(e){return this.customParameters=e,this}getCustomParameters(){return this.customParameters}}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class xn extends gn{constructor(){super(...arguments),this.scopes=[]}addScope(e){return this.scopes.includes(e)||this.scopes.push(e),this}getScopes(){return[...this.scopes]}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class yn extends xn{constructor(){super("facebook.com")}static credential(e){return mn._fromParams({providerId:yn.PROVIDER_ID,signInMethod:yn.FACEBOOK_SIGN_IN_METHOD,accessToken:e})}static credentialFromResult(e){return yn.credentialFromTaggedObject(e)}static credentialFromError(e){return yn.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e||!("oauthAccessToken"in e))return null;if(!e.oauthAccessToken)return null;try{return yn.credential(e.oauthAccessToken)}catch(t){return null}}}yn.FACEBOOK_SIGN_IN_METHOD="facebook.com",yn.PROVIDER_ID="facebook.com";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class bn extends xn{constructor(){super("google.com"),this.addScope("profile")}static credential(e,t){return mn._fromParams({providerId:bn.PROVIDER_ID,signInMethod:bn.GOOGLE_SIGN_IN_METHOD,idToken:e,accessToken:t})}static credentialFromResult(e){return bn.credentialFromTaggedObject(e)}static credentialFromError(e){return bn.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e)return null;const{oauthIdToken:t,oauthAccessToken:s}=e;if(!t&&!s)return null;try{return bn.credential(t,s)}catch(r){return null}}}bn.GOOGLE_SIGN_IN_METHOD="google.com",bn.PROVIDER_ID="google.com";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class vn extends xn{constructor(){super("github.com")}static credential(e){return mn._fromParams({providerId:vn.PROVIDER_ID,signInMethod:vn.GITHUB_SIGN_IN_METHOD,accessToken:e})}static credentialFromResult(e){return vn.credentialFromTaggedObject(e)}static credentialFromError(e){return vn.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e||!("oauthAccessToken"in e))return null;if(!e.oauthAccessToken)return null;try{return vn.credential(e.oauthAccessToken)}catch(t){return null}}}vn.GITHUB_SIGN_IN_METHOD="github.com",vn.PROVIDER_ID="github.com";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class jn extends xn{constructor(){super("twitter.com")}static credential(e,t){return mn._fromParams({providerId:jn.PROVIDER_ID,signInMethod:jn.TWITTER_SIGN_IN_METHOD,oauthToken:e,oauthTokenSecret:t})}static credentialFromResult(e){return jn.credentialFromTaggedObject(e)}static credentialFromError(e){return jn.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e)return null;const{oauthAccessToken:t,oauthTokenSecret:s}=e;if(!t||!s)return null;try{return jn.credential(t,s)}catch(r){return null}}}jn.TWITTER_SIGN_IN_METHOD="twitter.com",jn.PROVIDER_ID="twitter.com";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Nn{constructor(e){this.user=e.user,this.providerId=e.providerId,this._tokenResponse=e._tokenResponse,this.operationType=e.operationType}static async _fromIdTokenResponse(e,t,s,r=!1){const i=await Ei._fromIdTokenResponse(e,s,r),n=wn(s);return new Nn({user:i,providerId:n,_tokenResponse:s,operationType:t})}static async _forOperation(e,t,s){await e._updateTokensIfNecessary(s,!0);const r=wn(s);return new Nn({user:e,providerId:r,_tokenResponse:s,operationType:t})}}function wn(e){return e.providerId?e.providerId:"phoneNumber"in e?"phone":null}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class kn extends es{constructor(e,t,s,r){var i;super(t.code,t.message),this.operationType=s,this.user=r,Object.setPrototypeOf(this,kn.prototype),this.customData={appName:e.name,tenantId:null!==(i=e.tenantId)&&void 0!==i?i:void 0,_serverResponse:t.customData._serverResponse,operationType:s}}static _fromErrorAndOperation(e,t,s,r){return new kn(e,t,s,r)}}function Cn(e,t,s,r){return("reauthenticate"===t?s._getReauthenticationResolver(e):s._getIdTokenResponse(e)).catch(s=>{if("auth/multi-factor-auth-required"===s.code)throw kn._fromErrorAndOperation(e,s,t,r);throw s})}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
async function In(e,t,s=!1){if(Nr(e.app))return Promise.reject(Kr(e));const r="signIn",i=await Cn(e,r,t),n=await Nn._fromIdTokenResponse(e,r,i);return s||await e._updateCurrentUser(n.user),n}function Sn(e,t,s){return Nr(e.app)?Promise.reject(Kr(e)):async function(e,t){return In(Yi(e),t)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(ds(e),pn.credential(t,s)).catch(async t=>{throw"auth/password-does-not-meet-requirements"===t.code&&async function(e){const t=Yi(e);t._getPasswordPolicyInternal()&&await t._updatePasswordPolicy()}(e),t})}const En="__sak";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Tn{constructor(e,t){this.storageRetriever=e,this.type=t}_isAvailable(){try{return this.storage?(this.storage.setItem(En,"1"),this.storage.removeItem(En),Promise.resolve(!0)):Promise.resolve(!1)}catch(e){return Promise.resolve(!1)}}_set(e,t){return this.storage.setItem(e,JSON.stringify(t)),Promise.resolve()}_get(e){const t=this.storage.getItem(e);return Promise.resolve(t?JSON.parse(t):null)}_remove(e){return this.storage.removeItem(e),Promise.resolve()}get storage(){return this.storageRetriever()}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class _n extends Tn{constructor(){super(()=>window.localStorage,"LOCAL"),this.boundEventHandler=(e,t)=>this.onStorageEvent(e,t),this.listeners={},this.localCache={},this.pollTimer=null,this.fallbackToPolling=$i(),this._shouldAllowMigration=!0}forAllChangedKeys(e){for(const t of Object.keys(this.listeners)){const s=this.storage.getItem(t),r=this.localCache[t];s!==r&&e(t,r,s)}}onStorageEvent(e,t=!1){if(!e.key)return void this.forAllChangedKeys((e,t,s)=>{this.notifyListeners(e,s)});const s=e.key;t?this.detachListener():this.stopPolling();const r=()=>{const e=this.storage.getItem(s);(t||this.localCache[s]!==e)&&this.notifyListeners(s,e)},i=this.storage.getItem(s);qi()&&i!==e.newValue&&e.newValue!==e.oldValue?setTimeout(r,10):r()}notifyListeners(e,t){this.localCache[e]=t;const s=this.listeners[e];if(s)for(const r of Array.from(s))r(t?JSON.parse(t):t)}startPolling(){this.stopPolling(),this.pollTimer=setInterval(()=>{this.forAllChangedKeys((e,t,s)=>{this.onStorageEvent(new StorageEvent("storage",{key:e,oldValue:t,newValue:s}),!0)})},1e3)}stopPolling(){this.pollTimer&&(clearInterval(this.pollTimer),this.pollTimer=null)}attachListener(){window.addEventListener("storage",this.boundEventHandler)}detachListener(){window.removeEventListener("storage",this.boundEventHandler)}_addListener(e,t){0===Object.keys(this.listeners).length&&(this.fallbackToPolling?this.startPolling():this.attachListener()),this.listeners[e]||(this.listeners[e]=new Set,this.localCache[e]=this.storage.getItem(e)),this.listeners[e].add(t)}_removeListener(e,t){this.listeners[e]&&(this.listeners[e].delete(t),0===this.listeners[e].size&&delete this.listeners[e]),0===Object.keys(this.listeners).length&&(this.detachListener(),this.stopPolling())}async _set(e,t){await super._set(e,t),this.localCache[e]=JSON.stringify(t)}async _get(e){const t=await super._get(e);return this.localCache[e]=JSON.stringify(t),t}async _remove(e){await super._remove(e),delete this.localCache[e]}}_n.type="LOCAL";const An=_n;
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Pn extends Tn{constructor(){super(()=>window.sessionStorage,"SESSION")}_addListener(e,t){}_removeListener(e,t){}}Pn.type="SESSION";const On=Pn;
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Dn{constructor(e){this.eventTarget=e,this.handlersMap={},this.boundEventHandler=this.handleEvent.bind(this)}static _getInstance(e){const t=this.receivers.find(t=>t.isListeningto(e));if(t)return t;const s=new Dn(e);return this.receivers.push(s),s}isListeningto(e){return this.eventTarget===e}async handleEvent(e){const t=e,{eventId:s,eventType:r,data:i}=t.data,n=this.handlersMap[r];if(!(null==n?void 0:n.size))return;t.ports[0].postMessage({status:"ack",eventId:s,eventType:r});const a=Array.from(n).map(async e=>e(t.origin,i)),o=await function(e){return Promise.all(e.map(async e=>{try{return{fulfilled:!0,value:await e}}catch(t){return{fulfilled:!1,reason:t}}}))}(a);t.ports[0].postMessage({status:"done",eventId:s,eventType:r,response:o})}_subscribe(e,t){0===Object.keys(this.handlersMap).length&&this.eventTarget.addEventListener("message",this.boundEventHandler),this.handlersMap[e]||(this.handlersMap[e]=new Set),this.handlersMap[e].add(t)}_unsubscribe(e,t){this.handlersMap[e]&&t&&this.handlersMap[e].delete(t),t&&0!==this.handlersMap[e].size||delete this.handlersMap[e],0===Object.keys(this.handlersMap).length&&this.eventTarget.removeEventListener("message",this.boundEventHandler)}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Rn(e="",t=10){let s="";for(let r=0;r<t;r++)s+=Math.floor(10*Math.random());return e+s}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */Dn.receivers=[];class Ln{constructor(e){this.target=e,this.handlers=new Set}removeMessageHandler(e){e.messageChannel&&(e.messageChannel.port1.removeEventListener("message",e.onMessage),e.messageChannel.port1.close()),this.handlers.delete(e)}async _send(e,t,s=50){const r="undefined"!=typeof MessageChannel?new MessageChannel:null;if(!r)throw new Error("connection_unavailable");let i,n;return new Promise((a,o)=>{const l=Rn("",20);r.port1.start();const c=setTimeout(()=>{o(new Error("unsupported_event"))},s);n={messageChannel:r,onMessage(e){const t=e;if(t.data.eventId===l)switch(t.data.status){case"ack":clearTimeout(c),i=setTimeout(()=>{o(new Error("timeout"))},3e3);break;case"done":clearTimeout(i),a(t.data.response);break;default:clearTimeout(c),clearTimeout(i),o(new Error("invalid_response"))}}},this.handlers.add(n),r.port1.addEventListener("message",n.onMessage),this.target.postMessage({eventType:e,eventId:l,data:t},[r.port2])}).finally(()=>{n&&this.removeMessageHandler(n)})}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Mn(){return window}
/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Fn(){return void 0!==Mn().WorkerGlobalScope&&"function"==typeof Mn().importScripts}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Un="firebaseLocalStorageDb",Bn="firebaseLocalStorage",Hn="fbase_key";class Vn{constructor(e){this.request=e}toPromise(){return new Promise((e,t)=>{this.request.addEventListener("success",()=>{e(this.request.result)}),this.request.addEventListener("error",()=>{t(this.request.error)})})}}function zn(e,t){return e.transaction([Bn],t?"readwrite":"readonly").objectStore(Bn)}function qn(){const e=indexedDB.open(Un,1);return new Promise((t,s)=>{e.addEventListener("error",()=>{s(e.error)}),e.addEventListener("upgradeneeded",()=>{const t=e.result;try{t.createObjectStore(Bn,{keyPath:Hn})}catch(r){s(r)}}),e.addEventListener("success",async()=>{const s=e.result;s.objectStoreNames.contains(Bn)?t(s):(s.close(),await function(){const e=indexedDB.deleteDatabase(Un);return new Vn(e).toPromise()}(),t(await qn()))})})}async function $n(e,t,s){const r=zn(e,!0).put({[Hn]:t,value:s});return new Vn(r).toPromise()}function Wn(e,t){const s=zn(e,!0).delete(t);return new Vn(s).toPromise()}class Kn{constructor(){this.type="LOCAL",this._shouldAllowMigration=!0,this.listeners={},this.localCache={},this.pollTimer=null,this.pendingWrites=0,this.receiver=null,this.sender=null,this.serviceWorkerReceiverAvailable=!1,this.activeServiceWorker=null,this._workerInitializationPromise=this.initializeServiceWorkerMessaging().then(()=>{},()=>{})}async _openDb(){return this.db||(this.db=await qn()),this.db}async _withRetries(e){let t=0;for(;;)try{const t=await this._openDb();return await e(t)}catch(s){if(t++>3)throw s;this.db&&(this.db.close(),this.db=void 0)}}async initializeServiceWorkerMessaging(){return Fn()?this.initializeReceiver():this.initializeSender()}async initializeReceiver(){this.receiver=Dn._getInstance(Fn()?self:null),this.receiver._subscribe("keyChanged",async(e,t)=>({keyProcessed:(await this._poll()).includes(t.key)})),this.receiver._subscribe("ping",async(e,t)=>["keyChanged"])}async initializeSender(){var e,t;if(this.activeServiceWorker=await async function(){if(!(null===navigator||void 0===navigator?void 0:navigator.serviceWorker))return null;try{return(await navigator.serviceWorker.ready).active}catch(e){return null}}(),!this.activeServiceWorker)return;this.sender=new Ln(this.activeServiceWorker);const s=await this.sender._send("ping",{},800);s&&(null===(e=s[0])||void 0===e?void 0:e.fulfilled)&&(null===(t=s[0])||void 0===t?void 0:t.value.includes("keyChanged"))&&(this.serviceWorkerReceiverAvailable=!0)}async notifyServiceWorker(e){var t;if(this.sender&&this.activeServiceWorker&&((null===(t=null===navigator||void 0===navigator?void 0:navigator.serviceWorker)||void 0===t?void 0:t.controller)||null)===this.activeServiceWorker)try{await this.sender._send("keyChanged",{key:e},this.serviceWorkerReceiverAvailable?800:50)}catch(t){}}async _isAvailable(){try{if(!indexedDB)return!1;const e=await qn();return await $n(e,En,"1"),await Wn(e,En),!0}catch(e){}return!1}async _withPendingWrite(e){this.pendingWrites++;try{await e()}finally{this.pendingWrites--}}async _set(e,t){return this._withPendingWrite(async()=>(await this._withRetries(s=>$n(s,e,t)),this.localCache[e]=t,this.notifyServiceWorker(e)))}async _get(e){const t=await this._withRetries(t=>async function(e,t){const s=zn(e,!1).get(t),r=await new Vn(s).toPromise();return void 0===r?null:r.value}(t,e));return this.localCache[e]=t,t}async _remove(e){return this._withPendingWrite(async()=>(await this._withRetries(t=>Wn(t,e)),delete this.localCache[e],this.notifyServiceWorker(e)))}async _poll(){const e=await this._withRetries(e=>{const t=zn(e,!1).getAll();return new Vn(t).toPromise()});if(!e)return[];if(0!==this.pendingWrites)return[];const t=[],s=new Set;if(0!==e.length)for(const{fbase_key:r,value:i}of e)s.add(r),JSON.stringify(this.localCache[r])!==JSON.stringify(i)&&(this.notifyListeners(r,i),t.push(r));for(const r of Object.keys(this.localCache))this.localCache[r]&&!s.has(r)&&(this.notifyListeners(r,null),t.push(r));return t}notifyListeners(e,t){this.localCache[e]=t;const s=this.listeners[e];if(s)for(const r of Array.from(s))r(t)}startPolling(){this.stopPolling(),this.pollTimer=setInterval(async()=>this._poll(),800)}stopPolling(){this.pollTimer&&(clearInterval(this.pollTimer),this.pollTimer=null)}_addListener(e,t){0===Object.keys(this.listeners).length&&this.startPolling(),this.listeners[e]||(this.listeners[e]=new Set,this._get(e)),this.listeners[e].add(t)}_removeListener(e,t){this.listeners[e]&&(this.listeners[e].delete(t),0===this.listeners[e].size&&delete this.listeners[e]),0===Object.keys(this.listeners).length&&this.stopPolling()}}Kn.type="LOCAL";const Gn=Kn;
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Jn(e,t){return t?_i(t):(Jr(e._popupRedirectResolver,e,"argument-error"),e._popupRedirectResolver)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */new ti(3e4,6e4);class Yn extends on{constructor(e){super("custom","custom"),this.params=e}_getIdTokenResponse(e){return hn(e,this._buildIdpRequest())}_linkToIdToken(e,t){return hn(e,this._buildIdpRequest(t))}_getReauthenticationResolver(e){return hn(e,this._buildIdpRequest())}_buildIdpRequest(e){const t={requestUri:this.params.requestUri,sessionId:this.params.sessionId,postBody:this.params.postBody,tenantId:this.params.tenantId,pendingToken:this.params.pendingToken,returnSecureToken:!0,returnIdpCredential:!0};return e&&(t.idToken=e),t}}function Qn(e){return In(e.auth,new Yn(e),e.bypassAuthState)}function Xn(e){const{auth:t,user:s}=e;return Jr(s,t,"internal-error"),
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
async function(e,t,s=!1){const{auth:r}=e;if(Nr(r.app))return Promise.reject(Kr(r));const i="reauthenticate";try{const n=await ji(e,Cn(r,i,t,e),s);Jr(n.idToken,r,"internal-error");const a=bi(n.idToken);Jr(a,r,"internal-error");const{sub:o}=a;return Jr(e.uid===o,r,"user-mismatch"),Nn._forOperation(e,i,n)}catch(n){throw"auth/user-not-found"===(null==n?void 0:n.code)&&qr(r,"user-mismatch"),n}}(s,new Yn(e),e.bypassAuthState)}async function Zn(e){const{auth:t,user:s}=e;return Jr(s,t,"internal-error"),async function(e,t,s=!1){const r=await ji(e,t._linkToIdToken(e.auth,await e.getIdToken()),s);return Nn._forOperation(e,"link",r)}(s,new Yn(e),e.bypassAuthState)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ea{constructor(e,t,s,r,i=!1){this.auth=e,this.resolver=s,this.user=r,this.bypassAuthState=i,this.pendingPromise=null,this.eventManager=null,this.filter=Array.isArray(t)?t:[t]}execute(){return new Promise(async(e,t)=>{this.pendingPromise={resolve:e,reject:t};try{this.eventManager=await this.resolver._initialize(this.auth),await this.onExecution(),this.eventManager.registerConsumer(this)}catch(s){this.reject(s)}})}async onAuthEvent(e){const{urlResponse:t,sessionId:s,postBody:r,tenantId:i,error:n,type:a}=e;if(n)return void this.reject(n);const o={auth:this.auth,requestUri:t,sessionId:s,tenantId:i||void 0,postBody:r||void 0,user:this.user,bypassAuthState:this.bypassAuthState};try{this.resolve(await this.getIdpTask(a)(o))}catch(l){this.reject(l)}}onError(e){this.reject(e)}getIdpTask(e){switch(e){case"signInViaPopup":case"signInViaRedirect":return Qn;case"linkViaPopup":case"linkViaRedirect":return Zn;case"reauthViaPopup":case"reauthViaRedirect":return Xn;default:qr(this.auth,"internal-error")}}resolve(e){Qr(this.pendingPromise,"Pending promise was never set"),this.pendingPromise.resolve(e),this.unregisterAndCleanUp()}reject(e){Qr(this.pendingPromise,"Pending promise was never set"),this.pendingPromise.reject(e),this.unregisterAndCleanUp()}unregisterAndCleanUp(){this.eventManager&&this.eventManager.unregisterConsumer(this),this.pendingPromise=null,this.cleanUp()}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ta=new ti(2e3,1e4);async function sa(e,t,s){if(Nr(e.app))return Promise.reject($r(e,"operation-not-supported-in-this-environment"));const r=Yi(e);!function(e,t,s){if(!(t instanceof s))throw s.name!==t.constructor.name&&qr(e,"argument-error"),Wr(e,"argument-error",`Type of ${t.constructor.name} does not match expected instance.Did you pass a reference from a different Auth SDK?`)}(e,t,gn);const i=Jn(r,s);return new ra(r,"signInViaPopup",t,i).executeNotNull()}class ra extends ea{constructor(e,t,s,r,i){super(e,t,r,i),this.provider=s,this.authWindow=null,this.pollId=null,ra.currentPopupAction&&ra.currentPopupAction.cancel(),ra.currentPopupAction=this}async executeNotNull(){const e=await this.execute();return Jr(e,this.auth,"internal-error"),e}async onExecution(){Qr(1===this.filter.length,"Popup operations only handle one event");const e=Rn();this.authWindow=await this.resolver._openPopup(this.auth,this.provider,this.filter[0],e),this.authWindow.associatedEvent=e,this.resolver._originValidation(this.auth).catch(e=>{this.reject(e)}),this.resolver._isIframeWebStorageSupported(this.auth,e=>{e||this.reject($r(this.auth,"web-storage-unsupported"))}),this.pollUserCancellation()}get eventId(){var e;return(null===(e=this.authWindow)||void 0===e?void 0:e.associatedEvent)||null}cancel(){this.reject($r(this.auth,"cancelled-popup-request"))}cleanUp(){this.authWindow&&this.authWindow.close(),this.pollId&&window.clearTimeout(this.pollId),this.authWindow=null,this.pollId=null,ra.currentPopupAction=null}pollUserCancellation(){const e=()=>{var t,s;(null===(s=null===(t=this.authWindow)||void 0===t?void 0:t.window)||void 0===s?void 0:s.closed)?this.pollId=window.setTimeout(()=>{this.pollId=null,this.reject($r(this.auth,"popup-closed-by-user"))},8e3):this.pollId=window.setTimeout(e,ta.get())};e()}}ra.currentPopupAction=null;
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const ia="pendingRedirect",na=new Map;class aa extends ea{constructor(e,t,s=!1){super(e,["signInViaRedirect","linkViaRedirect","reauthViaRedirect","unknown"],t,void 0,s),this.eventId=null}async execute(){let e=na.get(this.auth._key());if(!e){try{const t=await async function(e,t){const s=function(e){return Oi(ia,e.config.apiKey,e.name)}(t),r=function(e){return _i(e._redirectPersistence)}(e);if(!(await r._isAvailable()))return!1;const i="true"===await r._get(s);return await r._remove(s),i}(this.resolver,this.auth)?await super.execute():null;e=()=>Promise.resolve(t)}catch(t){e=()=>Promise.reject(t)}na.set(this.auth._key(),e)}return this.bypassAuthState||na.set(this.auth._key(),()=>Promise.resolve(null)),e()}async onAuthEvent(e){if("signInViaRedirect"===e.type)return super.onAuthEvent(e);if("unknown"!==e.type){if(e.eventId){const t=await this.auth._redirectUserForId(e.eventId);if(t)return this.user=t,super.onAuthEvent(e);this.resolve(null)}}else this.resolve(null)}async onExecution(){}cleanUp(){}}function oa(e,t){na.set(e._key(),t)}async function la(e,t,s=!1){if(Nr(e.app))return Promise.reject(Kr(e));const r=Yi(e),i=Jn(r,t),n=new aa(r,i,s),a=await n.execute();return a&&!s&&(delete a.user._redirectEventId,await r._persistUserIfCurrent(a.user),await r._setRedirectUser(null,t)),a}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ca{constructor(e){this.auth=e,this.cachedEventUids=new Set,this.consumers=new Set,this.queuedRedirectEvent=null,this.hasHandledPotentialRedirect=!1,this.lastProcessedEventTime=Date.now()}registerConsumer(e){this.consumers.add(e),this.queuedRedirectEvent&&this.isEventForConsumer(this.queuedRedirectEvent,e)&&(this.sendToConsumer(this.queuedRedirectEvent,e),this.saveEventToCache(this.queuedRedirectEvent),this.queuedRedirectEvent=null)}unregisterConsumer(e){this.consumers.delete(e)}onEvent(e){if(this.hasEventBeenHandled(e))return!1;let t=!1;return this.consumers.forEach(s=>{this.isEventForConsumer(e,s)&&(t=!0,this.sendToConsumer(e,s),this.saveEventToCache(e))}),this.hasHandledPotentialRedirect||!function(e){switch(e.type){case"signInViaRedirect":case"linkViaRedirect":case"reauthViaRedirect":return!0;case"unknown":return ua(e);default:return!1}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(e)||(this.hasHandledPotentialRedirect=!0,t||(this.queuedRedirectEvent=e,t=!0)),t}sendToConsumer(e,t){var s;if(e.error&&!ua(e)){const r=(null===(s=e.error.code)||void 0===s?void 0:s.split("auth/")[1])||"internal-error";t.onError($r(this.auth,r))}else t.onAuthEvent(e)}isEventForConsumer(e,t){const s=null===t.eventId||!!e.eventId&&e.eventId===t.eventId;return t.filter.includes(e.type)&&s}hasEventBeenHandled(e){return Date.now()-this.lastProcessedEventTime>=6e5&&this.cachedEventUids.clear(),this.cachedEventUids.has(da(e))}saveEventToCache(e){this.cachedEventUids.add(da(e)),this.lastProcessedEventTime=Date.now()}}function da(e){return[e.type,e.eventId,e.sessionId,e.tenantId].filter(e=>e).join("-")}function ua({type:e,error:t}){return"unknown"===e&&"auth/no-auth-event"===(null==t?void 0:t.code)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const ha=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,ma=/^https?/;async function fa(e){if(e.config.emulator)return;const{authorizedDomains:t}=await async function(e,t={}){return oi(e,"GET","/v1/projects",t)}(e);for(const r of t)try{if(pa(r))return}catch(s){}qr(e,"unauthorized-domain")}function pa(e){const t=Xr(),{protocol:s,hostname:r}=new URL(t);if(e.startsWith("chrome-extension://")){const i=new URL(e);return""===i.hostname&&""===r?"chrome-extension:"===s&&e.replace("chrome-extension://","")===t.replace("chrome-extension://",""):"chrome-extension:"===s&&i.hostname===r}if(!ma.test(s))return!1;if(ha.test(e))return r===e;const i=e.replace(/\./g,"\\.");return new RegExp("^(.+\\."+i+"|"+i+")$","i").test(r)}
/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ga=new ti(3e4,6e4);function xa(){const e=Mn().___jsl;if(null==e?void 0:e.H)for(const t of Object.keys(e.H))if(e.H[t].r=e.H[t].r||[],e.H[t].L=e.H[t].L||[],e.H[t].r=[...e.H[t].L],e.CP)for(let s=0;s<e.CP.length;s++)e.CP[s]=null}function ya(e){return new Promise((t,s)=>{var r,i,n;function a(){xa(),gapi.load("gapi.iframes",{callback:()=>{t(gapi.iframes.getContext())},ontimeout:()=>{xa(),s($r(e,"network-request-failed"))},timeout:ga.get()})}if(null===(i=null===(r=Mn().gapi)||void 0===r?void 0:r.iframes)||void 0===i?void 0:i.Iframe)t(gapi.iframes.getContext());else{if(!(null===(n=Mn().gapi)||void 0===n?void 0:n.load)){const t=`__${"iframefcb"}${Math.floor(1e6*Math.random())}`;return Mn()[t]=()=>{gapi.load?a():s($r(e,"network-request-failed"))},Zi(`${Xi.gapiScript}?onload=${t}`).catch(e=>s(e))}a()}}).catch(e=>{throw ba=null,e})}let ba=null;
/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const va=new ti(5e3,15e3),ja={style:{position:"absolute",top:"-100px",width:"1px",height:"1px"},"aria-hidden":"true",tabindex:"-1"},Na=new Map([["identitytoolkit.googleapis.com","p"],["staging-identitytoolkit.sandbox.googleapis.com","s"],["test-identitytoolkit.sandbox.googleapis.com","t"]]);function wa(e){const t=e.config;Jr(t.authDomain,e,"auth-domain-config-required");const s=t.emulator?si(t,"emulator/auth/iframe"):`https://${e.config.authDomain}/__/auth/iframe`,r={apiKey:t.apiKey,appName:e.name,v:Cr},i=Na.get(e.config.apiHost);i&&(r.eid=i);const n=e._getFrameworks();return n.length&&(r.fw=n.join(",")),`${s}?${ns(r).slice(1)}`}async function ka(e){const t=await function(e){return ba=ba||ya(e),ba}(e),s=Mn().gapi;return Jr(s,e,"internal-error"),t.open({where:document.body,url:wa(e),messageHandlersFilter:s.iframes.CROSS_ORIGIN_IFRAMES_FILTER,attributes:ja,dontclear:!0},t=>new Promise(async(s,r)=>{await t.restyle({setHideOnLeave:!1});const i=$r(e,"network-request-failed"),n=Mn().setTimeout(()=>{r(i)},va.get());function a(){Mn().clearTimeout(n),s(t)}t.ping(a).then(a,()=>{r(i)})}))}
/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ca={location:"yes",resizable:"yes",statusbar:"yes",toolbar:"no"};class Ia{constructor(e){this.window=e,this.associatedEvent=null}close(){if(this.window)try{this.window.close()}catch(e){}}}function Sa(e,t,s,r=500,i=600){const n=Math.max((window.screen.availHeight-i)/2,0).toString(),a=Math.max((window.screen.availWidth-r)/2,0).toString();let o="";const l=Object.assign(Object.assign({},Ca),{width:r.toString(),height:i.toString(),top:n,left:a}),c=Zt().toLowerCase();s&&(o=Fi(c)?"_blank":s),Li(c)&&(t=t||"http://localhost",l.scrollbars="yes");const d=Object.entries(l).reduce((e,[t,s])=>`${e}${t}=${s},`,"");if(function(e=Zt()){var t;return zi(e)&&!!(null===(t=window.navigator)||void 0===t?void 0:t.standalone)}(c)&&"_self"!==o)return function(e,t){const s=document.createElement("a");s.href=e,s.target=t;const r=document.createEvent("MouseEvent");r.initMouseEvent("click",!0,!0,window,1,0,0,0,0,!1,!1,!1,!1,1,null),s.dispatchEvent(r)}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(t||"",o),new Ia(null);const u=window.open(t||"",o,d);Jr(u,e,"popup-blocked");try{u.focus()}catch(h){}return new Ia(u)}const Ea="__/auth/handler",Ta="emulator/auth/handler",_a=encodeURIComponent("fac");async function Aa(e,t,s,r,i,n){Jr(e.config.authDomain,e,"auth-domain-config-required"),Jr(e.config.apiKey,e,"invalid-api-key");const a={apiKey:e.config.apiKey,appName:e.name,authType:s,redirectUrl:r,v:Cr,eventId:i};if(t instanceof gn){t.setDefaultLanguage(e.languageCode),a.providerId=t.providerId||"",function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}(t.getCustomParameters())||(a.customParameters=JSON.stringify(t.getCustomParameters()));for(const[e,t]of Object.entries({}))a[e]=t}if(t instanceof xn){const e=t.getScopes().filter(e=>""!==e);e.length>0&&(a.scopes=e.join(","))}e.tenantId&&(a.tid=e.tenantId);const o=a;for(const d of Object.keys(o))void 0===o[d]&&delete o[d];const l=await e._getAppCheckToken(),c=l?`#${_a}=${encodeURIComponent(l)}`:"";return`${function({config:e}){if(!e.emulator)return`https://${e.authDomain}/${Ea}`;return si(e,Ta)}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(e)}?${ns(o).slice(1)}${c}`}const Pa="webStorageSupport";const Oa=class{constructor(){this.eventManagers={},this.iframes={},this.originValidationPromises={},this._redirectPersistence=On,this._completeRedirectFn=la,this._overrideRedirectResult=oa}async _openPopup(e,t,s,r){var i;Qr(null===(i=this.eventManagers[e._key()])||void 0===i?void 0:i.manager,"_initialize() not called before _openPopup()");return Sa(e,await Aa(e,t,s,Xr(),r),Rn())}async _openRedirect(e,t,s,r){await this._originValidation(e);return function(e){Mn().location.href=e}(await Aa(e,t,s,Xr(),r)),new Promise(()=>{})}_initialize(e){const t=e._key();if(this.eventManagers[t]){const{manager:e,promise:s}=this.eventManagers[t];return e?Promise.resolve(e):(Qr(s,"If manager is not set, promise should be"),s)}const s=this.initAndGetManager(e);return this.eventManagers[t]={promise:s},s.catch(()=>{delete this.eventManagers[t]}),s}async initAndGetManager(e){const t=await ka(e),s=new ca(e);return t.register("authEvent",t=>{Jr(null==t?void 0:t.authEvent,e,"invalid-auth-event");return{status:s.onEvent(t.authEvent)?"ACK":"ERROR"}},gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER),this.eventManagers[e._key()]={manager:s},this.iframes[e._key()]=t,s}_isIframeWebStorageSupported(e,t){this.iframes[e._key()].send(Pa,{type:Pa},s=>{var r;const i=null===(r=null==s?void 0:s[0])||void 0===r?void 0:r[Pa];void 0!==i&&t(!!i),qr(e,"internal-error")},gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER)}_originValidation(e){const t=e._key();return this.originValidationPromises[t]||(this.originValidationPromises[t]=fa(e)),this.originValidationPromises[t]}get _shouldInitProactively(){return $i()||Mi()||zi()}};var Da="@firebase/auth",Ra="1.7.9";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class La{constructor(e){this.auth=e,this.internalListeners=new Map}getUid(){var e;return this.assertAuthConfigured(),(null===(e=this.auth.currentUser)||void 0===e?void 0:e.uid)||null}async getToken(e){if(this.assertAuthConfigured(),await this.auth._initializationPromise,!this.auth.currentUser)return null;return{accessToken:await this.auth.currentUser.getIdToken(e)}}addAuthTokenListener(e){if(this.assertAuthConfigured(),this.internalListeners.has(e))return;const t=this.auth.onIdTokenChanged(t=>{e((null==t?void 0:t.stsTokenManager.accessToken)||null)});this.internalListeners.set(e,t),this.updateProactiveRefresh()}removeAuthTokenListener(e){this.assertAuthConfigured();const t=this.internalListeners.get(e);t&&(this.internalListeners.delete(e),t(),this.updateProactiveRefresh())}assertAuthConfigured(){Jr(this.auth._initializationPromise,"dependent-sdk-initialized-before-auth")}updateProactiveRefresh(){this.internalListeners.size>0?this.auth._startProactiveRefresh():this.auth._stopProactiveRefresh()}}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Ma=Qt("authIdTokenMaxAge")||300;let Fa=null;var Ua;Xi={loadJS:e=>new Promise((t,s)=>{const r=document.createElement("script");var i,n;r.setAttribute("src",e),r.onload=t,r.onerror=e=>{const t=$r("internal-error");t.customData=e,s(t)},r.type="text/javascript",r.charset="UTF-8",(null!==(n=null===(i=document.getElementsByTagName("head"))||void 0===i?void 0:i[0])&&void 0!==n?n:document).appendChild(r)}),gapiScript:"https://apis.google.com/js/api.js",recaptchaV2Script:"https://www.google.com/recaptcha/api.js",recaptchaEnterpriseScript:"https://www.google.com/recaptcha/enterprise.js?render="},Ua="Browser",vr(new us("auth",(e,{options:t})=>{const s=e.getProvider("app").getImmediate(),r=e.getProvider("heartbeat"),i=e.getProvider("app-check-internal"),{apiKey:n,authDomain:a}=s.options;Jr(n&&!n.includes(":"),"invalid-api-key",{appName:s.name});const o={apiKey:n,authDomain:a,clientPlatform:Ua,apiHost:"identitytoolkit.googleapis.com",tokenApiHost:"securetoken.googleapis.com",apiScheme:"https",sdkClientVersion:Wi(Ua)},l=new Ji(s,r,i,o);return function(e,t){const s=(null==t?void 0:t.persistence)||[],r=(Array.isArray(s)?s:[s]).map(_i);(null==t?void 0:t.errorMap)&&e._updateErrorMap(t.errorMap),e._initializeWithPersistence(r,null==t?void 0:t.popupRedirectResolver)}(l,t),l},"PUBLIC").setInstantiationMode("EXPLICIT").setInstanceCreatedCallback((e,t,s)=>{e.getProvider("auth-internal").initialize()})),vr(new us("auth-internal",e=>{const t=Yi(e.getProvider("auth").getImmediate());return new La(t)},"PRIVATE").setInstantiationMode("EXPLICIT")),Sr(Da,Ra,function(e){switch(e){case"Node":return"node";case"ReactNative":return"rn";case"Worker":return"webworker";case"Cordova":return"cordova";case"WebExtension":return"web-extension";default:return}}(Ua)),Sr(Da,Ra,"esm2017");const Ba={apiKey:"AIzaSyChijXhZBr7ycWKEQSK1bCdLSoQioKEurk",authDomain:"cruiserapp-b8429.firebaseapp.com",projectId:"cruiserapp-b8429",storageBucket:"cruiserapp-b8429.firebasestorage.app",messagingSenderId:"443919130210",appId:"1:443919130210:web:b8a009ef9ca1ca4f433b3b"};let Ha,Va;try{Ha=Ir(Ba),Va=function(e=function(e=fr){const t=gr.get(e);if(!t&&e===fr&&Yt())return Ir();if(!t)throw wr.create("no-app",{appName:e});return t}()){const t=jr(e,"auth");if(t.isInitialized())return t.getImmediate();const s=function(e,t){const s=jr(e,"auth");if(s.isInitialized()){const e=s.getImmediate();if(rs(s.getOptions(),null!=t?t:{}))return e;qr(e,"already-initialized")}return s.initialize({options:t})}(e,{popupRedirectResolver:Oa,persistence:[Gn,An,On]}),r=Qt("authTokenSyncURL");if(r&&"boolean"==typeof isSecureContext&&isSecureContext){const e=new URL(r,location.origin);if(location.origin===e.origin){const t=(i=e.toString(),async e=>{const t=e&&await e.getIdTokenResult(),s=t&&((new Date).getTime()-Date.parse(t.issuedAtTime))/1e3;if(s&&s>Ma)return;const r=null==t?void 0:t.token;Fa!==r&&(Fa=r,await fetch(i,{method:r?"POST":"DELETE",headers:r?{Authorization:`Bearer ${r}`}:{}}))});!function(e,t,s){ds(e).beforeAuthStateChanged(t,s)}(s,t,()=>t(s.currentUser)),function(e,t,s,r){ds(e).onIdTokenChanged(t,s,r)}(s,e=>t(e))}}var i;const n=(a="auth",null===(l=null===(o=Jt())||void 0===o?void 0:o.emulatorHosts)||void 0===l?void 0:l[a]);var a,o,l;return n&&rn(s,`http://${n}`),s}(Ha)}catch(ul){Va=null}const za=e.createContext(void 0),qa=({children:t})=>{const[s,r]=e.useState(null),[i,n]=e.useState(null),[a,o]=e.useState(!0);e.useEffect(()=>{const e={id:"temp-user-"+Date.now(),email:"test@example.com",firstName:"Test",lastName:"User",role:"student_pilot",status:"pending",isFullyVerified:!1,hasPPL:!1,creditedHours:0,totalFlightHours:0,firebaseUid:"temp-firebase-uid",createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()};r(e),o(!1)},[]);const l={user:s,firebaseUser:i,loading:a,signIn:async(e,t)=>{if(!Va)throw new Error("Firebase not initialized");try{await Sn(Va,e,t)}catch(ul){throw new Error(ul.message)}},signInWithGoogle:async()=>{if(!Va)throw new Error("Firebase not initialized");try{const e=new bn;await sa(Va,e)}catch(ul){throw new Error(ul.message)}},signOut:async()=>{var e;if(localStorage.removeItem("access_token"),Va)try{await(e=Va,ds(e).signOut()),r(null)}catch(ul){throw new Error(ul.message)}else r(null)},resetPassword:async e=>{if(!Va)throw new Error("Firebase not initialized");try{await async function(e,t){const s=Yi(e),r={requestType:"PASSWORD_RESET",email:t,clientType:"CLIENT_TYPE_WEB"};await sn(s,r,"getOobCode",dn)}(Va,e)}catch(ul){throw new Error(ul.message)}},refreshUser:async()=>{if(i){const e=await(async e=>{try{const t=await e.getIdToken(),s=await fetch("https://api.cruiseraviation.com/api/users/me",{headers:{Authorization:`Bearer ${t}`}});return s.ok?await s.json():null}catch(ul){return null}})(i);r(e)}}};return Y.jsx(za.Provider,{value:l,children:t})},$a=()=>{const t=e.useContext(za);if(void 0===t)throw new Error("useAuth must be used within an AuthProvider");return t};function Wa(e){var t,s,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e)){var i=e.length;for(t=0;t<i;t++)e[t]&&(s=Wa(e[t]))&&(r&&(r+=" "),r+=s)}else for(s in e)e[s]&&(r&&(r+=" "),r+=s);return r}const Ka=e=>{const t=Qa(e),{conflictingClassGroups:s,conflictingClassGroupModifiers:r}=e;return{getClassGroupId:e=>{const s=e.split("-");return""===s[0]&&1!==s.length&&s.shift(),Ga(s,t)||Ya(e)},getConflictingClassGroupIds:(e,t)=>{const i=s[e]||[];return t&&r[e]?[...i,...r[e]]:i}}},Ga=(e,t)=>{if(0===e.length)return t.classGroupId;const s=e[0],r=t.nextPart.get(s),i=r?Ga(e.slice(1),r):void 0;if(i)return i;if(0===t.validators.length)return;const n=e.join("-");return t.validators.find(({validator:e})=>e(n))?.classGroupId},Ja=/^\[(.+)\]$/,Ya=e=>{if(Ja.test(e)){const t=Ja.exec(e)[1],s=t?.substring(0,t.indexOf(":"));if(s)return"arbitrary.."+s}},Qa=e=>{const{theme:t,prefix:s}=e,r={nextPart:new Map,validators:[]};return to(Object.entries(e.classGroups),s).forEach(([e,s])=>{Xa(s,r,e,t)}),r},Xa=(e,t,s,r)=>{e.forEach(e=>{if("string"==typeof e){return void((""===e?t:Za(t,e)).classGroupId=s)}if("function"==typeof e)return eo(e)?void Xa(e(r),t,s,r):void t.validators.push({validator:e,classGroupId:s});Object.entries(e).forEach(([e,i])=>{Xa(i,Za(t,e),s,r)})})},Za=(e,t)=>{let s=e;return t.split("-").forEach(e=>{s.nextPart.has(e)||s.nextPart.set(e,{nextPart:new Map,validators:[]}),s=s.nextPart.get(e)}),s},eo=e=>e.isThemeGetter,to=(e,t)=>t?e.map(([e,s])=>[e,s.map(e=>"string"==typeof e?t+e:"object"==typeof e?Object.fromEntries(Object.entries(e).map(([e,s])=>[t+e,s])):e)]):e,so=e=>{if(e<1)return{get:()=>{},set:()=>{}};let t=0,s=new Map,r=new Map;const i=(i,n)=>{s.set(i,n),t++,t>e&&(t=0,r=s,s=new Map)};return{get(e){let t=s.get(e);return void 0!==t?t:void 0!==(t=r.get(e))?(i(e,t),t):void 0},set(e,t){s.has(e)?s.set(e,t):i(e,t)}}},ro=e=>{const{separator:t,experimentalParseClassName:s}=e,r=1===t.length,i=t[0],n=t.length,a=e=>{const s=[];let a,o=0,l=0;for(let u=0;u<e.length;u++){let c=e[u];if(0===o){if(c===i&&(r||e.slice(u,u+n)===t)){s.push(e.slice(l,u)),l=u+n;continue}if("/"===c){a=u;continue}}"["===c?o++:"]"===c&&o--}const c=0===s.length?e:e.substring(l),d=c.startsWith("!");return{modifiers:s,hasImportantModifier:d,baseClassName:d?c.substring(1):c,maybePostfixModifierPosition:a&&a>l?a-l:void 0}};return s?e=>s({className:e,parseClassName:a}):a},io=e=>{if(e.length<=1)return e;const t=[];let s=[];return e.forEach(e=>{"["===e[0]?(t.push(...s.sort(),e),s=[]):s.push(e)}),t.push(...s.sort()),t},no=/\s+/;function ao(){let e,t,s=0,r="";for(;s<arguments.length;)(e=arguments[s++])&&(t=oo(e))&&(r&&(r+=" "),r+=t);return r}const oo=e=>{if("string"==typeof e)return e;let t,s="";for(let r=0;r<e.length;r++)e[r]&&(t=oo(e[r]))&&(s&&(s+=" "),s+=t);return s};function lo(e,...t){let s,r,i,n=function(o){const l=t.reduce((e,t)=>t(e),e());return s=(e=>({cache:so(e.cacheSize),parseClassName:ro(e),...Ka(e)}))(l),r=s.cache.get,i=s.cache.set,n=a,a(o)};function a(e){const t=r(e);if(t)return t;const n=((e,t)=>{const{parseClassName:s,getClassGroupId:r,getConflictingClassGroupIds:i}=t,n=[],a=e.trim().split(no);let o="";for(let l=a.length-1;l>=0;l-=1){const e=a[l],{modifiers:t,hasImportantModifier:c,baseClassName:d,maybePostfixModifierPosition:u}=s(e);let h=Boolean(u),m=r(h?d.substring(0,u):d);if(!m){if(!h){o=e+(o.length>0?" "+o:o);continue}if(m=r(d),!m){o=e+(o.length>0?" "+o:o);continue}h=!1}const f=io(t).join(":"),p=c?f+"!":f,g=p+m;if(n.includes(g))continue;n.push(g);const x=i(m,h);for(let s=0;s<x.length;++s){const e=x[s];n.push(p+e)}o=e+(o.length>0?" "+o:o)}return o})(e,s);return i(e,n),n}return function(){return n(ao.apply(null,arguments))}}const co=e=>{const t=t=>t[e]||[];return t.isThemeGetter=!0,t},uo=/^\[(?:([a-z-]+):)?(.+)\]$/i,ho=/^\d+\/\d+$/,mo=new Set(["px","full","screen"]),fo=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,po=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,go=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,xo=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,yo=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,bo=e=>jo(e)||mo.has(e)||ho.test(e),vo=e=>Do(e,"length",Ro),jo=e=>Boolean(e)&&!Number.isNaN(Number(e)),No=e=>Do(e,"number",jo),wo=e=>Boolean(e)&&Number.isInteger(Number(e)),ko=e=>e.endsWith("%")&&jo(e.slice(0,-1)),Co=e=>uo.test(e),Io=e=>fo.test(e),So=new Set(["length","size","percentage"]),Eo=e=>Do(e,So,Lo),To=e=>Do(e,"position",Lo),_o=new Set(["image","url"]),Ao=e=>Do(e,_o,Fo),Po=e=>Do(e,"",Mo),Oo=()=>!0,Do=(e,t,s)=>{const r=uo.exec(e);return!!r&&(r[1]?"string"==typeof t?r[1]===t:t.has(r[1]):s(r[2]))},Ro=e=>po.test(e)&&!go.test(e),Lo=()=>!1,Mo=e=>xo.test(e),Fo=e=>yo.test(e),Uo=lo(()=>{const e=co("colors"),t=co("spacing"),s=co("blur"),r=co("brightness"),i=co("borderColor"),n=co("borderRadius"),a=co("borderSpacing"),o=co("borderWidth"),l=co("contrast"),c=co("grayscale"),d=co("hueRotate"),u=co("invert"),h=co("gap"),m=co("gradientColorStops"),f=co("gradientColorStopPositions"),p=co("inset"),g=co("margin"),x=co("opacity"),y=co("padding"),b=co("saturate"),v=co("scale"),j=co("sepia"),N=co("skew"),w=co("space"),k=co("translate"),C=()=>["auto",Co,t],I=()=>[Co,t],S=()=>["",bo,vo],E=()=>["auto",jo,Co],T=()=>["","0",Co],_=()=>[jo,Co];return{cacheSize:500,separator:":",theme:{colors:[Oo],spacing:[bo,vo],blur:["none","",Io,Co],brightness:_(),borderColor:[e],borderRadius:["none","","full",Io,Co],borderSpacing:I(),borderWidth:S(),contrast:_(),grayscale:T(),hueRotate:_(),invert:T(),gap:I(),gradientColorStops:[e],gradientColorStopPositions:[ko,vo],inset:C(),margin:C(),opacity:_(),padding:I(),saturate:_(),scale:_(),sepia:T(),skew:_(),space:I(),translate:I()},classGroups:{aspect:[{aspect:["auto","square","video",Co]}],container:["container"],columns:[{columns:[Io]}],"break-after":[{"break-after":["auto","avoid","all","avoid-page","page","left","right","column"]}],"break-before":[{"break-before":["auto","avoid","all","avoid-page","page","left","right","column"]}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top",Co]}],overflow:[{overflow:["auto","hidden","clip","visible","scroll"]}],"overflow-x":[{"overflow-x":["auto","hidden","clip","visible","scroll"]}],"overflow-y":[{"overflow-y":["auto","hidden","clip","visible","scroll"]}],overscroll:[{overscroll:["auto","contain","none"]}],"overscroll-x":[{"overscroll-x":["auto","contain","none"]}],"overscroll-y":[{"overscroll-y":["auto","contain","none"]}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[p]}],"inset-x":[{"inset-x":[p]}],"inset-y":[{"inset-y":[p]}],start:[{start:[p]}],end:[{end:[p]}],top:[{top:[p]}],right:[{right:[p]}],bottom:[{bottom:[p]}],left:[{left:[p]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",wo,Co]}],basis:[{basis:C()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",Co]}],grow:[{grow:T()}],shrink:[{shrink:T()}],order:[{order:["first","last","none",wo,Co]}],"grid-cols":[{"grid-cols":[Oo]}],"col-start-end":[{col:["auto",{span:["full",wo,Co]},Co]}],"col-start":[{"col-start":E()}],"col-end":[{"col-end":E()}],"grid-rows":[{"grid-rows":[Oo]}],"row-start-end":[{row:["auto",{span:[wo,Co]},Co]}],"row-start":[{"row-start":E()}],"row-end":[{"row-end":E()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",Co]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",Co]}],gap:[{gap:[h]}],"gap-x":[{"gap-x":[h]}],"gap-y":[{"gap-y":[h]}],"justify-content":[{justify:["normal","start","end","center","between","around","evenly","stretch"]}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal","start","end","center","between","around","evenly","stretch","baseline"]}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":["start","end","center","between","around","evenly","stretch","baseline"]}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[y]}],px:[{px:[y]}],py:[{py:[y]}],ps:[{ps:[y]}],pe:[{pe:[y]}],pt:[{pt:[y]}],pr:[{pr:[y]}],pb:[{pb:[y]}],pl:[{pl:[y]}],m:[{m:[g]}],mx:[{mx:[g]}],my:[{my:[g]}],ms:[{ms:[g]}],me:[{me:[g]}],mt:[{mt:[g]}],mr:[{mr:[g]}],mb:[{mb:[g]}],ml:[{ml:[g]}],"space-x":[{"space-x":[w]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[w]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit","svw","lvw","dvw",Co,t]}],"min-w":[{"min-w":[Co,t,"min","max","fit"]}],"max-w":[{"max-w":[Co,t,"none","full","min","max","fit","prose",{screen:[Io]},Io]}],h:[{h:[Co,t,"auto","min","max","fit","svh","lvh","dvh"]}],"min-h":[{"min-h":[Co,t,"min","max","fit","svh","lvh","dvh"]}],"max-h":[{"max-h":[Co,t,"min","max","fit","svh","lvh","dvh"]}],size:[{size:[Co,t,"auto","min","max","fit"]}],"font-size":[{text:["base",Io,vo]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",No]}],"font-family":[{font:[Oo]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractions"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",Co]}],"line-clamp":[{"line-clamp":["none",jo,No]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",bo,Co]}],"list-image":[{"list-image":["none",Co]}],"list-style-type":[{list:["none","disc","decimal",Co]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[e]}],"placeholder-opacity":[{"placeholder-opacity":[x]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[e]}],"text-opacity":[{"text-opacity":[x]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:["solid","dashed","dotted","double","none","wavy"]}],"text-decoration-thickness":[{decoration:["auto","from-font",bo,vo]}],"underline-offset":[{"underline-offset":["auto",bo,Co]}],"text-decoration-color":[{decoration:[e]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:I()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",Co]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",Co]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[x]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top",To]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",Eo]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},Ao]}],"bg-color":[{bg:[e]}],"gradient-from-pos":[{from:[f]}],"gradient-via-pos":[{via:[f]}],"gradient-to-pos":[{to:[f]}],"gradient-from":[{from:[m]}],"gradient-via":[{via:[m]}],"gradient-to":[{to:[m]}],rounded:[{rounded:[n]}],"rounded-s":[{"rounded-s":[n]}],"rounded-e":[{"rounded-e":[n]}],"rounded-t":[{"rounded-t":[n]}],"rounded-r":[{"rounded-r":[n]}],"rounded-b":[{"rounded-b":[n]}],"rounded-l":[{"rounded-l":[n]}],"rounded-ss":[{"rounded-ss":[n]}],"rounded-se":[{"rounded-se":[n]}],"rounded-ee":[{"rounded-ee":[n]}],"rounded-es":[{"rounded-es":[n]}],"rounded-tl":[{"rounded-tl":[n]}],"rounded-tr":[{"rounded-tr":[n]}],"rounded-br":[{"rounded-br":[n]}],"rounded-bl":[{"rounded-bl":[n]}],"border-w":[{border:[o]}],"border-w-x":[{"border-x":[o]}],"border-w-y":[{"border-y":[o]}],"border-w-s":[{"border-s":[o]}],"border-w-e":[{"border-e":[o]}],"border-w-t":[{"border-t":[o]}],"border-w-r":[{"border-r":[o]}],"border-w-b":[{"border-b":[o]}],"border-w-l":[{"border-l":[o]}],"border-opacity":[{"border-opacity":[x]}],"border-style":[{border:["solid","dashed","dotted","double","none","hidden"]}],"divide-x":[{"divide-x":[o]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[o]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[x]}],"divide-style":[{divide:["solid","dashed","dotted","double","none"]}],"border-color":[{border:[i]}],"border-color-x":[{"border-x":[i]}],"border-color-y":[{"border-y":[i]}],"border-color-s":[{"border-s":[i]}],"border-color-e":[{"border-e":[i]}],"border-color-t":[{"border-t":[i]}],"border-color-r":[{"border-r":[i]}],"border-color-b":[{"border-b":[i]}],"border-color-l":[{"border-l":[i]}],"divide-color":[{divide:[i]}],"outline-style":[{outline:["","solid","dashed","dotted","double","none"]}],"outline-offset":[{"outline-offset":[bo,Co]}],"outline-w":[{outline:[bo,vo]}],"outline-color":[{outline:[e]}],"ring-w":[{ring:S()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[e]}],"ring-opacity":[{"ring-opacity":[x]}],"ring-offset-w":[{"ring-offset":[bo,vo]}],"ring-offset-color":[{"ring-offset":[e]}],shadow:[{shadow:["","inner","none",Io,Po]}],"shadow-color":[{shadow:[Oo]}],opacity:[{opacity:[x]}],"mix-blend":[{"mix-blend":["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity","plus-lighter","plus-darker"]}],"bg-blend":[{"bg-blend":["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"]}],filter:[{filter:["","none"]}],blur:[{blur:[s]}],brightness:[{brightness:[r]}],contrast:[{contrast:[l]}],"drop-shadow":[{"drop-shadow":["","none",Io,Co]}],grayscale:[{grayscale:[c]}],"hue-rotate":[{"hue-rotate":[d]}],invert:[{invert:[u]}],saturate:[{saturate:[b]}],sepia:[{sepia:[j]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[s]}],"backdrop-brightness":[{"backdrop-brightness":[r]}],"backdrop-contrast":[{"backdrop-contrast":[l]}],"backdrop-grayscale":[{"backdrop-grayscale":[c]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[d]}],"backdrop-invert":[{"backdrop-invert":[u]}],"backdrop-opacity":[{"backdrop-opacity":[x]}],"backdrop-saturate":[{"backdrop-saturate":[b]}],"backdrop-sepia":[{"backdrop-sepia":[j]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[a]}],"border-spacing-x":[{"border-spacing-x":[a]}],"border-spacing-y":[{"border-spacing-y":[a]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",Co]}],duration:[{duration:_()}],ease:[{ease:["linear","in","out","in-out",Co]}],delay:[{delay:_()}],animate:[{animate:["none","spin","ping","pulse","bounce",Co]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[v]}],"scale-x":[{"scale-x":[v]}],"scale-y":[{"scale-y":[v]}],rotate:[{rotate:[wo,Co]}],"translate-x":[{"translate-x":[k]}],"translate-y":[{"translate-y":[k]}],"skew-x":[{"skew-x":[N]}],"skew-y":[{"skew-y":[N]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",Co]}],accent:[{accent:["auto",e]}],appearance:[{appearance:["none","auto"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",Co]}],"caret-color":[{caret:[e]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":I()}],"scroll-mx":[{"scroll-mx":I()}],"scroll-my":[{"scroll-my":I()}],"scroll-ms":[{"scroll-ms":I()}],"scroll-me":[{"scroll-me":I()}],"scroll-mt":[{"scroll-mt":I()}],"scroll-mr":[{"scroll-mr":I()}],"scroll-mb":[{"scroll-mb":I()}],"scroll-ml":[{"scroll-ml":I()}],"scroll-p":[{"scroll-p":I()}],"scroll-px":[{"scroll-px":I()}],"scroll-py":[{"scroll-py":I()}],"scroll-ps":[{"scroll-ps":I()}],"scroll-pe":[{"scroll-pe":I()}],"scroll-pt":[{"scroll-pt":I()}],"scroll-pr":[{"scroll-pr":I()}],"scroll-pb":[{"scroll-pb":I()}],"scroll-pl":[{"scroll-pl":I()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",Co]}],fill:[{fill:[e,"none"]}],"stroke-w":[{stroke:[bo,vo,No]}],stroke:[{stroke:[e,"none"]}],sr:["sr-only","not-sr-only"],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-s","border-color-e","border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}});function Bo(...e){return Uo(function(){for(var e,t,s=0,r="",i=arguments.length;s<i;s++)(e=arguments[s])&&(t=Wa(e))&&(r&&(r+=" "),r+=t);return r}(e))}const Ho=({size:e="md",className:t})=>Y.jsx("div",{className:Bo("spinner",{sm:"w-4 h-4",md:"w-6 h-6",lg:"w-8 h-8",xl:"w-12 h-12"}[e],t),role:"status","aria-label":"Loading",children:Y.jsx("span",{className:"sr-only",children:"Loading..."})}),Vo=()=>Y.jsxs(Y.Fragment,{children:[Y.jsxs(Ht,{children:[Y.jsx("title",{children:"Cruiser Aviation Platform - Modern Flight School Management"}),Y.jsx("meta",{name:"description",content:"Transform your flight school operations with our comprehensive aviation management platform. Streamline onboarding, flight logging, and student management."})]}),Y.jsxs("div",{className:"min-h-screen bg-gradient-to-br from-aviation-sky to-aviation-flight",children:[Y.jsx("nav",{className:"relative z-10 px-6 py-4",children:Y.jsxs("div",{className:"max-w-7xl mx-auto flex items-center justify-between",children:[Y.jsxs("div",{className:"flex items-center space-x-2",children:[Y.jsx(u,{className:"w-8 h-8 text-white"}),Y.jsx("span",{className:"text-xl font-bold text-white",children:"Cruiser Aviation"})]}),Y.jsxs("div",{className:"hidden md:flex items-center space-x-6",children:[Y.jsx("a",{href:"#features",className:"text-white hover:text-blue-100 transition-colors",children:"Features"}),Y.jsx("a",{href:"#pricing",className:"text-white hover:text-blue-100 transition-colors",children:"Pricing"}),Y.jsx("a",{href:"#contact",className:"text-white hover:text-blue-100 transition-colors",children:"Contact"}),Y.jsx(n,{to:"/login",className:"bg-white text-blue-600 px-4 py-2 rounded-lg font-medium hover:bg-blue-50 transition-colors",children:"Sign In"})]})]})}),Y.jsx("section",{className:"relative px-6 py-20",children:Y.jsxs("div",{className:"max-w-7xl mx-auto text-center",children:[Y.jsxs("h1",{className:"text-5xl md:text-7xl font-bold text-white mb-6",children:["Take Flight with",Y.jsx("span",{className:"block text-blue-100",children:"Modern Aviation"})]}),Y.jsx("p",{className:"text-xl md:text-2xl text-blue-100 mb-8 max-w-3xl mx-auto",children:"Streamline your flight school operations with our comprehensive platform. From student onboarding to flight logging, we've got you covered."}),Y.jsxs("div",{className:"flex flex-col sm:flex-row gap-4 justify-center",children:[Y.jsxs(n,{to:"/login",className:"bg-white text-blue-600 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-blue-50 transition-colors inline-flex items-center justify-center",children:["Get Started",Y.jsx(h,{className:"ml-2 w-5 h-5"})]}),Y.jsxs("button",{className:"border-2 border-white text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white hover:text-blue-600 transition-colors inline-flex items-center justify-center",children:[Y.jsx(m,{className:"mr-2 w-5 h-5"}),"Watch Demo"]})]})]})}),Y.jsx("section",{id:"features",className:"py-20 bg-white",children:Y.jsxs("div",{className:"max-w-7xl mx-auto px-6",children:[Y.jsxs("div",{className:"text-center mb-16",children:[Y.jsx("h2",{className:"text-4xl font-bold text-gray-900 mb-4",children:"Everything You Need to Soar"}),Y.jsx("p",{className:"text-xl text-gray-600 max-w-2xl mx-auto",children:"Our platform provides all the tools you need to manage your aviation business efficiently."})]}),Y.jsxs("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-8",children:[Y.jsxs("div",{className:"card p-6 text-center",children:[Y.jsx("div",{className:"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4",children:Y.jsx(f,{className:"w-8 h-8 text-primary-600"})}),Y.jsx("h3",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Smart Onboarding"}),Y.jsx("p",{className:"text-gray-600",children:"AI-powered document processing and verification for seamless student registration."})]}),Y.jsxs("div",{className:"card p-6 text-center",children:[Y.jsx("div",{className:"w-16 h-16 bg-success-100 rounded-full flex items-center justify-center mx-auto mb-4",children:Y.jsx(p,{className:"w-8 h-8 text-success-600"})}),Y.jsx("h3",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Flight Logging"}),Y.jsx("p",{className:"text-gray-600",children:"Mobile-first flight hour tracking with GPS integration and photo documentation."})]}),Y.jsxs("div",{className:"card p-6 text-center",children:[Y.jsx("div",{className:"w-16 h-16 bg-warning-100 rounded-full flex items-center justify-center mx-auto mb-4",children:Y.jsx(g,{className:"w-8 h-8 text-warning-600"})}),Y.jsx("h3",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Document Management"}),Y.jsx("p",{className:"text-gray-600",children:"Secure storage and automatic expiry tracking for licenses and medical certificates."})]}),Y.jsxs("div",{className:"card p-6 text-center",children:[Y.jsx("div",{className:"w-16 h-16 bg-danger-100 rounded-full flex items-center justify-center mx-auto mb-4",children:Y.jsx(x,{className:"w-8 h-8 text-danger-600"})}),Y.jsx("h3",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Multi-Base Support"}),Y.jsx("p",{className:"text-gray-600",children:"Manage multiple flight school locations with centralized administration."})]}),Y.jsxs("div",{className:"card p-6 text-center",children:[Y.jsx("div",{className:"w-16 h-16 bg-secondary-100 rounded-full flex items-center justify-center mx-auto mb-4",children:Y.jsx(u,{className:"w-8 h-8 text-secondary-600"})}),Y.jsx("h3",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Aircraft Management"}),Y.jsx("p",{className:"text-gray-600",children:"Track aircraft availability, maintenance, and rental scheduling."})]}),Y.jsxs("div",{className:"card p-6 text-center",children:[Y.jsx("div",{className:"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4",children:Y.jsx(y,{className:"w-8 h-8 text-primary-600"})}),Y.jsx("h3",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Automated Invoicing"}),Y.jsx("p",{className:"text-gray-600",children:"SmartBill integration for automated invoice generation and payment tracking."})]})]})]})}),Y.jsx("section",{className:"py-20 bg-gray-900",children:Y.jsxs("div",{className:"max-w-4xl mx-auto text-center px-6",children:[Y.jsx("h2",{className:"text-4xl font-bold text-white mb-4",children:"Ready to Transform Your Flight School?"}),Y.jsx("p",{className:"text-xl text-gray-300 mb-8",children:"Join hundreds of aviation professionals who trust Cruiser Aviation Platform."}),Y.jsxs(n,{to:"/login",className:"bg-primary-600 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-primary-700 transition-colors inline-flex items-center",children:["Start Your Free Trial",Y.jsx(h,{className:"ml-2 w-5 h-5"})]})]})}),Y.jsx("footer",{className:"bg-gray-800 text-white py-12",children:Y.jsxs("div",{className:"max-w-7xl mx-auto px-6",children:[Y.jsxs("div",{className:"grid md:grid-cols-4 gap-8",children:[Y.jsxs("div",{children:[Y.jsxs("div",{className:"flex items-center space-x-2 mb-4",children:[Y.jsx(u,{className:"w-6 h-6"}),Y.jsx("span",{className:"text-lg font-bold",children:"Cruiser Aviation"})]}),Y.jsx("p",{className:"text-gray-400",children:"Modern aviation management platform for flight schools and aircraft rental businesses."})]}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"font-semibold mb-4",children:"Product"}),Y.jsxs("ul",{className:"space-y-2 text-gray-400",children:[Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Features"})}),Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Pricing"})}),Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"API"})})]})]}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"font-semibold mb-4",children:"Company"}),Y.jsxs("ul",{className:"space-y-2 text-gray-400",children:[Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"About"})}),Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Contact"})}),Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Support"})})]})]}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"font-semibold mb-4",children:"Legal"}),Y.jsxs("ul",{className:"space-y-2 text-gray-400",children:[Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Privacy"})}),Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Terms"})}),Y.jsx("li",{children:Y.jsx("a",{href:"#",className:"hover:text-white transition-colors",children:"Security"})})]})]})]}),Y.jsx("div",{className:"border-t border-gray-700 mt-8 pt-8 text-center text-gray-400",children:Y.jsx("p",{children:"© 2024 Cruiser Aviation. All rights reserved."})})]})})]})]}),zo=()=>Y.jsxs(Y.Fragment,{children:[Y.jsx(Ht,{children:Y.jsx("title",{children:"Login - Cruiser Aviation Platform"})}),Y.jsx("div",{className:"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8",children:Y.jsxs("div",{className:"max-w-md w-full space-y-8",children:[Y.jsxs("div",{children:[Y.jsx("h2",{className:"mt-6 text-center text-3xl font-extrabold text-gray-900",children:"Welcome to Cruiser Aviation"}),Y.jsx("p",{className:"mt-2 text-center text-sm text-gray-600",children:"Authentication is handled by Cloudflare Access"})]}),Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100",children:Y.jsx("svg",{className:"h-6 w-6 text-blue-600",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"})})}),Y.jsx("h3",{className:"mt-4 text-lg font-medium text-gray-900",children:"Secure Authentication"}),Y.jsx("p",{className:"mt-2 text-sm text-gray-500",children:"This application uses Cloudflare Access for secure authentication. If you can see this page, you should be automatically authenticated when accessing the main application."})]}),Y.jsx("div",{className:"mt-6",children:Y.jsx("div",{className:"bg-blue-50 border border-blue-200 rounded-md p-4",children:Y.jsxs("div",{className:"flex",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("svg",{className:"h-5 w-5 text-blue-400",viewBox:"0 0 20 20",fill:"currentColor",children:Y.jsx("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"})})}),Y.jsxs("div",{className:"ml-3",children:[Y.jsx("h3",{className:"text-sm font-medium text-blue-800",children:"How it works"}),Y.jsx("div",{className:"mt-2 text-sm text-blue-700",children:Y.jsxs("ul",{className:"list-disc list-inside space-y-1",children:[Y.jsx("li",{children:"Cloudflare Access handles authentication"}),Y.jsx("li",{children:"No passwords or magic links needed"}),Y.jsx("li",{children:"Secure single sign-on (SSO)"}),Y.jsx("li",{children:"Automatic session management"})]})})]})]})})}),Y.jsx("div",{className:"mt-6",children:Y.jsx("a",{href:"/dashboard",className:"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",children:"Continue to Dashboard"})})]}),Y.jsx("div",{className:"text-center",children:Y.jsx("a",{href:"/",className:"font-medium text-blue-600 hover:text-blue-500",children:"← Back to Home"})})]})})]}),qo={Dashboard:C,Flights:u,FlightLog:_,Profile:O,Services:S,Invoices:A,Payments:P,Bases:x,Settings:T,Logout:N,Users:f,Roles:I,Fleet:u,Reports:E},$o=({children:t,activeSection:s="dashboard",onSectionChange:r,userType:i="user",title:n="Cruiser Aviation Platform"})=>{const[a,o]=e.useState(!1),[l,c]=e.useState(!1),d="admin"===i?[{id:"dashboard",label:"Dashboard",icon:qo.Dashboard},{id:"users",label:"Users",icon:qo.Users},{id:"roles",label:"Roles",icon:qo.Roles},{id:"bases",label:"Bases",icon:qo.Bases},{id:"fleet",label:"Fleet",icon:qo.Fleet},{id:"services",label:"Services",icon:qo.Services},{id:"flights",label:"Flights",icon:qo.Flights},{id:"reports",label:"Reports",icon:qo.Reports},{id:"settings",label:"Settings",icon:qo.Settings}]:[{id:"dashboard",label:"Dashboard",icon:qo.Dashboard},{id:"flights",label:"My Flights",icon:qo.Flights},{id:"flightlog",label:"Flight Log",icon:qo.FlightLog},{id:"services",label:"Services",icon:qo.Services},{id:"invoices",label:"Invoices",icon:qo.Invoices},{id:"payments",label:"Payments",icon:qo.Payments},{id:"bases",label:"Bases",icon:qo.Bases},{id:"fleet",label:"Fleet",icon:qo.Fleet},{id:"profile",label:"Profile",icon:qo.Profile},{id:"settings",label:"Settings",icon:qo.Settings}],u="admin"===i?{name:"Admin User",role:"Super Admin",initial:"A"}:{name:"User",role:"Pilot",initial:"U"};return Y.jsxs(Y.Fragment,{children:[Y.jsxs(Ht,{children:[Y.jsx("title",{children:n}),Y.jsx("meta",{name:"description",content:"Modern flight school and aircraft rental management platform"})]}),Y.jsxs("div",{className:"min-h-screen bg-gray-50 flex",children:[l&&Y.jsx("div",{className:"fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden",onClick:()=>c(!1)}),Y.jsxs("div",{className:`\n          fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:sticky lg:top-0 lg:inset-0 lg:flex-shrink-0 lg:h-screen\n          ${l?"translate-x-0":"-translate-x-full"}\n          ${a?"lg:w-16":"lg:w-64"}\n        `,children:[Y.jsxs("div",{className:"flex items-center justify-between h-16 px-4 border-b border-gray-200",children:[!a&&Y.jsxs("h1",{className:"text-xl font-bold text-gray-900",children:["✈️ ","admin"===i?"Cruiser Admin":"Cruiser Aviation"]}),Y.jsx("button",{onClick:()=>o(!a),className:"hidden lg:flex items-center justify-center w-8 h-8 text-gray-500 hover:text-gray-700",children:a?Y.jsx(b,{size:20}):Y.jsx(v,{size:20})}),Y.jsx("button",{onClick:()=>c(!1),className:"lg:hidden",children:Y.jsx(j,{size:20})})]}),Y.jsxs("nav",{className:"mt-6 px-3",children:[Y.jsx("div",{className:"space-y-1",children:d.map(e=>{const t=e.icon;return Y.jsxs("button",{onClick:()=>{var t;t=e.id,r&&r(t),c(!1)},className:`\n                      w-full flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors\n                      ${s===e.id?"bg-blue-100 text-blue-700 border-r-2 border-blue-700":"text-gray-600 hover:bg-gray-100 hover:text-gray-900"}\n                    `,children:[Y.jsx(t,{size:20,className:"flex-shrink-0"}),!a&&Y.jsx("span",{className:"ml-3",children:e.label})]},e.id)})}),Y.jsx("div",{className:"mt-8 pt-6 border-t border-gray-200",children:Y.jsxs("button",{className:"w-full flex items-center px-3 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100 hover:text-gray-900 rounded-md transition-colors",children:[Y.jsx(qo.Logout,{size:20,className:"flex-shrink-0"}),!a&&Y.jsx("span",{className:"ml-3",children:"Logout"})]})})]})]}),Y.jsxs("div",{className:"flex-1 flex flex-col min-w-0",children:[Y.jsx("header",{className:"bg-white shadow-sm border-b border-gray-200",children:Y.jsxs("div",{className:"flex items-center justify-between h-16 px-4 sm:px-6 lg:px-8",children:[Y.jsx("button",{onClick:()=>c(!0),className:"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100",children:Y.jsx(w,{size:20})}),Y.jsx("div",{className:"flex-1 lg:flex-none",children:Y.jsx("h2",{className:"text-lg font-semibold text-gray-900",children:d.find(e=>e.id===s)?.label||"Dashboard"})}),Y.jsxs("div",{className:"flex items-center space-x-4",children:[Y.jsxs("button",{className:"p-2 text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded-md relative",children:[Y.jsx(k,{size:20}),Y.jsx("span",{className:"absolute top-1 right-1 block h-2 w-2 rounded-full bg-red-400"})]}),Y.jsxs("div",{className:"flex items-center space-x-3",children:[Y.jsx("div",{className:"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center",children:Y.jsx("span",{className:"text-white text-sm font-medium",children:u.initial})}),Y.jsxs("div",{className:"hidden md:block",children:[Y.jsx("p",{className:"text-sm font-medium text-gray-900",children:u.name}),Y.jsx("p",{className:"text-xs text-gray-500",children:u.role})]})]})]})]})}),Y.jsx("main",{className:"p-6",children:t})]})]})]})},Wo=()=>{const[t,s]=e.useState(!1),[r,i]=e.useState(!1),[n,a]=e.useState(!1),[o,l]=e.useState(!1),[c,d]=e.useState([]),[u,h]=e.useState(null),[m,f]=e.useState(!1),[p,g]=e.useState(0),[x,y]=e.useState(!1),[b,v]=e.useState(""),[j,N]=e.useState(!0),w=[{id:1,email:"john.doe@example.com",firstName:"John",lastName:"Doe",phoneNumber:"+1 (555) 123-4567",role:"student_pilot",status:"active",createdAt:"2024-01-15T10:30:00Z",imageUrl:null},{id:2,email:"jane.smith@example.com",firstName:"Jane",lastName:"Smith",phoneNumber:"+1 (555) 987-6543",role:"instructor",status:"active",createdAt:"2024-01-10T14:20:00Z",imageUrl:null},{id:3,email:"mike.wilson@example.com",firstName:"Mike",lastName:"Wilson",phoneNumber:"+1 (555) 456-7890",role:"pilot",status:"pending",createdAt:"2024-01-20T09:15:00Z",imageUrl:null}],[k,C]=e.useState({email:"",firstName:"",lastName:"",phoneNumber:"",role:"student_pilot",status:"pending",address:"",city:"",region:"",country:"",postalCode:"",nationality:"",dateOfBirth:"",nationalId:"",sex:"",imageUrl:"",hasPPL:!1,pplNumber:"",pplIssueDate:"",pplExpiryDate:"",medicalCertificateNumber:"",medicalExamDate:"",medicalIssueDate:"",medicalExpiryDate:"",totalFlightHours:0,creditedHours:0}),I=async()=>{N(!0);try{const e=await fetch("/api/admin/users");if(e.ok){const t=await e.json();d(t)}else d(w)}catch(e){d(w)}finally{N(!1)}};e.useEffect(()=>{I()},[]);const S=(e,t)=>{C(s=>({...s,[e]:t}))},E=async e=>{try{const t=new FormData;t.append("image",e);const s=await fetch("/api/admin/users/upload-image",{method:"POST",body:t});if(s.ok){const e=await s.json();S("imageUrl",e.url),alert("Image uploaded successfully!")}else alert("Failed to upload image. Please try again.")}catch(ul){alert("Error uploading image. Please try again.")}},T=e=>{switch(e){case"super_admin":return"bg-red-100 text-red-800";case"admin":return"bg-purple-100 text-purple-800";case"instructor":return"bg-blue-100 text-blue-800";case"pilot":return"bg-green-100 text-green-800";case"student_pilot":return"bg-yellow-100 text-yellow-800";default:return"bg-gray-100 text-gray-800"}},_=e=>{switch(e){case"active":return"bg-green-100 text-green-800";case"pending":return"bg-yellow-100 text-yellow-800";case"suspended":return"bg-red-100 text-red-800";default:return"bg-gray-100 text-gray-800"}};return Y.jsxs("div",{className:"h-full flex flex-col",children:[Y.jsxs("div",{className:"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-20",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:"User Management"}),Y.jsx("button",{onClick:()=>s(!0),className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800 transition-colors",children:"Add User"})]}),Y.jsx("div",{className:"px-6 py-3 bg-gray-50",children:Y.jsxs("div",{className:"grid grid-cols-6 gap-4 text-xs font-medium text-gray-500 uppercase tracking-wider",children:[Y.jsx("div",{children:"User"}),Y.jsx("div",{children:"Email"}),Y.jsx("div",{children:"Role"}),Y.jsx("div",{children:"Status"}),Y.jsx("div",{children:"Created"}),Y.jsx("div",{children:"Actions"})]})})]}),Y.jsxs("div",{className:"flex-1 flex flex-col",children:[j&&Y.jsx("div",{className:"flex-1 flex items-center justify-center",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"}),Y.jsx("p",{className:"mt-4 text-gray-600",children:"Loading users..."})]})}),!j&&Y.jsx("div",{className:"flex-1 overflow-auto",children:Y.jsx("div",{className:"bg-white",children:Y.jsx("div",{className:"divide-y divide-gray-200",children:0===c.length?Y.jsx("div",{className:"px-6 py-8 text-center",children:Y.jsx("p",{className:"text-gray-500",children:"No users found"})}):c.map(e=>Y.jsx("div",{className:"px-6 py-4 hover:bg-gray-50",children:Y.jsxs("div",{className:"grid grid-cols-6 gap-4 items-center",children:[Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0",children:e.imageUrl?Y.jsxs(Y.Fragment,{children:[Y.jsx("img",{src:e.imageUrl,alt:`${e.firstName} ${e.lastName}`,className:"w-10 h-10 rounded-full object-cover"}),Y.jsxs("span",{className:"text-gray-500 text-sm hidden",children:[e.firstName?.[0],e.lastName?.[0]]})]}):Y.jsxs("span",{className:"text-gray-500 text-sm",children:[e.firstName?.[0],e.lastName?.[0]]})}),Y.jsxs("div",{className:"ml-4",children:[Y.jsxs("div",{className:"text-sm font-medium text-gray-900",children:[e.firstName," ",e.lastName]}),Y.jsx("div",{className:"text-sm text-gray-500",children:e.phoneNumber||"No phone"})]})]}),Y.jsx("div",{className:"text-sm text-gray-900",children:e.email}),Y.jsx("div",{children:Y.jsx("span",{className:`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${T(e.role)}`,children:e.role?.replace("_"," ").toUpperCase()})}),Y.jsx("div",{children:Y.jsx("span",{className:`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${_(e.status)}`,children:e.status?.toUpperCase()})}),Y.jsx("div",{className:"text-sm text-gray-500",children:e.createdAt?new Date(e.createdAt).toLocaleDateString():"N/A"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>(e=>{h(e),i(!0)})(e),className:"text-blue-600 hover:text-blue-900 px-2 py-1 rounded border border-blue-200 hover:bg-blue-50",children:"View"}),Y.jsx("button",{onClick:()=>(e=>{h(e),C({email:e.email||"",firstName:e.firstName||"",lastName:e.lastName||"",phoneNumber:e.phoneNumber||"",role:e.role||"student_pilot",status:e.status||"pending",address:e.address||"",city:e.city||"",region:e.region||"",country:e.country||"",postalCode:e.postalCode||"",nationality:e.nationality||"",dateOfBirth:e.dateOfBirth?new Date(e.dateOfBirth).toISOString().split("T")[0]:"",nationalId:e.nationalId||"",sex:e.sex||"",imageUrl:e.imageUrl||"",hasPPL:e.hasPPL||!1,pplNumber:e.pplNumber||"",pplIssueDate:e.pplIssueDate?new Date(e.pplIssueDate).toISOString().split("T")[0]:"",pplExpiryDate:e.pplExpiryDate?new Date(e.pplExpiryDate).toISOString().split("T")[0]:"",medicalCertificateNumber:e.medicalCertificateNumber||"",medicalExamDate:e.medicalExamDate?new Date(e.medicalExamDate).toISOString().split("T")[0]:"",medicalIssueDate:e.medicalIssueDate?new Date(e.medicalIssueDate).toISOString().split("T")[0]:"",medicalExpiryDate:e.medicalExpiryDate?new Date(e.medicalExpiryDate).toISOString().split("T")[0]:"",totalFlightHours:e.totalFlightHours||0,creditedHours:e.creditedHours||0}),a(!0)})(e),className:"text-gray-600 hover:text-gray-900 px-2 py-1 rounded border border-gray-200 hover:bg-gray-50",children:"Edit"}),Y.jsx("button",{onClick:()=>(async e=>{if(confirm(`Are you sure you want to delete "${e.firstName} ${e.lastName}"? This action cannot be undone.`))try{(await fetch(`/api/admin/users/${e.id}`,{method:"DELETE"})).ok?(alert("User deleted successfully!"),I()):alert("Failed to delete user. Please try again.")}catch(ul){alert("Error deleting user. Please try again.")}})(e),className:"text-red-600 hover:text-red-900 px-2 py-1 rounded border border-red-200 hover:bg-red-50",children:Y.jsx(D,{className:"w-4 h-4"})})]})]})},e.id))})})})]}),t&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Add New User"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>s(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:async()=>{l(!0);try{const e=await fetch("/api/admin/users",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...k,dateOfBirth:k.dateOfBirth?new Date(k.dateOfBirth).toISOString():null,pplIssueDate:k.pplIssueDate?new Date(k.pplIssueDate).toISOString():null,pplExpiryDate:k.pplExpiryDate?new Date(k.pplExpiryDate).toISOString():null,medicalExamDate:k.medicalExamDate?new Date(k.medicalExamDate).toISOString():null,medicalIssueDate:k.medicalIssueDate?new Date(k.medicalIssueDate).toISOString():null,medicalExpiryDate:k.medicalExpiryDate?new Date(k.medicalExpiryDate).toISOString():null,totalFlightHours:parseInt(k.totalFlightHours.toString()),creditedHours:parseInt(k.creditedHours.toString())})});if(e.ok){await e.json();s(!1),C({email:"",firstName:"",lastName:"",phoneNumber:"",role:"student_pilot",status:"pending",address:"",city:"",region:"",country:"",postalCode:"",nationality:"",dateOfBirth:"",nationalId:"",sex:"",imageUrl:"",hasPPL:!1,pplNumber:"",pplIssueDate:"",pplExpiryDate:"",medicalCertificateNumber:"",medicalExamDate:"",medicalIssueDate:"",medicalExpiryDate:"",totalFlightHours:0,creditedHours:0}),alert("User created successfully!"),I()}else{await e.json();alert("Failed to create user. Please try again.")}}catch(ul){alert("Error creating user. Please try again.")}finally{l(!1)}},disabled:o,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:o?"Creating...":"Create User"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Basic Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Email"}),Y.jsx("input",{type:"email",value:k.email,onChange:e=>S("email",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"user@example.com"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"First Name"}),Y.jsx("input",{type:"text",value:k.firstName,onChange:e=>S("firstName",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"John"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Last Name"}),Y.jsx("input",{type:"text",value:k.lastName,onChange:e=>S("lastName",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Doe"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Phone Number"}),Y.jsx("input",{type:"tel",value:k.phoneNumber,onChange:e=>S("phoneNumber",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"+1 (555) 123-4567"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Role"}),Y.jsxs("select",{value:k.role,onChange:e=>S("role",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:[Y.jsx("option",{value:"student_pilot",children:"Student Pilot"}),Y.jsx("option",{value:"pilot",children:"Pilot"}),Y.jsx("option",{value:"instructor",children:"Instructor"}),Y.jsx("option",{value:"admin",children:"Admin"}),Y.jsx("option",{value:"super_admin",children:"Super Admin"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Status"}),Y.jsxs("select",{value:k.status,onChange:e=>S("status",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:[Y.jsx("option",{value:"pending",children:"Pending"}),Y.jsx("option",{value:"active",children:"Active"}),Y.jsx("option",{value:"suspended",children:"Suspended"})]})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Profile Image"}),Y.jsxs("div",{className:"space-y-2",children:[Y.jsx("input",{type:"file",accept:"image/*",onChange:e=>{const t=e.target.files?.[0];t&&E(t)},className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"}),k.imageUrl&&Y.jsx("div",{className:"w-32 h-32 bg-gray-100 rounded-md overflow-hidden",children:Y.jsx("img",{src:k.imageUrl,alt:"Profile preview",className:"w-full h-full object-cover"})})]})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Additional Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Address"}),Y.jsx("input",{type:"text",value:k.address,onChange:e=>S("address",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"123 Main St"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"City"}),Y.jsx("input",{type:"text",value:k.city,onChange:e=>S("city",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"New York"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Country"}),Y.jsx("input",{type:"text",value:k.country,onChange:e=>S("country",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"USA"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Date of Birth"}),Y.jsx("input",{type:"date",value:k.dateOfBirth,onChange:e=>S("dateOfBirth",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Nationality"}),Y.jsx("input",{type:"text",value:k.nationality,onChange:e=>S("nationality",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"American"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Total Flight Hours"}),Y.jsx("input",{type:"number",value:k.totalFlightHours,onChange:e=>S("totalFlightHours",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"0"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Credited Hours"}),Y.jsx("input",{type:"number",value:k.creditedHours,onChange:e=>S("creditedHours",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"0"})]})]})]})]})})]})}),r&&u&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"View User"}),Y.jsx("button",{onClick:()=>i(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Close"})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"flex items-center space-x-4",children:[Y.jsx("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center",children:u.imageUrl?Y.jsx("img",{src:u.imageUrl,alt:`${u.firstName} ${u.lastName}`,className:"w-16 h-16 rounded-full object-cover"}):Y.jsxs("span",{className:"text-gray-500 text-xl",children:[u.firstName?.[0],u.lastName?.[0]]})}),Y.jsxs("div",{children:[Y.jsxs("h4",{className:"text-xl font-semibold text-gray-900",children:[u.firstName," ",u.lastName]}),Y.jsx("p",{className:"text-gray-500",children:u.email}),Y.jsxs("div",{className:"flex space-x-2 mt-2",children:[Y.jsx("span",{className:`inline-block px-2 py-1 text-xs font-medium rounded-full ${T(u.role)}`,children:u.role?.replace("_"," ").toUpperCase()}),Y.jsx("span",{className:`inline-block px-2 py-1 text-xs font-medium rounded-full ${_(u.status)}`,children:u.status?.toUpperCase()})]})]})]}),Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Contact Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Phone"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.phoneNumber||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Address"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.address||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"City"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.city||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Country"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.country||"N/A"})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Flight Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Total Flight Hours"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.totalFlightHours||0})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Credited Hours"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.creditedHours||0})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Date of Birth"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.dateOfBirth?new Date(u.dateOfBirth).toLocaleDateString():"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Nationality"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:u.nationality||"N/A"})]})]})]}),u.imageUrl&&Y.jsxs("div",{children:[Y.jsx("h5",{className:"font-medium text-gray-900 mb-3",children:"Profile Image"}),Y.jsx("div",{className:"w-full max-w-md bg-gray-100 rounded-lg overflow-hidden",children:Y.jsx("img",{src:u.imageUrl,alt:`${u.firstName} ${u.lastName}`,className:"w-full h-64 object-cover"})})]})]})})]})}),n&&u&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Edit User"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>a(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:async()=>{if(u){f(!0);try{(await fetch(`/api/admin/users/${u.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({...k,dateOfBirth:k.dateOfBirth?new Date(k.dateOfBirth).toISOString():null,pplIssueDate:k.pplIssueDate?new Date(k.pplIssueDate).toISOString():null,pplExpiryDate:k.pplExpiryDate?new Date(k.pplExpiryDate).toISOString():null,medicalExamDate:k.medicalExamDate?new Date(k.medicalExamDate).toISOString():null,medicalIssueDate:k.medicalIssueDate?new Date(k.medicalIssueDate).toISOString():null,medicalExpiryDate:k.medicalExpiryDate?new Date(k.medicalExpiryDate).toISOString():null,totalFlightHours:parseInt(k.totalFlightHours.toString()),creditedHours:parseInt(k.creditedHours.toString())})})).ok?(a(!1),h(null),C({email:"",firstName:"",lastName:"",phoneNumber:"",role:"student_pilot",status:"pending",address:"",city:"",region:"",country:"",postalCode:"",nationality:"",dateOfBirth:"",nationalId:"",sex:"",imageUrl:"",hasPPL:!1,pplNumber:"",pplIssueDate:"",pplExpiryDate:"",medicalCertificateNumber:"",medicalExamDate:"",medicalIssueDate:"",medicalExpiryDate:"",totalFlightHours:0,creditedHours:0}),alert("User updated successfully!"),g(e=>e+1),I()):alert("Failed to update user. Please try again.")}catch(ul){alert("Error updating user. Please try again.")}finally{f(!1)}}},disabled:m,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:m?"Updating...":"Update User"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Basic Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Email"}),Y.jsx("input",{type:"email",value:k.email,onChange:e=>S("email",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"user@example.com"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"First Name"}),Y.jsx("input",{type:"text",value:k.firstName,onChange:e=>S("firstName",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"John"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Last Name"}),Y.jsx("input",{type:"text",value:k.lastName,onChange:e=>S("lastName",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Doe"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Phone Number"}),Y.jsx("input",{type:"tel",value:k.phoneNumber,onChange:e=>S("phoneNumber",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"+1 (555) 123-4567"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Role"}),Y.jsxs("select",{value:k.role,onChange:e=>S("role",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:[Y.jsx("option",{value:"student_pilot",children:"Student Pilot"}),Y.jsx("option",{value:"pilot",children:"Pilot"}),Y.jsx("option",{value:"instructor",children:"Instructor"}),Y.jsx("option",{value:"admin",children:"Admin"}),Y.jsx("option",{value:"super_admin",children:"Super Admin"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Status"}),Y.jsxs("select",{value:k.status,onChange:e=>S("status",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:[Y.jsx("option",{value:"pending",children:"Pending"}),Y.jsx("option",{value:"active",children:"Active"}),Y.jsx("option",{value:"suspended",children:"Suspended"})]})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Profile Image"}),Y.jsxs("div",{className:"space-y-2",children:[Y.jsx("input",{type:"file",accept:"image/*",onChange:e=>{const t=e.target.files?.[0];t&&E(t)},className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"}),k.imageUrl&&Y.jsx("div",{className:"w-32 h-32 bg-gray-100 rounded-md overflow-hidden",children:Y.jsx("img",{src:k.imageUrl,alt:"Profile preview",className:"w-full h-full object-cover"})})]})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Additional Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Address"}),Y.jsx("input",{type:"text",value:k.address,onChange:e=>S("address",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"123 Main St"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"City"}),Y.jsx("input",{type:"text",value:k.city,onChange:e=>S("city",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"New York"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Country"}),Y.jsx("input",{type:"text",value:k.country,onChange:e=>S("country",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"USA"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Date of Birth"}),Y.jsx("input",{type:"date",value:k.dateOfBirth,onChange:e=>S("dateOfBirth",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Nationality"}),Y.jsx("input",{type:"text",value:k.nationality,onChange:e=>S("nationality",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"American"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Total Flight Hours"}),Y.jsx("input",{type:"number",value:k.totalFlightHours,onChange:e=>S("totalFlightHours",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"0"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Credited Hours"}),Y.jsx("input",{type:"number",value:k.creditedHours,onChange:e=>S("creditedHours",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"0"})]})]})]})]})})]})})]})},Ko=({userRole:t="user"})=>{const s="admin"===t||"super_admin"===t||"base_manager"===t,[r,i]=e.useState(!1),[n,a]=e.useState(!1),[o,l]=e.useState(!1),[c,d]=e.useState(null),[u,h]=e.useState(!1),[m,f]=e.useState({name:"",description:"",address:"",city:"",region:"",country:"",postalCode:"",latitude:"",longitude:"",icaoCode:"",iataCode:"",runwayLength:"",runwaySurface:"",elevation:"",frequency:"",operatingHours:"",phone:"",email:"",website:"",imageUrl:"",isActive:!0}),[p,g]=e.useState([]),[y,b]=e.useState(!0),[v,j]=e.useState(null),N=e=>e?e.startsWith("data:")||e.startsWith("http")?e:`${e}`:"";e.useEffect(()=>{(async()=>{try{b(!0);const e=await fetch("/api/admin/bases");if(!e.ok)throw new Error("Failed to fetch bases");const t=await e.json();g(t)}catch(e){j(e instanceof Error?e.message:"Unknown error")}finally{b(!1)}})()},[]);const w=(e,t)=>{f(s=>({...s,[e]:t}))},k=()=>{f({name:"",description:"",address:"",city:"",region:"",country:"",postalCode:"",latitude:"",longitude:"",icaoCode:"",iataCode:"",runwayLength:"",runwaySurface:"",elevation:"",frequency:"",operatingHours:"",phone:"",email:"",website:"",imageUrl:"",isActive:!0})};return Y.jsxs("div",{className:"h-full flex flex-col",children:[Y.jsx("div",{className:"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-20",children:Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:s?"Base Management":"Available Bases"}),s&&Y.jsx("button",{onClick:()=>{k(),h(!1),d(null),i(!0)},className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800",children:"Add Base"})]})}),Y.jsx("div",{className:"flex-1 overflow-auto py-6 px-0",children:Y.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",children:p.map(e=>Y.jsxs("div",{className:"bg-white rounded-lg shadow-md overflow-hidden flex flex-col min-h-[400px]",children:[Y.jsxs("div",{className:"relative w-full",style:{aspectRatio:"16/9"},children:[e.imageUrl?Y.jsx("img",{src:N(e.imageUrl),alt:e.name,className:"w-full h-full object-cover"}):Y.jsx("div",{className:"w-full h-full bg-gray-200 flex items-center justify-center",children:Y.jsx(x,{className:"w-12 h-12 text-gray-400"})}),Y.jsx("div",{className:"absolute top-3 right-3",children:Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full "+(e.isActive?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:e.isActive?"ACTIVE":"INACTIVE"})})]}),Y.jsxs("div",{className:"p-4 flex flex-col flex-1",children:[Y.jsxs("div",{className:"flex-1",children:[Y.jsx("h3",{className:"font-semibold text-gray-900 text-lg mb-1",children:e.name}),Y.jsxs("p",{className:"text-sm text-gray-500 mb-2",children:[e.city,", ",e.country]}),e.icaoCode&&Y.jsxs("p",{className:"text-xs text-gray-400 mb-4",children:["ICAO: ",e.icaoCode]})]}),Y.jsx("div",{className:"border-t border-gray-200 pt-3 mt-4",children:Y.jsxs("div",{className:"flex space-x-3 text-sm",children:[Y.jsx("button",{onClick:()=>(e=>{d(e),a(!0)})(e),className:"text-blue-600 hover:text-blue-800 font-medium",children:"View Details"}),s&&Y.jsxs(Y.Fragment,{children:[Y.jsx("button",{onClick:()=>(e=>{d(e),f({name:e.name||"",description:e.description||"",address:e.address||"",city:e.city||"",region:e.region||"",country:e.country||"",postalCode:e.postalCode||"",latitude:e.latitude?.toString()||"",longitude:e.longitude?.toString()||"",icaoCode:e.icaoCode||"",iataCode:e.iataCode||"",runwayLength:e.runwayLength||"",runwaySurface:e.runwaySurface||"",elevation:e.elevation||"",frequency:e.frequency||"",operatingHours:e.operatingHours||"",phone:e.phone||"",email:e.email||"",website:e.website||"",imageUrl:e.imageUrl||"",isActive:void 0===e.isActive||e.isActive}),h(!0),i(!0)})(e),className:"text-gray-600 hover:text-gray-800 font-medium",children:"Edit"}),Y.jsx("button",{onClick:()=>(async e=>{if(confirm(`Are you sure you want to delete "${e.name}"? This action cannot be undone.`))try{if(!(await fetch(`/api/admin/bases/${e.id}`,{method:"DELETE"})).ok)throw new Error("Failed to delete base");g(t=>t.filter(t=>t.id!==e.id)),R.success("Base deleted successfully!")}catch(t){R.error("Error deleting base. Please try again.")}})(e),className:"text-red-600 hover:text-red-800 font-medium",children:"Delete"})]})]})})]})]},e.id))})}),r&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:u?"Edit Base":"Add New Base"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>i(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:u?async()=>{if(c){l(!0);try{const e=await fetch(`/api/admin/bases/${c.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({...m,latitude:m.latitude?parseFloat(m.latitude):null,longitude:m.longitude?parseFloat(m.longitude):null})});if(!e.ok)throw new Error("Failed to update base");{const t=await e.json();g(e=>e.map(e=>e.id===c.id?t:e)),i(!1),k(),d(null),h(!1),R.success("Base updated successfully!")}}catch(e){R.error("Error updating base. Please try again.")}finally{l(!1)}}}:async()=>{l(!0);try{const e=await fetch("/api/admin/bases",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...m,latitude:m.latitude?parseFloat(m.latitude):null,longitude:m.longitude?parseFloat(m.longitude):null})});if(!e.ok)throw new Error("Failed to create base");{const t=await e.json();g(e=>[...e,t]),i(!1),k(),R.success("Base created successfully!")}}catch(e){R.error("Error creating base. Please try again.")}finally{l(!1)}},disabled:o,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:o?"Saving...":u?"Update Base":"Create Base"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Basic Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Base Name"}),Y.jsx("input",{type:"text",value:m.name,onChange:e=>w("name",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Main Base"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Description"}),Y.jsx("textarea",{value:m.description,onChange:e=>w("description",e.target.value),rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Description of the base..."})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Address"}),Y.jsx("input",{type:"text",value:m.address,onChange:e=>w("address",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"123 Airport Road"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"City"}),Y.jsx("input",{type:"text",value:m.city,onChange:e=>w("city",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"New York"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Country"}),Y.jsx("input",{type:"text",value:m.country,onChange:e=>w("country",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"USA"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"ICAO Code"}),Y.jsx("input",{type:"text",value:m.icaoCode,onChange:e=>w("icaoCode",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"KJFK"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"IATA Code"}),Y.jsx("input",{type:"text",value:m.iataCode,onChange:e=>w("iataCode",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"JFK"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Base Image"}),Y.jsxs("div",{className:"space-y-2",children:[Y.jsx("input",{type:"file",accept:"image/*",onChange:e=>{const t=e.target.files?.[0];t&&(async e=>{try{if(!e.type.startsWith("image/"))return void R.error("Please select a valid image file.");if(e.size>5242880)return void R.error("Image file size must be less than 5MB.");const t=new FormData;t.append("image",e);const s=await fetch("/api/admin/bases/upload-image",{method:"POST",body:t});if(s.ok){const e=await s.json();w("imageUrl",e.url),R.success("Base image uploaded successfully!")}else await s.text(),R.error(`Failed to upload base image: ${s.status} ${s.statusText}`)}catch(t){R.error("Error uploading base image. Please check your connection and try again.")}})(t)},className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"}),m.imageUrl&&Y.jsx("div",{className:"w-32 h-32 bg-gray-100 rounded-md overflow-hidden",children:Y.jsx("img",{src:N(m.imageUrl),alt:"Base preview",className:"w-full h-full object-cover"})})]})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Additional Information"}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Latitude"}),Y.jsx("input",{type:"number",step:"any",value:m.latitude,onChange:e=>w("latitude",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"40.7128"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Longitude"}),Y.jsx("input",{type:"number",step:"any",value:m.longitude,onChange:e=>w("longitude",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"-74.0060"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Runway Length (ft)"}),Y.jsx("input",{type:"text",value:m.runwayLength,onChange:e=>w("runwayLength",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"8000"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Runway Surface"}),Y.jsx("input",{type:"text",value:m.runwaySurface,onChange:e=>w("runwaySurface",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Asphalt"})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Elevation (ft)"}),Y.jsx("input",{type:"text",value:m.elevation,onChange:e=>w("elevation",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"13"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Frequency (MHz)"}),Y.jsx("input",{type:"text",value:m.frequency,onChange:e=>w("frequency",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"118.1"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Operating Hours"}),Y.jsx("input",{type:"text",value:m.operatingHours,onChange:e=>w("operatingHours",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"24/7"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Phone"}),Y.jsx("input",{type:"tel",value:m.phone,onChange:e=>w("phone",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"+1 (555) 123-4567"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Email"}),Y.jsx("input",{type:"email",value:m.email,onChange:e=>w("email",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"info@base.com"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Website"}),Y.jsx("input",{type:"url",value:m.website,onChange:e=>w("website",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"https://base.com"})]}),Y.jsx("div",{children:Y.jsxs("label",{className:"flex items-center",children:[Y.jsx("input",{type:"checkbox",checked:m.isActive,onChange:e=>w("isActive",e.target.checked),className:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"}),Y.jsx("span",{className:"ml-2 text-sm text-gray-700",children:"Active Base"})]})})]})]})})]})}),n&&c&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"View Base"}),Y.jsx("button",{onClick:()=>a(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Close"})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"flex items-center space-x-4",children:[Y.jsx("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center",children:c.imageUrl?Y.jsx("img",{src:N(c.imageUrl),alt:c.name,className:"w-16 h-16 rounded-full object-cover"}):Y.jsx(x,{className:"w-8 h-8 text-gray-500"})}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-xl font-semibold text-gray-900",children:c.name}),Y.jsxs("p",{className:"text-gray-500",children:[c.city,", ",c.country]}),Y.jsxs("div",{className:"flex space-x-2 mt-2",children:[Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full "+(c.isActive?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:c.isActive?"ACTIVE":"INACTIVE"}),c.icaoCode&&Y.jsxs("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800",children:["ICAO: ",c.icaoCode]})]})]})]}),Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Location Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Address"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.address||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"City"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.city||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Country"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.country||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Coordinates"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.latitude&&c.longitude?`${c.latitude}, ${c.longitude}`:"N/A"})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Airport Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Runway Length"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.runwayLength||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Runway Surface"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.runwaySurface||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Elevation"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.elevation||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Frequency"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:c.frequency||"N/A"})]})]})]}),c.imageUrl&&Y.jsxs("div",{children:[Y.jsx("h5",{className:"font-medium text-gray-900 mb-3",children:"Base Image"}),Y.jsx("div",{className:"w-full max-w-md bg-gray-100 rounded-lg overflow-hidden",children:Y.jsx("img",{src:N(c.imageUrl),alt:c.name,className:"w-full h-64 object-cover"})})]})]})})]})})]})},Go=({userRole:t="user"})=>{const s="admin"===t||"super_admin"===t||"base_manager"===t,[r,i]=e.useState([]),[n,a]=e.useState([]),[o,l]=e.useState(!0),[c,d]=e.useState(null),[h,m]=e.useState(!1),[f,p]=e.useState("add"),[g,x]=e.useState(!1),[y,b]=e.useState(null),[v,j]=e.useState(!1),[N,w]=e.useState({callSign:"",type:"",manufacturer:"",model:"",seats:4,maxRange:0,cruiseSpeed:0,fuelCapacity:0,yearManufactured:(new Date).getFullYear(),description:"",isActive:!0,baseId:"",imageUrl:"",totalFlightHours:0}),k="";e.useEffect(()=>{(async()=>{try{l(!0),d(null);const e=await fetch("/api/admin/aircraft");if(e.ok){const t=await e.json();i(t)}else d("Failed to load aircraft data. Please try again later.");const t=await fetch("/api/admin/bases");if(t.ok){const e=await t.json();a(e)}}catch(e){d("Error connecting to server. Please check your connection.")}finally{l(!1)}})()},[k]);const C=(e,t)=>{w(s=>({...s,[e]:t}))},I=e=>{const t=n.find(t=>t.id===e);return t?t.icaoCode:"N/A"},S=()=>{w({callSign:"",type:"",manufacturer:"",model:"",seats:4,maxRange:0,cruiseSpeed:0,fuelCapacity:0,yearManufactured:(new Date).getFullYear(),description:"",isActive:!0,baseId:"",imageUrl:"",totalFlightHours:0})};return Y.jsxs("div",{className:"h-full flex flex-col",children:[Y.jsx("div",{className:"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-20",children:Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:s?"Fleet Management":"Available Aircraft"}),s&&Y.jsx("button",{onClick:()=>{S(),b(null),p("add"),m(!0)},className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800",children:"Add Aircraft"})]})}),Y.jsxs("div",{className:"flex-1 overflow-auto py-6 px-0",children:[o&&Y.jsx("div",{className:"flex items-center justify-center h-64",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto mb-4"}),Y.jsx("p",{className:"text-gray-600",children:"Loading aircraft data..."})]})}),c&&!o&&Y.jsx("div",{className:"flex items-center justify-center h-64",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"Error Loading Aircraft"}),Y.jsx("p",{className:"text-gray-600 mb-4",children:c}),Y.jsx("button",{onClick:()=>window.location.reload(),className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800",children:"Retry"})]})}),!o&&!c&&Y.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",children:r.map(e=>Y.jsxs("div",{className:"bg-white rounded-lg shadow-md overflow-hidden flex flex-col min-h-[400px]",children:[Y.jsxs("div",{className:"relative w-full",style:{aspectRatio:"16/9"},children:[e.imageUrl?Y.jsx("img",{src:`${e.imageUrl}`,alt:e.callSign,className:"w-full h-full object-cover"}):Y.jsx("div",{className:"w-full h-full bg-gray-200 flex items-center justify-center",children:Y.jsx(u,{className:"w-12 h-12 text-gray-400"})}),Y.jsx("div",{className:"absolute top-3 right-3",children:Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full "+(e.isActive?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:e.isActive?"ACTIVE":"INACTIVE"})})]}),Y.jsxs("div",{className:"p-4 flex flex-col flex-1",children:[Y.jsxs("div",{className:"flex-1",children:[Y.jsx("div",{className:"mb-3",children:Y.jsxs("div",{className:"mb-1",children:[Y.jsx("h3",{className:"font-bold text-gray-900 text-lg",children:e.callSign}),Y.jsxs("div",{className:"flex items-center justify-between",children:[Y.jsx("span",{className:"text-sm text-gray-500 font-medium",children:e.model}),Y.jsx("span",{className:"text-sm text-gray-600",children:e.manufacturer})]})]})}),Y.jsxs("div",{className:"grid grid-cols-4 gap-2 mb-4",children:[Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Seats"}),Y.jsx("div",{className:"text-sm font-semibold text-gray-900",children:e.seats})]}),Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Year"}),Y.jsx("div",{className:"text-sm font-semibold text-gray-900",children:e.yearManufactured})]}),Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Speed"}),Y.jsxs("div",{className:"text-sm font-semibold text-gray-900",children:[e.cruiseSpeed," kts"]})]}),Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Range"}),Y.jsxs("div",{className:"text-sm font-semibold text-gray-900",children:[e.maxRange," nm"]})]})]}),Y.jsxs("div",{className:"grid grid-cols-4 gap-2 mb-4",children:[Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Type"}),Y.jsx("div",{className:"text-sm font-semibold text-gray-900",children:e.type})]}),Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Base"}),Y.jsx("div",{className:"text-sm font-semibold text-gray-900",children:I(e.baseId)})]}),Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Hours"}),Y.jsx("div",{className:"text-sm font-semibold text-gray-900",children:e.totalFlightHours?.toLocaleString()||"0"})]}),Y.jsxs("div",{className:"bg-gray-50 rounded-lg p-2",children:[Y.jsx("div",{className:"text-xs text-gray-500 uppercase tracking-wide",children:"Fuel"}),Y.jsxs("div",{className:"text-sm font-semibold text-gray-900",children:[e.fuelCapacity," L"]})]})]})]}),Y.jsx("div",{className:"border-t border-gray-200 pt-3 mt-4",children:Y.jsxs("div",{className:"flex space-x-3 text-sm",children:[Y.jsx("button",{onClick:()=>(e=>{b(e),x(!0)})(e),className:"text-blue-600 hover:text-blue-800 font-medium",children:"View Details"}),s&&Y.jsxs(Y.Fragment,{children:[Y.jsx("button",{onClick:()=>(e=>{b(e),w({callSign:e.callSign||"",type:e.type||"",manufacturer:e.manufacturer||"",model:e.model||"",seats:e.seats||4,maxRange:e.maxRange||0,cruiseSpeed:e.cruiseSpeed||0,fuelCapacity:e.fuelCapacity||0,yearManufactured:e.yearManufactured||(new Date).getFullYear(),description:e.description||"",isActive:e.isActive,baseId:e.baseId||1,imageUrl:e.imageUrl||"",totalFlightHours:e.totalFlightHours||0}),p("edit"),m(!0)})(e),className:"text-gray-600 hover:text-gray-800 font-medium",children:"Edit"}),Y.jsx("button",{onClick:()=>(async e=>{if(confirm(`Are you sure you want to delete "${e.callSign}"? This action cannot be undone.`))try{const t=await fetch(`/api/admin/aircraft/${e.id}`,{method:"DELETE"});t.ok?(i(t=>t.filter(t=>t.id!==e.id)),R.success("Aircraft deleted successfully!")):(await t.text(),R.error("Error deleting aircraft. Please try again."))}catch(t){R.error("Error deleting aircraft. Please try again.")}})(e),className:"text-red-600 hover:text-red-800 font-medium",children:"Delete"})]})]})})]})]},e.id))})]}),h&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"add"===f?"Add New Aircraft":"Edit Aircraft"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>m(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:"add"===f?async()=>{j(!0);try{const e=await fetch("/api/admin/aircraft",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(N)});if(e.ok){const t=await e.json();i(e=>[...e,t]),m(!1),S(),R.success("Aircraft created successfully!")}else{await e.text();R.error("Error creating aircraft. Please try again.")}}catch(e){R.error("Error creating aircraft. Please try again.")}finally{j(!1)}}:async()=>{if(y){j(!0);try{const e=await fetch(`/api/admin/aircraft/${y.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(N)});if(e.ok){const t=await e.json();i(e=>e.map(e=>e.id===y.id?t:e)),m(!1),b(null),S(),R.success("Aircraft updated successfully!")}else{await e.text();R.error("Error updating aircraft. Please try again.")}}catch(e){R.error("Error updating aircraft. Please try again.")}finally{j(!1)}}},disabled:v,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:v?"add"===f?"Creating...":"Updating...":"add"===f?"Create Aircraft":"Update Aircraft"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Basic Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Call Sign"}),Y.jsx("input",{type:"text",value:N.callSign,onChange:e=>C("callSign",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Type"}),Y.jsx("input",{type:"text",value:N.type,onChange:e=>C("type",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Manufacturer"}),Y.jsx("input",{type:"text",value:N.manufacturer,onChange:e=>C("manufacturer",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Model"}),Y.jsx("input",{type:"text",value:N.model,onChange:e=>C("model",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Base"}),Y.jsxs("select",{value:N.baseId||"",onChange:e=>C("baseId",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:[Y.jsx("option",{value:"",children:"Select a base"}),n.map(e=>Y.jsxs("option",{value:e.id,children:[e.name," (",e.icaoCode,")"]},e.id))]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Aircraft Image"}),Y.jsxs("div",{className:"space-y-2",children:[Y.jsx("input",{type:"file",accept:"image/*",onChange:e=>{const t=e.target.files?.[0];t&&(async e=>{try{if(!e.type.startsWith("image/"))return void R.error("Please select a valid image file.");if(e.size>5242880)return void R.error("Image file size must be less than 5MB.");const t=new FormData;t.append("image",e);const s=await fetch("/api/admin/aircraft/upload-image",{method:"POST",body:t});if(s.ok){const e=await s.json();C("imageUrl",e.url),R.success("Aircraft image uploaded successfully!")}else await s.text(),R.error(`Failed to upload aircraft image: ${s.status} ${s.statusText}`)}catch(t){R.error("Error uploading aircraft image. Please check your connection and try again.")}})(t)},className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"}),N.imageUrl&&Y.jsx("div",{className:"w-32 h-32 bg-gray-100 rounded-md overflow-hidden",children:Y.jsx("img",{src:`${N.imageUrl}`,alt:"Aircraft preview",className:"w-full h-full object-cover"})})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Description"}),Y.jsx("textarea",{value:N.description,onChange:e=>C("description",e.target.value),rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Specifications"}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Seats"}),Y.jsx("input",{type:"number",value:N.seats,onChange:e=>C("seats",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Year Manufactured"}),Y.jsx("input",{type:"number",value:N.yearManufactured,onChange:e=>C("yearManufactured",parseInt(e.target.value)||(new Date).getFullYear()),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Total Flight Hours"}),Y.jsx("input",{type:"number",value:N.totalFlightHours,onChange:e=>C("totalFlightHours",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Max Range (nm)"}),Y.jsx("input",{type:"number",value:N.maxRange,onChange:e=>C("maxRange",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Cruise Speed (kts)"}),Y.jsx("input",{type:"number",value:N.cruiseSpeed,onChange:e=>C("cruiseSpeed",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Fuel Capacity (L)"}),Y.jsx("input",{type:"number",value:N.fuelCapacity,onChange:e=>C("fuelCapacity",parseInt(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"})]}),Y.jsx("div",{children:Y.jsxs("label",{className:"flex items-center",children:[Y.jsx("input",{type:"checkbox",checked:N.isActive,onChange:e=>C("isActive",e.target.checked),className:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"}),Y.jsx("span",{className:"ml-2 text-sm text-gray-700",children:"Active Aircraft"})]})})]})]})})]})}),g&&y&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"View Aircraft"}),Y.jsx("button",{onClick:()=>x(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Close"})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"flex items-center space-x-4",children:[Y.jsx("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center",children:y.imageUrl?Y.jsx("img",{src:`${y.imageUrl}`,alt:y.callSign,className:"w-16 h-16 rounded-full object-cover"}):Y.jsx(u,{className:"w-8 h-8 text-gray-500"})}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-xl font-semibold text-gray-900",children:y.callSign}),Y.jsxs("p",{className:"text-gray-500",children:[y.manufacturer," ",y.model]}),Y.jsxs("div",{className:"flex space-x-2 mt-2",children:[Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full "+(y.isActive?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:y.isActive?"ACTIVE":"INACTIVE"}),Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800",children:y.type})]})]})]}),Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Aircraft Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Manufacturer"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.manufacturer||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Model"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.model||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Year Manufactured"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.yearManufactured||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Base"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:(e=>{const t=n.find(t=>t.id===e);return t?`${t.name} (${t.icaoCode})`:"Unknown Base"})(y.baseId)})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Specifications"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Seats"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.seats||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Max Range"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.maxRange?`${y.maxRange} nm`:"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Cruise Speed"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.cruiseSpeed?`${y.cruiseSpeed} kts`:"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Fuel Capacity"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:y.fuelCapacity?`${y.fuelCapacity} L`:"N/A"})]})]})]}),y.description&&Y.jsxs("div",{children:[Y.jsx("h5",{className:"font-medium text-gray-900 mb-2",children:"Description"}),Y.jsx("p",{className:"text-sm text-gray-700 bg-gray-50 px-3 py-2 rounded",children:y.description})]}),y.imageUrl&&Y.jsxs("div",{children:[Y.jsx("h5",{className:"font-medium text-gray-900 mb-3",children:"Aircraft Image"}),Y.jsx("div",{className:"w-full max-w-md bg-gray-100 rounded-lg overflow-hidden",children:Y.jsx("img",{src:`${y.imageUrl}`,alt:y.callSign,className:"w-full h-64 object-cover"})})]})]})})]})})]})},Jo=()=>{const[t,s]=e.useState(!1),[r,i]=e.useState(!1),[n,a]=e.useState(null),[o,l]=e.useState(!1),[c,d]=e.useState("super_admin"),[u,h]=e.useState({name:"",displayName:"",description:"",permissions:[],color:"bg-gray-100 text-gray-800"}),[m,f]=e.useState([{id:1,name:"super_admin",displayName:"Super Administrator",description:"Full system access with all permissions",permissions:["users:read","users:write","users:delete","bases:read","bases:write","bases:delete","fleet:read","fleet:write","fleet:delete","roles:read","roles:write","roles:delete"],color:"bg-red-100 text-red-800",userCount:2},{id:2,name:"admin",displayName:"Administrator",description:"Administrative access with most permissions",permissions:["users:read","users:write","bases:read","bases:write","fleet:read","fleet:write"],color:"bg-purple-100 text-purple-800",userCount:5},{id:3,name:"instructor",displayName:"Flight Instructor",description:"Flight instructor with training permissions",permissions:["users:read","fleet:read","flights:read","flights:write"],color:"bg-blue-100 text-blue-800",userCount:12},{id:4,name:"pilot",displayName:"Pilot",description:"Licensed pilot with flight permissions",permissions:["fleet:read","flights:read","flights:write"],color:"bg-green-100 text-green-800",userCount:25},{id:5,name:"student_pilot",displayName:"Student Pilot",description:"Student pilot with limited permissions",permissions:["flights:read"],color:"bg-yellow-100 text-yellow-800",userCount:45}]),p=[{key:"users:read",label:"View Users"},{key:"users:write",label:"Edit Users"},{key:"users:delete",label:"Delete Users"},{key:"bases:read",label:"View Bases"},{key:"bases:write",label:"Edit Bases"},{key:"bases:delete",label:"Delete Bases"},{key:"fleet:read",label:"View Fleet"},{key:"fleet:write",label:"Edit Fleet"},{key:"fleet:delete",label:"Delete Fleet"},{key:"flights:read",label:"View Flights"},{key:"flights:write",label:"Edit Flights"},{key:"flights:delete",label:"Delete Flights"},{key:"roles:read",label:"View Roles"},{key:"roles:write",label:"Edit Roles"},{key:"roles:delete",label:"Delete Roles"}],g=[{value:"bg-red-100 text-red-800",label:"Red"},{value:"bg-purple-100 text-purple-800",label:"Purple"},{value:"bg-blue-100 text-blue-800",label:"Blue"},{value:"bg-green-100 text-green-800",label:"Green"},{value:"bg-yellow-100 text-yellow-800",label:"Yellow"},{value:"bg-gray-100 text-gray-800",label:"Gray"}],x=(e,t)=>{h(s=>({...s,[e]:t}))},y=e=>{h(t=>({...t,permissions:t.permissions.includes(e)?t.permissions.filter(t=>t!==e):[...t.permissions,e]}))},b="super_admin"===c;return Y.jsxs("div",{className:"h-full flex flex-col",children:[Y.jsxs("div",{className:"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-20",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:"Role Management"}),b&&Y.jsx("button",{onClick:()=>s(!0),className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800",children:"Add Role"})]}),Y.jsx("div",{className:"px-6 py-3 bg-gray-50",children:Y.jsxs("div",{className:"grid grid-cols-5 gap-4 text-xs font-medium text-gray-500 uppercase tracking-wider",children:[Y.jsx("div",{children:"Role"}),Y.jsx("div",{children:"Description"}),Y.jsx("div",{children:"Users"}),Y.jsx("div",{children:"Permissions"}),Y.jsx("div",{children:"Actions"})]})})]}),Y.jsx("div",{className:"flex-1 flex flex-col",children:Y.jsx("div",{className:"flex-1 overflow-auto",children:Y.jsx("div",{className:"bg-white",children:Y.jsx("div",{className:"divide-y divide-gray-200",children:m.map(e=>Y.jsx("div",{className:"px-6 py-4 hover:bg-gray-50",children:Y.jsxs("div",{className:"grid grid-cols-5 gap-4 items-center",children:[Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center flex-shrink-0",children:Y.jsx(I,{className:"w-5 h-5 text-gray-500"})}),Y.jsxs("div",{className:"ml-4",children:[Y.jsx("div",{className:"text-sm font-medium text-gray-900",children:e.displayName}),Y.jsx("div",{className:"text-sm text-gray-500",children:e.name}),Y.jsx("span",{className:`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${e.color}`,children:e.displayName.toUpperCase()})]})]}),Y.jsx("div",{className:"text-sm text-gray-900 max-w-xs truncate",children:e.description}),Y.jsxs("div",{className:"text-sm text-gray-900",children:[e.userCount," users"]}),Y.jsx("div",{className:"text-sm text-gray-900",children:Y.jsxs("div",{className:"flex flex-wrap gap-1",children:[e.permissions.slice(0,3).map((e,t)=>Y.jsx("span",{className:"inline-flex px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded",children:e.split(":")[1]},t)),e.permissions.length>3&&Y.jsxs("span",{className:"inline-flex px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded",children:["+",e.permissions.length-3," more"]})]})}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>(e=>{a(e),h({name:e.name,displayName:e.displayName,description:e.description,permissions:e.permissions||[],color:e.color}),i(!0)})(e),disabled:!b,className:"text-gray-600 hover:text-gray-900 px-2 py-1 rounded border border-gray-200 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",children:"Edit"}),Y.jsx("button",{onClick:()=>(async e=>{if(confirm(`Are you sure you want to delete the "${e.displayName}" role? This action cannot be undone.`))try{f(t=>t.filter(t=>t.id!==e.id)),alert("Role deleted successfully!")}catch(ul){alert("Error deleting role. Please try again.")}})(e),disabled:!b,className:"text-red-600 hover:text-red-900 px-2 py-1 rounded border border-red-200 hover:bg-red-50 disabled:opacity-50 disabled:cursor-not-allowed",children:Y.jsx(D,{className:"w-4 h-4"})})]})]})},e.id))})})})}),t&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Add New Role"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>s(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:async()=>{l(!0);try{const e={id:m.length+1,...u,userCount:0};f(t=>[...t,e]),s(!1),h({name:"",displayName:"",description:"",permissions:[],color:"bg-gray-100 text-gray-800"}),alert("Role created successfully!")}catch(ul){alert("Error creating role. Please try again.")}finally{l(!1)}},disabled:o,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:o?"Creating...":"Create Role"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Basic Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Role Name"}),Y.jsx("input",{type:"text",value:u.name,onChange:e=>x("name",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"super_admin"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Display Name"}),Y.jsx("input",{type:"text",value:u.displayName,onChange:e=>x("displayName",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Super Administrator"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Description"}),Y.jsx("textarea",{value:u.description,onChange:e=>x("description",e.target.value),rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Description of the role..."})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Color"}),Y.jsx("select",{value:u.color,onChange:e=>x("color",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:g.map(e=>Y.jsx("option",{value:e.value,children:e.label},e.value))})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Permissions"}),Y.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-3",children:p.map(e=>Y.jsxs("label",{className:"flex items-center",children:[Y.jsx("input",{type:"checkbox",checked:u.permissions.includes(e.key),onChange:()=>y(e.key),className:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"}),Y.jsx("span",{className:"ml-2 text-sm text-gray-700",children:e.label})]},e.key))})]})]})})]})}),r&&n&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Edit Role"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>i(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:async()=>{if(n){l(!0);try{f(e=>e.map(e=>e.id===n.id?{...e,...u}:e)),i(!1),a(null),h({name:"",displayName:"",description:"",permissions:[],color:"bg-gray-100 text-gray-800"}),alert("Role updated successfully!")}catch(ul){alert("Error updating role. Please try again.")}finally{l(!1)}}},disabled:o,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:o?"Updating...":"Update Role"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Basic Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Role Name"}),Y.jsx("input",{type:"text",value:u.name,onChange:e=>x("name",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"super_admin"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Display Name"}),Y.jsx("input",{type:"text",value:u.displayName,onChange:e=>x("displayName",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Super Administrator"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Description"}),Y.jsx("textarea",{value:u.description,onChange:e=>x("description",e.target.value),rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Description of the role..."})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Color"}),Y.jsx("select",{value:u.color,onChange:e=>x("color",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:g.map(e=>Y.jsx("option",{value:e.value,children:e.label},e.value))})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h4",{className:"font-medium text-gray-900",children:"Permissions"}),Y.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-3",children:p.map(e=>Y.jsxs("label",{className:"flex items-center",children:[Y.jsx("input",{type:"checkbox",checked:u.permissions.includes(e.key),onChange:()=>y(e.key),className:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"}),Y.jsx("span",{className:"ml-2 text-sm text-gray-700",children:e.label})]},e.key))})]})]})})]})})]})},Yo=({userRole:t="user"})=>{const s="admin"===t||"super_admin"===t||"base_manager"===t,[r,i]=e.useState(!1),[n,a]=e.useState(!1),[o,l]=e.useState("add"),[c,d]=e.useState(!1),[h,m]=e.useState(null),[f,p]=e.useState({name:"",description:"",type:"flight_school",basePrice:0,duration:"",defaultPaymentPlan:"full_price",isActive:!0,imageUrl:""}),[g,x]=e.useState([]),[y,b]=e.useState(!0),[v,j]=e.useState(null),N=async()=>{try{b(!0);const e=await fetch("/api/admin/services");if(!e.ok)throw new Error("Failed to fetch services");const t=await e.json();x(t)}catch(e){j(e instanceof Error?e.message:"Unknown error")}finally{b(!1)}};e.useEffect(()=>{N()},[]);const w=[{value:"flight_school",label:"Flight School"},{value:"aircraft_rental",label:"Aircraft Rental"},{value:"instruction",label:"Instruction"},{value:"exam_preparation",label:"Exam Preparation"},{value:"theoretical_course",label:"Theoretical Course"}],k=[{value:"full_price",label:"Full Price"},{value:"two_installments",label:"Two Installments"},{value:"full_payment",label:"Full Payment"}],C=(e,t)=>{p(s=>({...s,[e]:t}))},I=()=>{p({name:"",description:"",type:"flight_school",basePrice:0,duration:"",defaultPaymentPlan:"full_price",isActive:!0,imageUrl:""})},S=async()=>{d(!0);try{const e=await fetch("/api/admin/services",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(f)});if(!e.ok)throw new Error("Failed to create service");const t=await e.json();x(e=>[...e,t]),i(!1),I(),R.success("Service created successfully!")}catch(e){R.error("Error creating service. Please try again.")}finally{d(!1)}},E=()=>{I(),l("add"),m(null),i(!0)},T=async()=>{if(h){d(!0);try{const e=await fetch(`/api/admin/services/${h.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(f)});if(!e.ok)throw new Error("Failed to update service");const t=await e.json();x(e=>e.map(e=>e.id===h.id?t:e)),i(!1),m(null),I(),R.success("Service updated successfully!")}catch(e){R.error("Error updating service. Please try again.")}finally{d(!1)}}},_=e=>{switch(e){case"flight_school":return"bg-blue-100 text-blue-800";case"aircraft_rental":return"bg-green-100 text-green-800";case"instruction":return"bg-yellow-100 text-yellow-800";case"exam_preparation":return"bg-purple-100 text-purple-800";case"theoretical_course":return"bg-indigo-100 text-indigo-800";default:return"bg-gray-100 text-gray-800"}},A=e=>w.find(t=>t.value===e)?.label||e;try{return Y.jsxs("div",{className:"h-full flex flex-col",children:[Y.jsx("div",{className:"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-20",children:Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:s?"Service Management":"Available Services"}),s&&Y.jsx("button",{onClick:E,className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800",children:"Add Service"})]})}),Y.jsxs("div",{className:"flex-1 overflow-auto py-6 px-0",children:[y&&Y.jsx("div",{className:"flex items-center justify-center py-12",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-4"}),Y.jsx("p",{className:"text-gray-600",children:"Loading services..."})]})}),v&&!y&&Y.jsx("div",{className:"flex items-center justify-center py-12",children:Y.jsxs("div",{className:"text-center",children:[Y.jsxs("p",{className:"text-red-600 mb-4",children:["Error: ",v]}),Y.jsx("button",{onClick:N,className:"px-4 py-2 bg-black text-white rounded-md hover:bg-gray-800",children:"Retry"})]})}),!y&&!v&&Y.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",children:g.map(e=>Y.jsxs("div",{className:"bg-white rounded-lg shadow-md overflow-hidden flex flex-col min-h-[400px]",children:[Y.jsxs("div",{className:"relative w-full",style:{aspectRatio:"16/9"},children:[e.imageUrl?Y.jsx("img",{src:`${e.imageUrl}`,alt:e.name,className:"w-full h-full object-cover"}):Y.jsx("div",{className:"w-full h-full bg-gray-200 flex items-center justify-center",children:Y.jsx(u,{className:"w-12 h-12 text-gray-400"})}),Y.jsx("div",{className:"absolute top-3 right-3",children:Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full "+(e.isActive?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:e.isActive?"ACTIVE":"INACTIVE"})})]}),Y.jsxs("div",{className:"p-4 flex flex-col flex-1",children:[Y.jsxs("div",{className:"flex-1",children:[Y.jsx("h3",{className:"font-semibold text-gray-900 text-lg mb-1",children:e.name}),Y.jsx("p",{className:"text-sm text-gray-500 mb-1",children:A(e.type)}),Y.jsxs("p",{className:"text-lg font-bold text-gray-900 mb-3",children:["€",e.basePrice]}),Y.jsx("div",{className:"mb-3",children:Y.jsx("span",{className:`inline-block px-2 py-1 text-xs font-medium rounded-full ${_(e.type)}`,children:A(e.type).toUpperCase()})}),Y.jsx("p",{className:"text-sm text-gray-600 line-clamp-2",children:e.description})]}),Y.jsx("div",{className:"border-t border-gray-200 pt-3 mt-4",children:Y.jsxs("div",{className:"flex space-x-3 text-sm",children:[Y.jsx("button",{onClick:()=>(e=>{m(e),a(!0)})(e),className:"text-blue-600 hover:text-blue-800 font-medium",children:"View Details"}),s&&Y.jsxs(Y.Fragment,{children:[Y.jsx("button",{onClick:()=>(e=>{m(e),p({name:e.name||"",description:e.description||"",type:e.type||"flight_school",basePrice:e.basePrice||0,duration:e.duration||"",defaultPaymentPlan:e.defaultPaymentPlan||"full_price",isActive:e.isActive,imageUrl:e.imageUrl||""}),l("edit"),i(!0)})(e),className:"text-gray-600 hover:text-gray-800 font-medium",children:"Edit"}),Y.jsx("button",{onClick:()=>(async e=>{if(confirm(`Are you sure you want to delete "${e.name}"? This action cannot be undone.`))try{if(!(await fetch(`/api/admin/services/${e.id}`,{method:"DELETE"})).ok)throw new Error("Failed to delete service");x(t=>t.filter(t=>t.id!==e.id)),R.success("Service deleted successfully!")}catch(t){R.error("Error deleting service. Please try again.")}})(e),className:"text-red-600 hover:text-red-800 font-medium",children:"Delete"})]})]})})]})]},e.id))})]}),r&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"add"===o?"Add New Service":"Edit Service"}),Y.jsxs("div",{className:"flex space-x-2",children:[Y.jsx("button",{onClick:()=>i(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Cancel"}),Y.jsx("button",{onClick:"add"===o?S:T,disabled:c,className:"px-4 py-2 text-sm bg-black text-white rounded-md hover:bg-gray-800 disabled:opacity-50",children:c?"add"===o?"Creating...":"Updating...":"add"===o?"Create Service":"Update Service"})]})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsx("div",{className:"space-y-6",children:Y.jsxs("div",{className:"space-y-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Service Name"}),Y.jsx("input",{type:"text",value:f.name,onChange:e=>C("name",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Private Pilot License Training"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Description"}),Y.jsx("textarea",{value:f.description,onChange:e=>C("description",e.target.value),rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Description of the service..."})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Service Image"}),Y.jsxs("div",{className:"space-y-2",children:[Y.jsx("input",{type:"file",accept:"image/*",onChange:e=>{const t=e.target.files?.[0];t&&(async e=>{try{if(!e.type.startsWith("image/"))return void R.error("Please select a valid image file.");if(e.size>5242880)return void R.error("Image file size must be less than 5MB.");const t=new FormData;t.append("image",e);const s=await fetch("/api/admin/services/upload-image",{method:"POST",body:t});if(s.ok){const e=await s.json();C("imageUrl",e.url),R.success("Service image uploaded successfully!")}else await s.text(),R.error(`Failed to upload service image: ${s.status} ${s.statusText}`)}catch(t){R.error("Error uploading service image. Please check your connection and try again.")}})(t)},className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"}),f.imageUrl&&Y.jsx("div",{className:"w-32 h-32 bg-gray-100 rounded-md overflow-hidden",children:Y.jsx("img",{src:`${f.imageUrl}`,alt:"Service preview",className:"w-full h-full object-cover"})})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Service Type"}),Y.jsx("select",{value:f.type,onChange:e=>C("type",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:w.map(e=>Y.jsx("option",{value:e.value,children:e.label},e.value))})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Payment Plan"}),Y.jsx("select",{value:f.defaultPaymentPlan,onChange:e=>C("defaultPaymentPlan",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:k.map(e=>Y.jsx("option",{value:e.value,children:e.label},e.value))})]})]}),Y.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Price (€)"}),Y.jsx("input",{type:"number",value:f.basePrice,onChange:e=>C("basePrice",parseFloat(e.target.value)||0),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"8500"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Duration"}),Y.jsx("input",{type:"text",value:f.duration,onChange:e=>C("duration",e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"40-60 hours"})]})]}),Y.jsx("div",{children:Y.jsxs("label",{className:"flex items-center",children:[Y.jsx("input",{type:"checkbox",checked:f.isActive,onChange:e=>C("isActive",e.target.checked),className:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"}),Y.jsx("span",{className:"ml-2 text-sm text-gray-700",children:"Active Service"})]})})]})})})]})}),n&&h&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white rounded-t-lg",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"View Service"}),Y.jsx("button",{onClick:()=>a(!1),className:"px-4 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50",children:"Close"})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"flex items-center space-x-4",children:[Y.jsx("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center overflow-hidden",children:h.imageUrl?Y.jsx("img",{src:`${h.imageUrl}`,alt:h.name,className:"w-16 h-16 object-cover"}):Y.jsx(u,{className:"w-8 h-8 text-gray-500"})}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-xl font-semibold text-gray-900",children:h.name}),Y.jsx("p",{className:"text-gray-500",children:A(h.type)}),Y.jsxs("div",{className:"flex space-x-2 mt-2",children:[Y.jsx("span",{className:`inline-block px-2 py-1 text-xs font-medium rounded-full ${_(h.type)}`,children:A(h.type).toUpperCase()}),Y.jsx("span",{className:"inline-block px-2 py-1 text-xs font-medium rounded-full "+(h.isActive?"bg-green-100 text-green-800":"bg-red-100 text-red-800"),children:h.isActive?"ACTIVE":"INACTIVE"})]})]})]}),Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Service Information"}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Price"}),Y.jsxs("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:["€",h.basePrice]})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Duration"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:h.duration||"N/A"})]}),Y.jsxs("div",{children:[Y.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Payment Plan"}),Y.jsx("p",{className:"text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded",children:h.defaultPaymentPlan||"N/A"})]})]}),Y.jsxs("div",{className:"space-y-4",children:[Y.jsx("h5",{className:"font-medium text-gray-900",children:"Description"}),Y.jsx("p",{className:"text-sm text-gray-700 bg-gray-50 px-3 py-2 rounded",children:h.description||"No description available"})]})]}),h.imageUrl&&Y.jsxs("div",{children:[Y.jsx("h5",{className:"font-medium text-gray-900 mb-3",children:"Service Image"}),Y.jsx("div",{className:"w-full max-w-md bg-gray-100 rounded-lg overflow-hidden",children:Y.jsx("img",{src:`${h.imageUrl}`,alt:h.name,className:"w-full h-64 object-cover"})})]})]})})]})})]})}catch(P){return Y.jsxs("div",{className:"h-full flex flex-col",children:[Y.jsx("div",{className:"bg-white border-b border-gray-200 shadow-sm sticky top-0 z-20",children:Y.jsx("div",{className:"flex items-center justify-between px-6 py-4",children:Y.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:"Service Management"})})}),Y.jsx("div",{className:"flex-1 flex items-center justify-center",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"Error Loading Services"}),Y.jsx("p",{className:"text-gray-600",children:"There was an error loading the service management section."})]})})]})}},Qo=()=>Y.jsxs(Y.Fragment,{children:[Y.jsx(Ht,{children:Y.jsx("title",{children:"Flight Log - Cruiser Aviation Platform"})}),Y.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[Y.jsxs("div",{className:"py-6",children:[Y.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:"Flight Log"}),Y.jsx("p",{className:"mt-2 text-gray-600",children:"Track and manage your flight hours"})]}),Y.jsx("div",{className:"bg-white shadow rounded-lg p-6",children:Y.jsxs("div",{className:"text-center text-gray-500",children:[Y.jsx("p",{children:"Flight logging functionality coming soon..."}),Y.jsx("p",{className:"mt-2",children:"This will include GPS tracking, photo documentation, and automatic hour logging."})]})})]})]}),Xo=({onVerificationComplete:t,onVerificationError:s,isVerifying:r,userId:i})=>{const n=e.useRef(null),[a,o]=e.useState({status:"idle",message:"Ready to start verification"}),[l,c]=e.useState(null),d=async()=>{if(!i)return o({status:"error",message:"No user ID provided for verification"}),void s("No user ID provided for verification");o({status:"loading",message:"Creating verification session..."});try{const e={userId:i},t=await fetch("https://api.cruiseraviation.com/api/veriff/create-session",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){if(404===t.status||0===t.status)return void(await u());throw new Error(`Failed to create session: ${t.status} ${t.statusText}`)}const s=await t.json();c(s.url||s.sessionUrl),o({status:"success",message:"Verification session created successfully"}),h(s)}catch(ul){const t=ul instanceof Error?ul.message:String(ul);if(t.includes("Failed to fetch")||t.includes("NetworkError"))return void(await u());o({status:"error",message:"Failed to create verification session"}),s("Failed to create verification session")}},u=async()=>{o({status:"loading",message:"Creating mock verification session..."}),await new Promise(e=>setTimeout(e,2e3));const e={sessionId:`mock_session_${Date.now()}`,sessionUrl:"https://cdn.veriff.me/sdk/js/1.1/veriff.min.js",timestamp:(new Date).toISOString()};c(e.sessionUrl),o({status:"success",message:"Mock verification session created successfully"}),h(e)},h=e=>{if(!n.current)return;const s={sessionId:e.sessionId,person:{firstName:"John",lastName:"Doe",dateOfBirth:"1985-06-15",nationality:"US",address:{street:"123 Main Street",city:"New York",state:"NY",country:"US",postalCode:"10001"}},document:{type:"PASSPORT",country:"US",number:"123456789"},verification:{status:"approved",timestamp:(new Date).toISOString()}};setTimeout(()=>{t(s)},3e3)};e.useEffect(()=>{r&&!l&&d()},[r]);const m=()=>{d()};return Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"ID Verification"}),Y.jsx("p",{className:"mt-1 text-sm text-gray-500",children:"Please verify your identity using our secure verification system."})]}),Y.jsx("div",{className:"bg-gray-50 rounded-lg p-4",children:Y.jsxs("div",{className:"flex items-center space-x-3",children:[(()=>{switch(a.status){case"loading":return Y.jsx(L,{className:"w-6 h-6 text-blue-500 animate-spin"});case"success":return Y.jsx(y,{className:"w-6 h-6 text-green-500"});case"error":return Y.jsx(M,{className:"w-6 h-6 text-red-500"});default:return Y.jsx(g,{className:"w-6 h-6 text-gray-400"})}})(),Y.jsxs("div",{children:[Y.jsx("p",{className:`text-sm font-medium ${(()=>{switch(a.status){case"loading":return"text-blue-600";case"success":return"text-green-600";case"error":return"text-red-600";default:return"text-gray-600"}})()}`,children:a.message}),Y.jsx("p",{className:"text-xs text-gray-500 mt-1",children:"This process typically takes 2-3 minutes"})]})]})}),Y.jsx("div",{className:"border-2 border-dashed border-gray-300 rounded-lg p-8",children:Y.jsx("div",{ref:n,className:"min-h-[400px] flex items-center justify-center",children:"idle"===a.status?Y.jsxs("div",{className:"text-center",children:[Y.jsx(g,{className:"w-16 h-16 text-gray-300 mx-auto mb-4"}),Y.jsx("h4",{className:"text-lg font-medium text-gray-900 mb-2",children:"Ready to Start Verification"}),Y.jsx("p",{className:"text-sm text-gray-500 mb-6",children:"Click the button below to begin the secure identity verification process."}),Y.jsxs("button",{onClick:m,disabled:r,className:"px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2 mx-auto",children:[Y.jsx(g,{className:"w-4 h-4"}),Y.jsx("span",{children:"Start Verification"})]})]}):"loading"===a.status?Y.jsxs("div",{className:"text-center",children:[Y.jsx(L,{className:"w-16 h-16 text-blue-500 animate-spin mx-auto mb-4"}),Y.jsx("h4",{className:"text-lg font-medium text-gray-900 mb-2",children:"Initializing Verification"}),Y.jsx("p",{className:"text-sm text-gray-500",children:"Please wait while we set up your verification session..."})]}):"success"===a.status?Y.jsxs("div",{className:"text-center",children:[Y.jsx(y,{className:"w-16 h-16 text-green-500 mx-auto mb-4"}),Y.jsx("h4",{className:"text-lg font-medium text-gray-900 mb-2",children:"Verification in Progress"}),Y.jsx("p",{className:"text-sm text-gray-500",children:"Please complete the verification steps in the widget below..."}),Y.jsxs("div",{className:"mt-4 p-4 bg-blue-50 rounded-md",children:[Y.jsx("p",{className:"text-sm text-blue-700",children:"🔄 Simulating Veriff widget integration..."}),Y.jsx("p",{className:"text-xs text-blue-600 mt-1",children:"In production, this would show the actual Veriff verification interface"})]})]}):Y.jsxs("div",{className:"text-center",children:[Y.jsx(M,{className:"w-16 h-16 text-red-500 mx-auto mb-4"}),Y.jsx("h4",{className:"text-lg font-medium text-gray-900 mb-2",children:"Verification Failed"}),Y.jsx("p",{className:"text-sm text-gray-500 mb-4",children:"There was an error creating your verification session."}),Y.jsx("button",{onClick:m,className:"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700",children:"Try Again"})]})})}),Y.jsxs("div",{className:"bg-blue-50 border border-blue-200 rounded-lg p-4",children:[Y.jsx("h4",{className:"text-sm font-medium text-blue-900 mb-2",children:"What you'll need for verification:"}),Y.jsxs("ul",{className:"text-sm text-blue-800 space-y-1",children:[Y.jsx("li",{children:"• A valid government-issued ID (passport, driver's license, or national ID)"}),Y.jsx("li",{children:"• A well-lit environment for face verification"}),Y.jsx("li",{children:"• A stable internet connection"}),Y.jsx("li",{children:"• 2-3 minutes of uninterrupted time"})]})]}),a.message.includes("mock")&&Y.jsx("div",{className:"bg-yellow-50 border border-yellow-200 rounded-lg p-4",children:Y.jsxs("div",{className:"flex items-start space-x-3",children:[Y.jsx(M,{className:"w-5 h-5 text-yellow-500 mt-0.5 flex-shrink-0"}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-sm font-medium text-yellow-900 mb-1",children:"Development Mode"}),Y.jsx("p",{className:"text-xs text-yellow-700",children:"Using mock verification data for development. In production, this would connect to the real Veriff service."})]})]})}),Y.jsx("div",{className:"bg-gray-50 border border-gray-200 rounded-lg p-4",children:Y.jsxs("div",{className:"flex items-start space-x-3",children:[Y.jsx(g,{className:"w-5 h-5 text-gray-500 mt-0.5 flex-shrink-0"}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-sm font-medium text-gray-900 mb-1",children:"Security & Privacy"}),Y.jsx("p",{className:"text-xs text-gray-600",children:"Your verification data is encrypted and processed securely. We comply with GDPR and aviation industry standards. Your information is only used for identity verification purposes."})]})]})})]})},Zo=()=>{const{user:t}=$a(),[s,r]=e.useState(!1),[i,n]=e.useState(!1),[a,o]=e.useState(1),[l,c]=e.useState(!1),[d,h]=e.useState(!1),[m,f]=e.useState({firstName:"",lastName:"",email:t?.email||"",phone:"",dateOfBirth:"",address:"",emergencyContact:"",medicalCertificate:null,idDocument:null,pilotLicense:"",flightHours:"",preferredAircraft:"",isProfileComplete:!1,veriffVerification:{isVerified:!1}}),[p,x]=e.useState(!0);e.useEffect(()=>{t?.email&&!m.email&&f(e=>({...e,email:t.email}))},[t,m.email]),e.useEffect(()=>{b()},[]),e.useEffect(()=>{(!m.firstName||!m.email||!m.phone)&&!p&&n(!0)},[m,p]);const b=async()=>{try{x(!0);const e=await fetch("https://api.cruiseraviation.com/api/auth/profile",{credentials:"include"});if(e.ok){const t=await e.json();if(f(e=>({...e,firstName:t.firstName||"",lastName:t.lastName||"",email:t.email||e.email||"",phone:t.phoneNumber||"",dateOfBirth:t.dateOfBirth?new Date(t.dateOfBirth).toISOString().split("T")[0]:"",address:t.address||"",pilotLicense:t.role||"",flightHours:t.totalFlightHours?.toString()||"",isProfileComplete:!!(t.firstName&&t.email&&t.phoneNumber),veriffVerification:{isVerified:t.veriffVerified||!1,sessionId:t.veriffData?.sessionId,verificationData:t.veriffData}})),t.veriffData){const e="string"==typeof t.veriffData?JSON.parse(t.veriffData):t.veriffData;e.address&&f(t=>({...t,address:`${e.address.street||""}, ${e.address.city||""}, ${e.address.country||""}`.trim()}))}}}catch(ul){}finally{x(!1)}},v=e=>{const{name:t,value:s}=e.target;f(e=>({...e,[t]:s}))},j=e=>{const{name:t,value:s}=e.target;f(e=>({...e,[t]:s}))},N=e=>{f(t=>({...t,veriffVerification:{isVerified:!0,sessionId:e.sessionId,verificationData:e}})),e.person&&f(t=>({...t,firstName:e.person.firstName||t.firstName,lastName:e.person.lastName||t.lastName,dateOfBirth:e.person.dateOfBirth||t.dateOfBirth,address:e.person.address?`${e.person.address.street||""}, ${e.person.address.city||""}, ${e.person.address.country||""}`.trim():t.address})),h(!1),setTimeout(()=>{C()},1e3)},w=e=>{h(!1)},k=async()=>{c(!0);try{await new Promise(e=>setTimeout(e,1e3)),r(!1),f(e=>({...e,isProfileComplete:!0})),n(!1)}catch(ul){}finally{c(!1)}},C=()=>{a<4&&o(a+1)};return Y.jsxs(Y.Fragment,{children:[Y.jsx(Ht,{children:Y.jsx("title",{children:"Profile - Cruiser Aviation Platform"})}),Y.jsx("div",{className:"max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8",children:p?Y.jsx("div",{className:"bg-white shadow rounded-lg p-6",children:Y.jsx("div",{className:"flex items-center justify-center py-12",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-4"}),Y.jsx("p",{className:"text-gray-600",children:"Loading profile..."})]})})}):i?Y.jsxs("div",{className:"bg-white shadow rounded-lg",children:[Y.jsxs("div",{className:"px-6 py-4 border-b border-gray-200",children:[Y.jsx("h2",{className:"text-xl font-semibold text-gray-900",children:"Complete Your Profile"}),Y.jsxs("p",{className:"text-sm text-gray-500 mt-1",children:["Step ",a," of 4"]})]}),Y.jsx("div",{className:"px-6 py-4 bg-gray-50",children:Y.jsx("div",{className:"w-full bg-gray-200 rounded-full h-2",children:Y.jsx("div",{className:"bg-blue-600 h-2 rounded-full transition-all duration-300",style:{width:a/4*100+"%"}})})}),Y.jsx("div",{className:"p-6",children:(()=>{switch(a){case 1:return t&&t.id?t?.id?Y.jsx(Xo,{onVerificationComplete:N,onVerificationError:w,isVerifying:d,userId:t.id}):Y.jsx("div",{className:"text-center py-8",children:Y.jsx("p",{className:"text-gray-600",children:"Loading user information..."})}):Y.jsxs("div",{className:"text-center py-12",children:[Y.jsx(M,{className:"w-12 h-12 text-red-500 mx-auto mb-4"}),Y.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"Authentication Required"}),Y.jsx("p",{className:"text-gray-600 mb-4",children:"You need to be properly authenticated to proceed with ID verification."}),Y.jsxs("p",{className:"text-sm text-gray-500",children:["User ID: ",t?.id||"Not available"]}),Y.jsxs("p",{className:"text-sm text-gray-500",children:["Loading: ",p?"Yes":"No"]})]});case 2:return Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Personal Information"}),Y.jsx("p",{className:"mt-1 text-sm text-gray-500",children:"Let's start with your basic information."}),m.veriffVerification.isVerified&&Y.jsx("div",{className:"mt-2 p-3 bg-green-50 border border-green-200 rounded-md",children:Y.jsxs("div",{className:"flex items-center space-x-2",children:[Y.jsx(y,{className:"w-4 h-4 text-green-500"}),Y.jsx("span",{className:"text-sm text-green-700",children:"Some fields have been pre-filled from your ID verification"})]})})]}),Y.jsxs("div",{className:"grid grid-cols-1 gap-6 sm:grid-cols-2",children:[Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"firstName",className:"block text-sm font-medium text-gray-700",children:"First Name *"}),Y.jsx("input",{type:"text",name:"firstName",id:"firstName",value:m.firstName,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",required:!0}),m.veriffVerification.isVerified&&m.firstName&&Y.jsx("p",{className:"mt-1 text-xs text-green-600",children:"✓ Pre-filled from ID verification"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"lastName",className:"block text-sm font-medium text-gray-700",children:"Last Name *"}),Y.jsx("input",{type:"text",name:"lastName",id:"lastName",value:m.lastName,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",required:!0}),m.veriffVerification.isVerified&&m.lastName&&Y.jsx("p",{className:"mt-1 text-xs text-green-600",children:"✓ Pre-filled from ID verification"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"email",className:"block text-sm font-medium text-gray-700",children:"Email *"}),Y.jsx("input",{type:"email",name:"email",id:"email",value:m.email,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm bg-gray-50",required:!0,readOnly:!!t?.email,title:t?.email?"Email cannot be changed as it's linked to your account":""}),t?.email&&m.email===t.email&&Y.jsx("p",{className:"mt-1 text-xs text-green-600",children:"✓ Pre-filled from login data"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"phone",className:"block text-sm font-medium text-gray-700",children:"Phone Number *"}),Y.jsx("input",{type:"tel",name:"phone",id:"phone",value:m.phone,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",required:!0})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"dateOfBirth",className:"block text-sm font-medium text-gray-700",children:"Date of Birth"}),Y.jsx("input",{type:"date",name:"dateOfBirth",id:"dateOfBirth",value:m.dateOfBirth,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"}),m.veriffVerification.isVerified&&m.dateOfBirth&&Y.jsx("p",{className:"mt-1 text-xs text-green-600",children:"✓ Pre-filled from ID verification"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"emergencyContact",className:"block text-sm font-medium text-gray-700",children:"Emergency Contact"}),Y.jsx("input",{type:"text",name:"emergencyContact",id:"emergencyContact",value:m.emergencyContact,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"address",className:"block text-sm font-medium text-gray-700",children:"Address"}),Y.jsx("input",{type:"text",name:"address",id:"address",value:m.address,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"}),m.veriffVerification.isVerified&&m.address&&Y.jsx("p",{className:"mt-1 text-xs text-green-600",children:"✓ Pre-filled from ID verification"})]})]});case 3:return Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Aviation Details"}),Y.jsx("p",{className:"mt-1 text-sm text-gray-500",children:"Tell us about your aviation experience."})]}),Y.jsxs("div",{className:"grid grid-cols-1 gap-6 sm:grid-cols-2",children:[Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"pilotLicense",className:"block text-sm font-medium text-gray-700",children:"Pilot License Type"}),Y.jsxs("select",{name:"pilotLicense",id:"pilotLicense",value:m.pilotLicense,onChange:j,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",children:[Y.jsx("option",{value:"",children:"Select license type"}),Y.jsx("option",{value:"student",children:"Student Pilot"}),Y.jsx("option",{value:"private",children:"Private Pilot"}),Y.jsx("option",{value:"commercial",children:"Commercial Pilot"}),Y.jsx("option",{value:"atp",children:"Airline Transport Pilot"}),Y.jsx("option",{value:"none",children:"No license yet"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"flightHours",className:"block text-sm font-medium text-gray-700",children:"Total Flight Hours"}),Y.jsx("input",{type:"number",name:"flightHours",id:"flightHours",value:m.flightHours,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",placeholder:"0"})]}),Y.jsxs("div",{className:"sm:col-span-2",children:[Y.jsx("label",{htmlFor:"preferredAircraft",className:"block text-sm font-medium text-gray-700",children:"Preferred Aircraft Type"}),Y.jsxs("select",{name:"preferredAircraft",id:"preferredAircraft",value:m.preferredAircraft,onChange:j,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",children:[Y.jsx("option",{value:"",children:"Select preferred aircraft"}),Y.jsx("option",{value:"cessna-172",children:"Cessna 172"}),Y.jsx("option",{value:"piper-pa28",children:"Piper PA-28"}),Y.jsx("option",{value:"diamond-da40",children:"Diamond DA40"}),Y.jsx("option",{value:"cirrus-sr20",children:"Cirrus SR20"}),Y.jsx("option",{value:"no-preference",children:"No preference"})]})]})]})]});case 4:return Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Review & Save"}),Y.jsx("p",{className:"mt-1 text-sm text-gray-500",children:"Please review your information before saving."})]}),Y.jsx("div",{className:"bg-gray-50 p-4 rounded-md",children:Y.jsxs("dl",{className:"grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2",children:[Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Name"}),Y.jsxs("dd",{className:"mt-1 text-sm text-gray-900",children:[m.firstName," ",m.lastName]})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Email"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.email})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Phone"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.phone})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Date of Birth"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.dateOfBirth||"Not provided"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"License Type"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.pilotLicense||"Not specified"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Flight Hours"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.flightHours||"0"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Preferred Aircraft"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.preferredAircraft||"No preference"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"ID Verification"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.veriffVerification.isVerified?"✓ Verified via Veriff":"✗ Not verified"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Medical Certificate"}),Y.jsx("dd",{className:"mt-1 text-sm text-gray-900",children:m.medicalCertificate?"✓ Uploaded":"Optional"})]})]})})]});default:return null}})()}),Y.jsxs("div",{className:"px-6 py-4 border-t border-gray-200 bg-gray-50 flex justify-between",children:[Y.jsx("button",{onClick:()=>{a>1&&o(a-1)},disabled:1===a,className:"px-4 py-2 border border-gray-300 rounded-md text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",children:"Previous"}),Y.jsx("button",{onClick:C,disabled:4===a,className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",children:4===a?"Complete Profile":"Next"})]})]}):s?Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"flex items-center justify-between",children:[Y.jsx("h2",{className:"text-xl font-semibold text-gray-900",children:"Edit Profile"}),Y.jsxs("div",{className:"flex space-x-3",children:[Y.jsx("button",{onClick:()=>r(!1),className:"px-4 py-2 border border-gray-300 rounded-md text-sm hover:bg-gray-50",children:"Cancel"}),Y.jsxs("button",{onClick:k,disabled:l,className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800 disabled:opacity-50 flex items-center space-x-2",children:[Y.jsx(F,{className:"w-4 h-4"}),Y.jsx("span",{children:l?"Saving...":"Save Changes"})]})]})]}),Y.jsx("div",{className:"bg-white shadow rounded-lg p-6",children:Y.jsxs("div",{className:"grid grid-cols-1 gap-6 sm:grid-cols-2",children:[Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editFirstName",className:"block text-sm font-medium text-gray-700",children:"First Name"}),Y.jsx("input",{type:"text",name:"firstName",id:"editFirstName",value:m.firstName,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editLastName",className:"block text-sm font-medium text-gray-700",children:"Last Name"}),Y.jsx("input",{type:"text",name:"lastName",id:"editLastName",value:m.lastName,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editEmail",className:"block text-sm font-medium text-gray-700",children:"Email"}),Y.jsx("input",{type:"email",name:"email",id:"editEmail",value:m.email,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editPhone",className:"block text-sm font-medium text-gray-700",children:"Phone Number"}),Y.jsx("input",{type:"tel",name:"phone",id:"editPhone",value:m.phone,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editDateOfBirth",className:"block text-sm font-medium text-gray-700",children:"Date of Birth"}),Y.jsx("input",{type:"date",name:"dateOfBirth",id:"editDateOfBirth",value:m.dateOfBirth,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editEmergencyContact",className:"block text-sm font-medium text-gray-700",children:"Emergency Contact"}),Y.jsx("input",{type:"text",name:"emergencyContact",id:"editEmergencyContact",value:m.emergencyContact,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{className:"sm:col-span-2",children:[Y.jsx("label",{htmlFor:"editAddress",className:"block text-sm font-medium text-gray-700",children:"Address"}),Y.jsx("input",{type:"text",name:"address",id:"editAddress",value:m.address,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editPilotLicense",className:"block text-sm font-medium text-gray-700",children:"Pilot License Type"}),Y.jsxs("select",{name:"pilotLicense",id:"editPilotLicense",value:m.pilotLicense,onChange:j,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",children:[Y.jsx("option",{value:"",children:"Select license type"}),Y.jsx("option",{value:"student",children:"Student Pilot"}),Y.jsx("option",{value:"private",children:"Private Pilot"}),Y.jsx("option",{value:"commercial",children:"Commercial Pilot"}),Y.jsx("option",{value:"atp",children:"Airline Transport Pilot"}),Y.jsx("option",{value:"none",children:"No license yet"})]})]}),Y.jsxs("div",{children:[Y.jsx("label",{htmlFor:"editFlightHours",className:"block text-sm font-medium text-gray-700",children:"Total Flight Hours"}),Y.jsx("input",{type:"number",name:"flightHours",id:"editFlightHours",value:m.flightHours,onChange:v,className:"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",placeholder:"0"})]})]})})]}):Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"flex items-center justify-between",children:[Y.jsxs("div",{className:"flex items-center space-x-4",children:[Y.jsx("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center",children:Y.jsx(O,{className:"w-8 h-8 text-gray-500"})}),Y.jsxs("div",{children:[Y.jsx("h2",{className:"text-xl font-semibold text-gray-900",children:m.firstName&&m.lastName?`${m.firstName} ${m.lastName}`:"Complete Your Profile"}),Y.jsx("p",{className:"text-sm text-gray-500",children:m.email||"Email not provided"})]})]}),Y.jsxs("button",{onClick:()=>r(!0),className:"px-4 py-2 bg-black text-white rounded-md text-sm hover:bg-gray-800 flex items-center space-x-2",children:[Y.jsx(U,{className:"w-4 h-4"}),Y.jsx("span",{children:"Edit Profile"})]})]}),!m.isProfileComplete&&Y.jsx("div",{className:"bg-yellow-50 border border-yellow-200 rounded-md p-4",children:Y.jsxs("div",{className:"flex",children:[Y.jsx(M,{className:"w-5 h-5 text-yellow-400"}),Y.jsxs("div",{className:"ml-3",children:[Y.jsx("h3",{className:"text-sm font-medium text-yellow-800",children:"Profile Incomplete"}),Y.jsx("p",{className:"text-sm text-yellow-700 mt-1",children:"Please complete your profile to access all features."})]})]})}),Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsxs("h3",{className:"text-lg font-medium text-gray-900 mb-4 flex items-center",children:[Y.jsx(O,{className:"w-5 h-5 mr-2"}),"Personal Information"]}),Y.jsxs("dl",{className:"space-y-3",children:[Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Full Name"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.firstName&&m.lastName?`${m.firstName} ${m.lastName}`:"Not provided"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Email"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.email||"Not provided"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Phone"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.phone||"Not provided"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Date of Birth"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.dateOfBirth||"Not provided"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Address"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.address||"Not provided"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Emergency Contact"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.emergencyContact||"Not provided"})]})]})]}),Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsxs("h3",{className:"text-lg font-medium text-gray-900 mb-4 flex items-center",children:[Y.jsx(u,{className:"w-5 h-5 mr-2"}),"Aviation Information"]}),Y.jsxs("dl",{className:"space-y-3",children:[Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Pilot License"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.pilotLicense||"Not specified"})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Flight Hours"}),Y.jsxs("dd",{className:"text-sm text-gray-900",children:[m.flightHours||"0"," hours"]})]}),Y.jsxs("div",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500",children:"Preferred Aircraft"}),Y.jsx("dd",{className:"text-sm text-gray-900",children:m.preferredAircraft||"No preference"})]})]})]})]}),Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsxs("h3",{className:"text-lg font-medium text-gray-900 mb-4 flex items-center",children:[Y.jsx(A,{className:"w-5 h-5 mr-2"}),"Documents"]}),Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[Y.jsxs("div",{className:"border border-gray-200 rounded-md p-4",children:[Y.jsxs("div",{className:"flex items-center justify-between",children:[Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-sm font-medium text-gray-900",children:"ID Verification"}),Y.jsx("p",{className:"text-sm text-gray-500",children:"Verified via Veriff"})]}),m.veriffVerification.isVerified?Y.jsx(y,{className:"w-5 h-5 text-green-500"}):Y.jsx(M,{className:"w-5 h-5 text-yellow-500"})]}),!m.veriffVerification.isVerified&&Y.jsxs("button",{onClick:()=>h(!0),className:"mt-3 w-full px-3 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 flex items-center justify-center space-x-2",children:[Y.jsx(g,{className:"w-4 h-4"}),Y.jsx("span",{children:"Start Verification"})]})]}),Y.jsx("div",{className:"border border-gray-200 rounded-md p-4",children:Y.jsxs("div",{className:"flex items-center justify-between",children:[Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-sm font-medium text-gray-900",children:"Medical Certificate"}),Y.jsx("p",{className:"text-sm text-gray-500",children:"Aviation medical certificate"})]}),m.medicalCertificate?Y.jsx(y,{className:"w-5 h-5 text-green-500"}):Y.jsx(M,{className:"w-5 h-5 text-yellow-500"})]})})]})]})]})}),d&&Y.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:Y.jsxs("div",{className:"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 flex flex-col max-h-[90vh]",children:[Y.jsxs("div",{className:"flex items-center justify-between px-6 py-4 border-b border-gray-200",children:[Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"ID Verification"}),Y.jsx("button",{onClick:()=>h(!1),className:"text-gray-400 hover:text-gray-600",children:Y.jsx("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M6 18L18 6M6 6l12 12"})})})]}),Y.jsx("div",{className:"flex-1 overflow-y-auto p-6",children:Y.jsx(Xo,{onVerificationComplete:N,onVerificationError:w,isVerifying:d,userId:t?.id||""})})]})})]})},el=()=>Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6",children:[Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Total Flight Hours"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"127.5"})]})})]})})}),Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Remaining Credits"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"8.5 hours"})]})})]})})}),Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Next Flight"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"Tomorrow 10:00 AM"})]})})]})})}),Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-yellow-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"This Month"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"12.5 hours"})]})})]})})})]}),Y.jsxs("div",{className:"bg-white shadow rounded-lg",children:[Y.jsx("div",{className:"px-6 py-4 border-b border-gray-200",children:Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Recent Activity"})}),Y.jsx("div",{className:"divide-y divide-gray-200",children:Y.jsx("div",{className:"px-6 py-4",children:Y.jsxs("div",{className:"flex items-center justify-between",children:[Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center",children:Y.jsx("svg",{className:"w-4 h-4 text-blue-600",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 19l9 2-9-18-9 18 9-2zm0 0v-8"})})})}),Y.jsxs("div",{className:"ml-4",children:[Y.jsx("div",{className:"text-sm font-medium text-gray-900",children:"Training Flight - Cessna 172"}),Y.jsx("div",{className:"text-sm text-gray-500",children:"Instructor: John Smith"})]})]}),Y.jsxs("div",{className:"text-right",children:[Y.jsx("div",{className:"text-sm font-medium text-gray-900",children:"2.5 hours"}),Y.jsx("div",{className:"text-sm text-gray-500",children:"Dec 15, 2024"})]})]})})})]})]}),tl=()=>Y.jsxs("div",{className:"space-y-6",children:[Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6",children:[Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Total Users"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"1,234"})]})})]})})}),Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-green-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 19l9 2-9-18-9 18 9-2zm0 0v-8"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Active Flights"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"23"})]})})]})})}),Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Active Bases"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"8"})]})})]})})}),Y.jsx("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:Y.jsx("div",{className:"p-5",children:Y.jsxs("div",{className:"flex items-center",children:[Y.jsx("div",{className:"flex-shrink-0",children:Y.jsx("div",{className:"w-8 h-8 bg-yellow-500 rounded-md flex items-center justify-center",children:Y.jsx("svg",{className:"w-5 h-5 text-white",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:Y.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"})})})}),Y.jsx("div",{className:"ml-5 w-0 flex-1",children:Y.jsxs("dl",{children:[Y.jsx("dt",{className:"text-sm font-medium text-gray-500 truncate",children:"Revenue This Month"}),Y.jsx("dd",{className:"text-lg font-medium text-gray-900",children:"€45,678"})]})})]})})})]}),Y.jsxs("div",{className:"bg-white shadow rounded-lg",children:[Y.jsx("div",{className:"px-6 py-4 border-b border-gray-200",children:Y.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"System Overview"})}),Y.jsx("div",{className:"p-6",children:Y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-sm font-medium text-gray-900 mb-3",children:"Recent Activity"}),Y.jsxs("div",{className:"space-y-3",children:[Y.jsxs("div",{className:"flex items-center text-sm",children:[Y.jsx("div",{className:"w-2 h-2 bg-green-400 rounded-full mr-3"}),Y.jsx("span",{className:"text-gray-600",children:"New user registration"})]}),Y.jsxs("div",{className:"flex items-center text-sm",children:[Y.jsx("div",{className:"w-2 h-2 bg-blue-400 rounded-full mr-3"}),Y.jsx("span",{className:"text-gray-600",children:"Flight scheduled"})]}),Y.jsxs("div",{className:"flex items-center text-sm",children:[Y.jsx("div",{className:"w-2 h-2 bg-yellow-400 rounded-full mr-3"}),Y.jsx("span",{className:"text-gray-600",children:"Maintenance alert"})]})]})]}),Y.jsxs("div",{children:[Y.jsx("h4",{className:"text-sm font-medium text-gray-900 mb-3",children:"Quick Actions"}),Y.jsxs("div",{className:"space-y-2",children:[Y.jsx("button",{className:"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-md",children:"Add New User"}),Y.jsx("button",{className:"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-md",children:"Schedule Flight"}),Y.jsx("button",{className:"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 rounded-md",children:"View Reports"})]})]})]})})]})]}),sl=({userRole:t="user"})=>{const[s,r]=e.useState("dashboard"),i=(()=>{const e=["dashboard"];switch(t){case"super_admin":return[...e,"users","roles","bases","fleet","services","flights","reports","settings"];case"admin":return[...e,"users","bases","fleet","services","flights","reports","settings"];case"base_manager":return[...e,"users","bases","fleet","services","flights","settings"];default:return[...e,"flights","flightlog","services","invoices","payments","bases","fleet","profile","settings"]}})();return Y.jsx($o,{activeSection:s,onSectionChange:r,userType:"user"===t?"user":"admin",title:("user"===t?"User":"Admin")+" Dashboard - Cruiser Aviation Platform",children:(()=>{if(!i.includes(s))return Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Access Denied"}),Y.jsx("p",{className:"text-gray-600",children:"You don't have permission to access this section."})]});switch(s){case"dashboard":default:return"user"===t?Y.jsx(el,{}):Y.jsx(tl,{});case"users":return Y.jsx(Wo,{});case"bases":return Y.jsx(Ko,{userRole:t});case"fleet":return Y.jsx(Go,{userRole:t});case"roles":return Y.jsx(Jo,{});case"services":return Y.jsx(Yo,{userRole:t});case"flights":return Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Flight Management"}),Y.jsx("p",{className:"text-gray-600",children:"Flight management interface coming soon..."})]});case"reports":return Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Reports & Analytics"}),Y.jsx("p",{className:"text-gray-600",children:"Reports and analytics section coming soon..."})]});case"flightlog":return Y.jsx(Qo,{});case"profile":return Y.jsx(Zo,{});case"invoices":return Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Invoices"}),Y.jsx("p",{className:"text-gray-600",children:"Invoice management coming soon..."})]});case"payments":return Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Payments"}),Y.jsx("p",{className:"text-gray-600",children:"Payment management coming soon..."})]});case"settings":return Y.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[Y.jsx("h2",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Settings"}),Y.jsx("p",{className:"text-gray-600",children:"Settings management coming soon..."})]})}})()})},rl=()=>Y.jsxs(Y.Fragment,{children:[Y.jsx(Ht,{children:Y.jsx("title",{children:"404 - Page Not Found"})}),Y.jsx("div",{className:"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8",children:Y.jsxs("div",{className:"max-w-md w-full text-center",children:[Y.jsx("div",{className:"text-6xl font-bold text-gray-900 mb-4",children:"404"}),Y.jsx("h1",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Page Not Found"}),Y.jsx("p",{className:"text-gray-600 mb-8",children:"The page you're looking for doesn't exist or has been moved."}),Y.jsx(n,{to:"/",className:"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",children:"Go back home"})]})})]}),il=()=>{const[t,s]=e.useState(!0),[r,i]=e.useState(null),n=l(),[a]=c();e.useEffect(()=>{const e=a.get("token");if(!e)return i("No verification token provided"),void s(!1);o(e)},[a]);const o=async e=>{try{const t=await fetch("/api/auth/verify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e})}),r=await t.json();t.ok?(localStorage.setItem("access_token",r.access_token),window.location.href="super_admin"===r.user?.role||"base_manager"===r.user?.role?"/admin":"/dashboard"):(i(r.message||"Invalid magic link"),s(!1))}catch(t){i("Network error during verification"),s(!1)}};return t?Y.jsx("div",{className:"min-h-screen flex items-center justify-center bg-gray-50",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"}),Y.jsx("p",{className:"mt-4 text-gray-600",children:"Verifying your magic link..."})]})}):r?Y.jsx("div",{className:"min-h-screen flex items-center justify-center bg-gray-50",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("div",{className:"text-red-600 text-6xl mb-4",children:"⚠️"}),Y.jsx("h1",{className:"text-2xl font-bold text-gray-900 mb-4",children:"Verification Failed"}),Y.jsx("p",{className:"text-gray-600 mb-8",children:r}),Y.jsx("button",{onClick:()=>n("/login"),className:"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700",children:"Back to Login"})]})}):null},nl=({children:t})=>{const{user:s,loading:r}=$a(),[i,n]=e.useState(!1);return e.useEffect(()=>{const e=setTimeout(()=>{r&&n(!0)},3e3);return()=>clearTimeout(e)},[r]),(r||s||i)&&r&&!i?Y.jsx("div",{className:"min-h-screen flex items-center justify-center",children:Y.jsx(Ho,{size:"lg"})}):Y.jsx(Y.Fragment,{children:t})},al=({children:t})=>{const{user:s,loading:r}=$a(),[i,n]=e.useState(!1);return e.useEffect(()=>{const e=setTimeout(()=>{r&&n(!0)},3e3);return()=>clearTimeout(e)},[r]),(r||s||i)&&r&&!i?Y.jsx("div",{className:"min-h-screen flex items-center justify-center",children:Y.jsx(Ho,{size:"lg"})}):Y.jsx(Y.Fragment,{children:t})};function ol(){return Y.jsxs(Y.Fragment,{children:[Y.jsxs(Ht,{children:[Y.jsx("title",{children:"Cruiser Aviation Platform"}),Y.jsx("meta",{name:"description",content:"Modern flight school and aircraft rental management system"})]}),Y.jsxs(a,{children:[Y.jsx(o,{path:"/",element:Y.jsx(Vo,{})}),Y.jsx(o,{path:"/login",element:Y.jsx(zo,{})}),Y.jsx(o,{path:"/verify",element:Y.jsx(il,{})}),Y.jsx(o,{path:"/dashboard",element:Y.jsx(nl,{children:Y.jsx(sl,{userRole:"user"})})}),Y.jsx(o,{path:"/admin",element:Y.jsx(al,{children:Y.jsx(sl,{userRole:"super_admin"})})}),Y.jsx(o,{path:"/test",element:Y.jsx("div",{className:"min-h-screen bg-green-50 flex items-center justify-center",children:Y.jsxs("div",{className:"text-center",children:[Y.jsx("h1",{className:"text-4xl font-bold text-green-900 mb-4",children:"Test Route Working!"}),Y.jsx("p",{className:"text-xl text-green-700",children:"React Router is functioning correctly."})]})})}),Y.jsx(o,{path:"*",element:Y.jsx(rl,{})})]})]})}const ll=e.createContext(void 0),cl=({children:t})=>{const[s,r]=e.useState(()=>localStorage.getItem("theme")||"light"),i=e=>{r(e),localStorage.setItem("theme",e),"dark"===e?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")};e.useEffect(()=>{"dark"===s?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")},[s]);const n={theme:s,toggleTheme:()=>{i("light"===s?"dark":"light")},setTheme:i};return Y.jsx(ll.Provider,{value:n,children:t})},dl=new Le({defaultOptions:{queries:{retry:1,refetchOnWindowFocus:!1,staleTime:3e5}}});Q.createRoot(document.getElementById("root")).render(Y.jsx(r.StrictMode,{children:Y.jsx(Ot,{children:Y.jsx(He,{client:dl,children:Y.jsx(d,{children:Y.jsx(qa,{children:Y.jsxs(cl,{children:[Y.jsx(ol,{}),Y.jsx(B,{position:"top-right",toastOptions:{duration:4e3,style:{background:"#363636",color:"#fff"},success:{duration:3e3,iconTheme:{primary:"#22c55e",secondary:"#fff"}},error:{duration:5e3,iconTheme:{primary:"#ef4444",secondary:"#fff"}}}})]})})})})})}));
